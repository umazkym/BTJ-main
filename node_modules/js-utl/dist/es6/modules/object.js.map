{"version":3,"sources":["../../../src/modules/object.js"],"names":["defaultObjectComparator","a","b","objectMin","obj","comparator","returnAsKeyVal","min","key","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,uBAAuB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAApE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,SAAS,GAAG,CACvBC,GADuB,EAEvB;AAAEC,EAAAA,UAAU,GAAGL,uBAAf;AAAwCM,EAAAA,cAAc,GAAG;AAAzD,IAAmE,EAF5C,KAGpB;AACH,QAAMC,GAAG,GAAG;AAAEC,IAAAA,GAAG,EAAE,KAAK,CAAZ;AAAeC,IAAAA,KAAK,EAAE,KAAK;AAA3B,GAAZ;;AACA,OAAK,MAAMD,GAAX,IAAkBJ,GAAlB,EAAuB;AACrB,UAAMK,KAAK,GAAGL,GAAG,CAACI,GAAD,CAAjB;;AACA,QAAI,OAAOD,GAAG,CAACC,GAAX,KAAmB,WAAnB,IAAkCH,UAAU,CAACI,KAAD,EAAQF,GAAG,CAACE,KAAZ,CAAV,GAA+B,CAArE,EAAwE;AACtEF,MAAAA,GAAG,CAACC,GAAJ,GAAUA,GAAV;AACAD,MAAAA,GAAG,CAACE,KAAJ,GAAYA,KAAZ;AACD;AACF;;AACD,SAAOH,cAAc,GAAGC,GAAH,GAASA,GAAG,CAACE,KAAlC;AACD,CAbM","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Object-related utility functions.\n */\n\n/**\n * @type {Function}\n */\nconst defaultObjectComparator = (a, b) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Finds the minimum value of an object.\n *\n * @param {Object} obj An object.\n * @param {Object} [options] An optional object with further options.\n * @param {(a: *, c: *) => number} [options.comparator] A comparator function receiving two values as arguments which must return a number less than 0 if the first\n *                                                      given value is the new minimum value.\n * @param {boolean} [options.returnAsKeyVal] True to return an object containing two properties `value` and `key`, namely the minimum value's key\n *                                           (`key` property) as well as the minimum value itself (`value` property).\n * @return {*} The minimum value or an object with the key and the minimum value if \"returnAsKeyVal\" is truthy.\n */\nexport const objectMin = (\n  obj,\n  { comparator = defaultObjectComparator, returnAsKeyVal = false } = {}\n) => {\n  const min = { key: void 0, value: void 0 };\n  for (const key in obj) {\n    const value = obj[key];\n    if (typeof min.key === \"undefined\" || comparator(value, min.value) < 0) {\n      min.key = key;\n      min.value = value;\n    }\n  }\n  return returnAsKeyVal ? min : min.value;\n};\n"],"file":"object.js"}