{"version":3,"sources":["../../../../src/modules/core/compare.js"],"names":["hasOwnProperty","Object","prototype","is","x","y","objectPropEqual","objA","objB","prop","call","shallowEqual","keysA","keys","keysB","length","i"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,EAAT,CAAYC,CAAZ,EAAeC,CAAf,EAAkB;AACvB;AACA,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX;AACA;AACA,WAAOD,CAAC,KAAK,CAAN,IAAW,IAAIA,CAAJ,KAAU,IAAIC,CAAhC;AACD,GAJD,MAIO;AACL;AACA,WAAOD,CAAC,KAAKA,CAAN,IAAWC,CAAC,KAAKA,CAAxB;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2C;AAChD,SAAOT,cAAc,CAACU,IAAf,CAAoBF,IAApB,EAA0BC,IAA1B,KAAmCN,EAAE,CAACI,IAAI,CAACE,IAAD,CAAL,EAAaD,IAAI,CAACC,IAAD,CAAjB,CAA5C;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,YAAT,CAAsBJ,IAAtB,EAA4BC,IAA5B,EAAkC;AACvC,MAAIL,EAAE,CAACI,IAAD,EAAOC,IAAP,CAAN,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MACE,OAAOD,IAAP,KAAgB,QAAhB,IACAA,IAAI,KAAK,IADT,IAEA,OAAOC,IAAP,KAAgB,QAFhB,IAGAA,IAAI,KAAK,IAJX,EAKE;AACA,WAAO,KAAP;AACD;;AAED,QAAMI,KAAK,GAAGX,MAAM,CAACY,IAAP,CAAYN,IAAZ,CAAd;AACA,QAAMO,KAAK,GAAGb,MAAM,CAACY,IAAP,CAAYL,IAAZ,CAAd;;AAEA,MAAII,KAAK,CAACG,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD,GAnBsC,CAqBvC;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACG,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,UAAMP,IAAI,GAAGG,KAAK,CAACI,CAAD,CAAlB;;AACA,QAAI,CAACV,eAAe,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAApB,EAAwC;AACtC,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n *\n */\n\n/**\n * @type {Function}\n */\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Function implementing \"Object.is\" behaviour.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n *\n * @param {*} x The first value to compare.\n * @param {*} y The second value to compare.\n * @return {boolean} A boolean indicating whether or not the two arguments are the same value.\n */\nexport function is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Checks whether a prop of an object equals in the other object (shallow comparison).\n *\n * @param {Object} objA The first object.\n * @param {Object} objB The second object.\n * @param {string} prop The name of the property.\n * @return {boolean} True if the value of \"prop\" in \"objA\" is shallowly equal to the value of \"prop\" in \"objB\".\n */\nexport function objectPropEqual(objA, objB, prop) {\n  return hasOwnProperty.call(objB, prop) && is(objA[prop], objB[prop]);\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning \"false\"\n * when any key has values which are not strictly equal between the arguments.\n * Returns \"true\" when the values of all keys are strictly equal.\n *\n * @see https://stackoverflow.com/questions/22266826/how-can-i-do-a-shallow-comparison-of-the-properties-of-two-objects-with-javascri#answer-37636728\n *\n * @param {*} objA First object.\n * @param {*} objB Second object.\n * @return {boolean}\n */\nexport function shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    const prop = keysA[i];\n    if (!objectPropEqual(objA, objB, prop)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"file":"compare.js"}