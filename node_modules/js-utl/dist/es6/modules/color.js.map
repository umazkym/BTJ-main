{"version":3,"sources":["../../../src/modules/color.js"],"names":["hashString","getLuminance","color","c","parseInt","r","g","b","intToRGBHexString","i","toString","toUpperCase","substring","length","colorFromString","str","hash"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,QAA3B;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,QAAMC,CAAC,GAAGC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAlB;AACA,QAAMG,CAAC,GAAG,CAACF,CAAC,GAAG,QAAL,KAAkB,EAA5B;AACA,QAAMG,CAAC,GAAG,CAACH,CAAC,GAAG,QAAL,KAAkB,CAA5B;AACA,QAAMI,CAAC,GAAGJ,CAAC,GAAG,QAAd;AACA,SAAO,QAAQE,CAAR,GAAY,QAAQC,CAApB,GAAwB,QAAQC,CAAvC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AACnC,QAAMN,CAAC,GAAG,CAACM,CAAC,GAAG,UAAL,EAAiBC,QAAjB,CAA0B,EAA1B,EAA8BC,WAA9B,EAAV;AACA,SAAO,QAAQC,SAAR,CAAkB,CAAlB,EAAqB,IAAIT,CAAC,CAACU,MAA3B,IAAqCV,CAA5C;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMW,eAAe,GAAGC,GAAG,IAAI;AACpC,QAAMC,IAAI,GAAGhB,UAAU,CAACe,GAAD,CAAvB;AACA,SAAOP,iBAAiB,CAACQ,IAAD,CAAxB;AACD,CAHM","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { hashString } from \"./hash\";\n\n/**\n * Color-related utility functions.\n */\n\n/**\n * Gets a color's luminance.\n *\n * @param {number} color Color int value (RGB).\n * @return {number} An int greater than 160 if the color is considered dark and less than or\n *                  equal to 160 if the color is considered light.\n */\nexport function getLuminance(color) {\n  const c = parseInt(color, 16);\n  const r = (c & 0xff0000) >> 16;\n  const g = (c & 0x00ff00) >> 8;\n  const b = c & 0x0000ff;\n  return 0.299 * r + 0.587 * g + 0.114 * b;\n}\n\n/**\n * Converts an integer to an RGB hex (hexadecimal) string.\n *\n * @param {number} i An integer.\n * @return {string} An RGB hex string (uppercase).\n */\nexport function intToRGBHexString(i) {\n  const c = (i & 0x00ffffff).toString(16).toUpperCase();\n  return \"00000\".substring(0, 6 - c.length) + c;\n}\n\n/**\n * Converts a string to an RGB hex (hexadecimal) string representing a color.\n *\n * @param {string} str The string.\n * @return {string} The color as an RGB hex string (uppercase).\n */\nexport const colorFromString = str => {\n  const hash = hashString(str);\n  return intToRGBHexString(hash);\n};\n"],"file":"color.js"}