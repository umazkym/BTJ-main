{"version":3,"sources":["../../../src/modules/bitwise.js"],"names":["turnNthBitOff","num","nth","turnNthBitOn","toggleNthBit","checkNthBitOn"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAG,EAAE,KAAMC,GAAG,GAAG,CAAd,CAA1C;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACF,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAI,KAAMC,GAAG,GAAG,CAAtD;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,YAAY,GAAG,CAACH,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAI,KAAMC,GAAG,GAAG,CAAtD;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,aAAa,GAAG,CAACJ,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAI,KAAMC,GAAG,GAAG,CAAvD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Bitwise utility functions.\n */\n\n/**\n * Turns nth bit off.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to turn off (starting from 1 for the rightmost bit).\n * @return {number} New number with the nth bit turned off.\n */\nexport const turnNthBitOff = (num, nth) => num & ~(1 << (nth - 1));\n\n/**\n * Turns nth bit on.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to turn on (starting from 1 for the rightmost bit).\n * @return {number} New number with the nth bit turned off.\n */\nexport const turnNthBitOn = (num, nth) => num | (1 << (nth - 1));\n\n/**\n * Toggles nth bit.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to toggle (starting from 1 for the rightmost bit).\n * @return {number} New number with the nth bit toggled.\n */\nexport const toggleNthBit = (num, nth) => num ^ (1 << (nth - 1));\n\n/**\n * Checks if nth bit is on.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to check.\n * @param {number} 0 if the nth bit is off, otherwise a number greater than 0 if the nth bit is on.\n */\nexport const checkNthBitOn = (num, nth) => num & (1 << (nth - 1));\n"],"file":"bitwise.js"}