{"version":3,"sources":["../../../src/modules/iterator.js"],"names":["xrange","start","limit","step","RangeError","i"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,UAAUA,MAAV,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,IAAI,GAAG,CAAtC,EAAyC;AAC9C,MAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACjB,QAAIC,IAAI,IAAI,CAAZ,EAAe;AACb,YAAM,IAAIC,UAAJ,CAAe,6CAAf,CAAN;AACD;;AACD,SAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBI,CAAC,IAAIH,KAAzB,EAAgCG,CAAC,IAAIF,IAArC,EAA2C;AACzC,YAAME,CAAN;AACD;AACF,GAPD,MAOO;AACL,QAAIF,IAAI,IAAI,CAAZ,EAAe;AACb,YAAM,IAAIC,UAAJ,CAAe,6CAAf,CAAN;AACD;;AACD,SAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBI,CAAC,IAAIH,KAAzB,EAAgCG,CAAC,IAAIF,IAArC,EAA2C;AACzC,YAAME,CAAN;AACD;AACF;AACF","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions related to iterators, generators and iterations.\n */\n\n/**\n * Yields all the numbers of the specified range\n * (including \"start\" and \"limit\" if they fall in the range while stepping\n * with \"step\").\n *\n * @generator\n * @param {number} start An int specifying the start of the range.\n * @param {number} limit An int specifying the limit of the range.\n * @param {number} step An int specifying the step to take within each value of the range.\n * @yield {number} The next number of the range.\n */\nexport function* xrange(start, limit, step = 1) {\n  if (start < limit) {\n    if (step <= 0) {\n      throw new RangeError(\"Step must be a positive int greater than 0.\");\n    }\n    for (let i = start; i <= limit; i += step) {\n      yield i;\n    }\n  } else {\n    if (step >= 0) {\n      throw new RangeError(\"Step must be a negative int greater than 0.\");\n    }\n    for (let i = start; i >= limit; i += step) {\n      yield i;\n    }\n  }\n}\n"],"file":"iterator.js"}