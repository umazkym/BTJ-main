{"version":3,"file":"js-utl.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,OAAO;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACO;AACP;AACA;;AAEA;AACA,SAAS,2BAA2B;AACpC;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,YAAY,GAAG;AACf;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,kBAAkB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,kBAAkB;AAC9B;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;;;;;;;;;;;;;;;;;;AC/DP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEqC;;AAErC;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA,KAAK,kDAAW;AAChB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP,eAAe,iDAAU;AACzB;AACA;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8D;AACnB;;AAE3C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,SAAS;AACpB;AACA,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAgB;AACxC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA,eAAe,wDAAgB,SAAS;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,wDAAgB,iBAAiB;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,+CAAQ;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA,SAAS,mDAAY;AACrB,MAAM,mDAAY;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAgB;AAC1B;AACA,MAAM;AACN,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;;;;;;;;;;;;;;;;;AC3CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE8D;AACjB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,8DAA8D;;AAE9D;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACO;AACP,gBAAgB,qBAAM,mBAAmB,qBAAM;AAC/C;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACO;AACP;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,YAAY,GAAG;AACf;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACO;AACP;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO;AACtF;AACA;AACA,cAAc;AACd,wBAAwB,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,aAAa;AACjF,yBAAyB,MAAM,GAAG,MAAM,GAAG,OAAO;AAClD;AACA;AACA,yBAAyB,OAAO;AAChC,0CAA0C;AAC1C;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY,GAAG;AACf;AACO;AACP;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB,YAAY;AACZ;AACO;AACP;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpaAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,GAAG;AACf;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACO;AACP,SAAS,sDAAY;AACrB;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,YAAY;AACZ,YAAY;AACZ;AACA,MAAM,sDAAY;AAClB;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,SAAS,yDAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,SAAS,yDAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;;AAEP;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACO;AACP;AACA,IAAI,wDAAwD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO,6CAA6C;AACpD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;;;AClyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgC;;AAEhC;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,aAAa;AACxB;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,6CAAI;AACtB,IAAI,6CAAI;AACR,SAAS,cAAc,GAAG,yCAAyC;AACnE;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM,6CAAI;AACV,WAAW,eAAe,GAAG,2CAA2C;AACxE;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgD;AACL;;AAE3C;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACP;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA,WAAW,kBAAkB;AAC7B;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,6CAA6C,qBAAqB;AAClE,YAAY;AACZ;AACA;AACA;AACA,oCAAoC,+BAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qBAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qCAAqC;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iDAAiD;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA;AACA,gBAAgB,sDAAsD;AACtE,gBAAgB,uDAAuD;AACvE;AACA,aAAa,oDAAa;AAC1B;AACA,8BAA8B,oCAAoC;AAClE;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR,6CAA6C,8BAA8B;AAC3E;AACA;AACA,2BAA2B,qCAAqC;AAChE;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,iDAAiD;AACtE;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA,YAAY,UAAU;AACtB;AACA;AACO;AACP;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,YAAY,UAAU;AACtB;AACA;AACO;AACP,4BAA4B,iBAAiB,KAAK;;AAElD;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY,UAAU;AACtB;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,YAAY;AACvB;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,8CAA8C;AAC1D;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,YAAY,mEAAmE;AAC/E;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,YAAY,8CAA8C;AAC1D;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACO;;AAEP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA,qBAAqB,8CAAO;AAC5B;AACA;AACA,MAAM,wDAAgB;AACtB;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,GAAG;AACf;AACO;;AAEP;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACO;;AAEP;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA,YAAY,UAAU;AACtB;AACA;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;AChkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,kBAAkB,kBAAkB;AACpC;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,sEAAsE;AACtE,oEAAoE;AACpE,wDAAwD;AACxD,6DAA6D;AAC7D;AACA,uBAAuB;AACvB;AACA;AACA,iEAAiE;AACjE;AACA,iHAAiH;AACjH,iHAAiH;AACjH,oCAAoC;AACpC,sDAAsD;AACtD,yEAAyE;AACzE;AACA,iDAAiD;AACjD,mEAAmE;AACnE,sFAAsF;AACtF;AACA;AACA,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,QAAQ;AACpB;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,YAAY,0DAA0D;AACtE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,wBAAwB;AACnC;AACA,WAAW,SAAS;AACpB;AACA,YAAY,GAAG;AACf;AACO;AACP;AACA,IAAI,+DAA+D;AACnE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmD;;AAEnD;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA,uBAAuB;AACvB;AACA,EAAE,IAAI;AACN,2BAA2B,+CAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,8CAAO;AACf;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,0CAA0C,yCAAM;AAChD;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;;;;;;;;;;;;;;;;;;;;ACpKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACT;;AAEnC;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,QAAQ;AACpB;AACO;AACP,SAAS,0CAAG;AACZ;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY,QAAQ;AACpB;AACO;AACP,iBAAiB,gDAAQ;AACzB,sBAAsB,6CAAM;AAC5B,SAAS,4CAAK;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,kCAAkC;AAC9C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,kCAAkC;AAC9C;AACA;AACO;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiC;;AAEjC;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,YAAY,QAAQ;AACpB;AACO,2DAA2D;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8CAAO;AACf;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,UAAU,8CAAO;AACjB;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI,EAAE,EAAE;AAC3D;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE+C;AACf;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,YAAY,QAAQ;AACpB;AACO,qCAAqC,uBAAuB,IAAI;AACvE,gBAAgB,4DAAqB;AACrC;AACA;AACA;AACA,gBAAgB,6CAAM;AACtB;AACA,eAAe,CAAC,6CAAM,uCAAuC;AAC7D;AACA;AACA;AACA;AACA,YAAY,MAAM,EAAE,yBAAyB,GAAG,yBAAyB;AACzE;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP,wEAAwE,IAAI,EAAE,EAAE,iCAAiC,IAAI,EAAE,EAAE,sCAAsC,IAAI,EAAE,EAAE,gDAAgD,IAAI,oBAAoB,EAAE,oLAAoL,GAAG,UAAU,IAAI;AACtb;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgF;;AAEhF;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU,GAAG,IAAI;AAChC;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,QAAQ;AACpB;AACO;AACP;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,UAAU;AACtB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,yDAAsB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,kBAAkB;AAC7B;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,kBAAkB;AAC9B;AACO;AACP;AACA,qCAAqC;AACrC,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA,UAAU,sBAAsB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA,YAAY,QAAQ;AACpB;AACO;AACP,gCAAgC,+CAAQ;AACxC;AACA,8BAA8B,+DAA4B;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,qBAAqB;AACjC;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;;AAEA,4CAA4C;AAC5C,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA,sCAAsC,cAAc,eAAe,kBAAkB,oBAAoB,eAAe;;AAExH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,GAAG;AACf;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,YAAY,GAAG;AACf;AACO;AACP;AACA,OAAO,8CAAO;AACd;AACA,QAAQ,mDAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,UAAU,oDAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,YAAY,WAAW;AACvB;AACO;AACP;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;AACO;AACP;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;UCr4BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAgEwB;AAqBF;AAME;AAQG;AAoCJ;AAUC;AAMA;AAcE;AAC0C;AACL;AACiB;AACnC;AAMlB;AAKF;AAQQ;AAC8C;AAatD;AACoB;AAMpB;AAMU;AACS;AAC8B;AACZ;AACV","sources":["webpack://JSUtl/webpack/universalModuleDefinition","webpack://JSUtl/./src/modules/array.js","webpack://JSUtl/./src/modules/bitwise.js","webpack://JSUtl/./src/modules/callback.js","webpack://JSUtl/./src/modules/color.js","webpack://JSUtl/./src/modules/combinatorics.js","webpack://JSUtl/./src/modules/constraint.js","webpack://JSUtl/./src/modules/convert.js","webpack://JSUtl/./src/modules/core/compare.js","webpack://JSUtl/./src/modules/core/index.js","webpack://JSUtl/./src/modules/date.js","webpack://JSUtl/./src/modules/fn.js","webpack://JSUtl/./src/modules/google.js","webpack://JSUtl/./src/modules/hash.js","webpack://JSUtl/./src/modules/iterator.js","webpack://JSUtl/./src/modules/map-coordinates.js","webpack://JSUtl/./src/modules/math.js","webpack://JSUtl/./src/modules/object.js","webpack://JSUtl/./src/modules/path.js","webpack://JSUtl/./src/modules/promise.js","webpack://JSUtl/./src/modules/rand.js","webpack://JSUtl/./src/modules/stats.js","webpack://JSUtl/./src/modules/string.js","webpack://JSUtl/./src/modules/time.js","webpack://JSUtl/./src/modules/validate.js","webpack://JSUtl/./src/modules/web.js","webpack://JSUtl/webpack/bootstrap","webpack://JSUtl/webpack/runtime/define property getters","webpack://JSUtl/webpack/runtime/global","webpack://JSUtl/webpack/runtime/hasOwnProperty shorthand","webpack://JSUtl/webpack/runtime/make namespace object","webpack://JSUtl/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"JSUtl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSUtl\"] = factory();\n\telse\n\t\troot[\"JSUtl\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Array-related utility functions.\n */\n\n/**\n * Unshifts an array.\n *\n * @param {Array} arr The array.\n * @param {*} item The item to unshift.\n * @return {undefined}\n */\nexport function unshiftArray(arr, item) {\n  let len = arr.length;\n  while (len) {\n    arr[len] = arr[len - 1];\n    len--;\n  }\n  arr[0] = item;\n}\n\n/**\n * Clones an array.\n *\n * @param {Array} arr The array to clone.\n * @return {Array} The cloned array.\n */\nexport function cloneArray(arr) {\n  return arr.slice(0);\n}\n\n/**\n * Gets a slice of an array from a value up until another.\n *\n * @param {Array} arr The input array.\n * @param {number} from The \"from\" lower value.\n * @param {number} to The \"two\" upper value.\n * @return {Array} The slice as a new array.\n */\nexport function arraySliceFromValueToValue(arr, from, to) {\n  const ret = [];\n  let include = false;\n  for (const value of arr) {\n    if (!include && value == from) {\n      ret.push(value);\n      include = true;\n    } else if (include && value == to) {\n      ret.push(value);\n      break;\n    } else if (include) {\n      ret.push(value);\n    }\n  }\n  return ret;\n}\n\n/**\n * Tests whether all the elements of an array are coercible to a number or not.\n *\n * @param {Array} array An array.\n * @return {boolean} True if all the elements are coercible to a number, false otherwise.\n */\nexport function areArrayItemsAllCoercibleToNumber(array) {\n  const res = !array.some(isNaN);\n  return res;\n}\n\n/**\n * Copies an array or converts an array-like object to a new array.\n *\n * @param {*} arg Array or array-like object.\n * @return {Array} An array.\n */\nexport function arrayOrArrayLike(arg) {\n  return Array.prototype.slice.call(arg);\n}\n\n/**\n * Returns the last element of the given array.\n *\n * @param {Array} array An array.\n * @return {*} The last element of the array or undefined if there isn't one.\n */\nexport function lastOfArray(array) {\n  return array[array.length - 1];\n}\n\n/**\n * Returns the first element of the given array.\n *\n * @param {Array} array An array.\n * @return {*} The first element of the array or undefined if there isn't one.\n */\nexport function firstOfArray(array) {\n  return array[0];\n}\n\n/**\n * Like {@link Array.prototype.find}, but in reverse order.\n *\n * @param {Array} array An array.\n * @param {Function} fn Function to use for the test. The function will receive the array element as parameter.\n * @return {*} The first element which satisfies the test in the array by seeking for the element in reverse order\n *             (i.e. the last element of the array for which the test is satisfied).\n *             If no element satisfies the test, \"undefined\" is returned.\n */\nexport function arrayFindReverse(array, fn) {\n  let l = array.length;\n\n  let ret = void 0;\n  while (l) {\n    l--;\n    if (fn(array[l])) {\n      ret = array[l];\n      break;\n    }\n  }\n  return ret;\n}\n\n/**\n * Finds the maximum value of an array of numbers.\n *\n * @param {number[]} array An array of numbers.\n * @return {number|undefined} The maximum value of the array, or \"undefined\"\n *                            if the given array is empty.\n */\nexport const arrayMax = array =>\n  array.length\n    ? array.reduce(\n        (carry, current) => (current > carry ? current : carry),\n        -Infinity\n      )\n    : void 0;\n\n/**\n * Finds the minimum value of an array of numbers.\n *\n * @param {number[]} array An array of numbers.\n * @return {number|undefined} The minimum value of the array, or \"undefined\"\n *                            if the given array is empty.\n */\nexport const arrayMin = array =>\n  array.length\n    ? array.reduce(\n        (carry, current) => (current < carry ? current : carry),\n        +Infinity\n      )\n    : void 0;\n\n/**\n * Sorts an array of numbers returning a new array with the sorted\n * numbers (does not mutate the original).\n *\n * @param {number[]} arrayOfNums An array of numbers.\n * @param {boolean} [desc] True for descending order, false for ascending order (default).\n * @return {number[]} A new array with the sorted numbers.\n */\nexport const sortNums = (arrayOfNums, desc = false) =>\n  [...arrayOfNums].sort((a, b) =>\n    !desc // asc\n      ? a - b\n      : // desc\n        b - a\n  );\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Bitwise utility functions.\n */\n\n/**\n * Turns nth bit off.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to turn off (starting from 1 for the rightmost bit).\n * @return {number} New number with the nth bit turned off.\n */\nexport const turnNthBitOff = (num, nth) => num & ~(1 << (nth - 1));\n\n/**\n * Turns nth bit on.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to turn on (starting from 1 for the rightmost bit).\n * @return {number} New number with the nth bit turned off.\n */\nexport const turnNthBitOn = (num, nth) => num | (1 << (nth - 1));\n\n/**\n * Toggles nth bit.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to toggle (starting from 1 for the rightmost bit).\n * @return {number} New number with the nth bit toggled.\n */\nexport const toggleNthBit = (num, nth) => num ^ (1 << (nth - 1));\n\n/**\n * Checks if nth bit is on.\n *\n * @param {number} num A number.\n * @param {number} nth Nth bit to check.\n * @param {number} 0 if the nth bit is off, otherwise a number greater than 0 if the nth bit is on.\n */\nexport const checkNthBitOn = (num, nth) => num & (1 << (nth - 1));\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions for callback handling (like debouncing, throttling).\n */\n\nimport { isUndefined } from \"./core\";\n\n/**\n * Delays execution of a callback and cancels a previously registered callback if it wasn't executed yet.\n */\nexport const delay = (function () {\n  let timer = 0;\n\n  /**\n   * Inner function.\n   *\n   * @param {Function} callback The callback to execute.\n   * @param {number} ms Milliseconds to wait before executing the callback.\n   * @return {undefined}\n   */\n  return function (callback, ms) {\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      callback();\n    }, ms);\n  };\n})();\n\n/**\n * Debounces a function.\n *\n * @param {Function} fn A function.\n * @param {number} wait Wait interval in milliseconds.\n * @return {Function} A new function, debounced.\n */\nexport function debounce(fn, wait) {\n  let timer = void 0;\n  return function (...args) {\n    !isUndefined(timer) && clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn(...args);\n    }, wait);\n  };\n}\n\n/**\n * Throttles a function.\n *\n * @see https://www.sitepoint.com/throttle-scroll-events/\n *\n * @param {Function} fn A function.\n * @param {number} wait Wait interval in milliseconds.\n * @return {Function} A new function, throttled.\n */\nexport function throttle(fn, wait) {\n  let time = Date.now();\n  return function (...args) {\n    if (time + wait - Date.now() < 0) {\n      fn(...args);\n      time = Date.now();\n    }\n  };\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { hashString } from \"./hash\";\n\n/**\n * Color-related utility functions.\n */\n\n/**\n * Gets a color's luminance.\n *\n * @param {number} color Color int value (RGB).\n * @return {number} An int greater than 160 if the color is considered dark and less than or\n *                  equal to 160 if the color is considered light.\n */\nexport function getLuminance(color) {\n  const c = parseInt(color, 16);\n  const r = (c & 0xff0000) >> 16;\n  const g = (c & 0x00ff00) >> 8;\n  const b = c & 0x0000ff;\n  return 0.299 * r + 0.587 * g + 0.114 * b;\n}\n\n/**\n * Converts an integer to an RGB hex (hexadecimal) string.\n *\n * @param {number} i An integer.\n * @return {string} An RGB hex string (uppercase).\n */\nexport function intToRGBHexString(i) {\n  const c = (i & 0x00ffffff).toString(16).toUpperCase();\n  return \"00000\".substring(0, 6 - c.length) + c;\n}\n\n/**\n * Converts a string to an RGB hex (hexadecimal) string representing a color.\n *\n * @param {string} str The string.\n * @return {string} The color as an RGB hex string (uppercase).\n */\nexport const colorFromString = str => {\n  const hash = hashString(str);\n  return intToRGBHexString(hash);\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Combinatorics utility functions.\n */\n\nimport { nestedMapSet, nestedMapHas, mapYield } from \"./core\";\nimport { arrayOrArrayLike } from \"./array\";\n\n/**\n * Yields all the combinations of an array without repetitions (binomial coefficient).\n *\n * @generator\n * @param {Array} items An array.\n * @param {number} numberOfItemsPerCombination The number of elements in each combination\n *                                             (this function assumes it to be less than \"items.length\"\n *                                             and greater than 0).\n * @param {boolean} yieldCopy True if the yielded combination should be a copy (default) or\n *                            the internal array used during the generation of the current combination.\n * @yields {Array} The next combination.\n */\nexport const yieldCombinationsWithoutRepetition = function* (\n  items,\n  numberOfItemsPerCombination,\n  yieldCopy = true\n) {\n  const l = items.length;\n  const prefix = [];\n\n  const recurse = function* recurse(\n    items,\n    l,\n    prefix,\n    numberOfItemsPerCombination,\n    nextIndex = 0\n  ) {\n    // Same as:\n    // if (nextIndex === numberOfItemsPerCombination) {\n    if (prefix.length === numberOfItemsPerCombination) {\n      // Base case:\n      yield yieldCopy ? arrayOrArrayLike(prefix) : prefix;\n    } else {\n      // Recurrent case:\n      for (\n        let i = nextIndex;\n        i < l &&\n        // Remaining needed items\n        numberOfItemsPerCombination - prefix.length <=\n          // Remaining available items\n          l - i;\n        i++\n      ) {\n        prefix.push(items[i]);\n        yield* recurse(items, l, prefix, numberOfItemsPerCombination, i + 1);\n        prefix.pop();\n      }\n    }\n  };\n\n  yield* recurse(items, l, prefix, numberOfItemsPerCombination);\n};\n\n/**\n * Generate unique, progressive and incremental combinations.\n *\n * @param {Array} items An array of items.\n * @return {Array[]} An array of arrays, each representing a unique progressive incremental combination.\n *                   An empty array is returned if the given items array is empty.\n */\nexport const uniqueProgressiveIncrementalCombinations = items => {\n  const len = items.length;\n  if (len === 0) {\n    return [];\n  }\n\n  const last = arrayOrArrayLike(items); // Shallow copy/clone of the given array.\n  if (len === 1) {\n    // [1] => [[1]]\n    return [last];\n  }\n\n  const ret = [];\n  // [1], [2], [3], ..., [n]\n  items.map(item => ret.push([item]));\n\n  if (len > 2) {\n    // There  are at least three items.\n    for (\n      let numberOfItemsPerCombination = 2;\n      numberOfItemsPerCombination < len;\n      numberOfItemsPerCombination++\n    ) {\n      for (const combination of yieldCombinationsWithoutRepetition(\n        items,\n        numberOfItemsPerCombination\n      )) {\n        ret.push(combination);\n      }\n    }\n  }\n\n  ret.push(last);\n  return ret;\n};\n\n/**\n * Yields unique, progressive and incremental combinations.\n *\n * @generator\n * @param {Array} items An array of items.\n * @param {boolean} yieldCopy True if some of the yielded combinations should be a copy (default)\n *                         of the corresponding internal array used during the generation of the current combination\n *                         or that same array should be returned (if \"yieldCopy\" is \"false\").\n * @yields {Array} An array, each representing the next unique progressive incremental combination.\n *                 An empty array is yielded if the given items array is empty.\n */\nexport const yieldUniqueProgressiveIncrementalCombinations = function* (\n  items,\n  yieldCopy = true\n) {\n  const len = items.length;\n  if (len === 0) {\n    return;\n  }\n\n  const last = yieldCopy ? arrayOrArrayLike(items) : items; // Shallow copy/clone of the given array.\n  if (len === 1) {\n    // [1] => [[1]]\n    yield last;\n    return;\n  }\n\n  // [1], [2], [3], ..., [n]\n  yield* mapYield(items, item => [item]);\n\n  if (len > 2) {\n    // There  are at least three items.\n    for (\n      let numberOfItemsPerCombination = 2;\n      numberOfItemsPerCombination < len;\n      numberOfItemsPerCombination++\n    ) {\n      for (const combination of yieldCombinationsWithoutRepetition(\n        items,\n        numberOfItemsPerCombination,\n        yieldCopy\n      )) {\n        yield combination;\n      }\n    }\n  }\n\n  yield last;\n};\n\n/**\n * Yields all the subsequences of the given array of items.\n *\n * @generator\n * @param {Array} items An array of items to use to yield subsequences.\n * @yields {Array} The next subsequence.\n */\nexport const yieldAllSubsequences = function* (items) {\n  const l = items.length;\n  for (let i = 0; i <= l; i++) {\n    for (const combination of yieldCombinationsWithoutRepetition(items, i)) {\n      yield combination;\n    }\n  }\n};\n\n/**\n * Yields only the unique subsequences of the given array of items.\n *\n * @generator\n * @param {Array} items An array of items to use to yield subsequences.\n * @yields {Array} The next unique subsequence.\n */\nexport const yieldUniqueSubsequences = function* (items) {\n  const map = new Map();\n  yield [];\n  for (const subsequence of yieldAllSubsequences(items)) {\n    if (!nestedMapHas(map, subsequence)) {\n      nestedMapSet(map, subsequence, true);\n      yield subsequence;\n    }\n  }\n};\n\n/**\n * Yields all the permutations of the given array of items.\n *\n * @generator\n * @param {Array} items An array of items to use to yield permutations.\n * @param {boolean} yieldCopy True if the yielded permutation should be a copy (default) or\n *                            the internal array used during the generation of the current permutation.\n * @yields {Array} The next permutation.\n */\nexport const yieldPermutations = function* (items, yieldCopy = true) {\n  const currentPermutationPrefix = [];\n  const currentPermutationIndicesMap = {};\n  const permute = function* () {\n    if (currentPermutationPrefix.length === items.length) {\n      yield yieldCopy\n        ? arrayOrArrayLike(currentPermutationPrefix)\n        : currentPermutationPrefix;\n    } else {\n      for (let i = 0; i < items.length; i++) {\n        if (currentPermutationIndicesMap[i]) {\n          continue;\n        }\n        currentPermutationPrefix.push(items[i]);\n        currentPermutationIndicesMap[i] = true;\n        yield* permute();\n        delete currentPermutationIndicesMap[i];\n        currentPermutationPrefix.pop();\n      }\n    }\n  };\n  yield* permute();\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Constraints and filtering utility functions.\n */\n\n/**\n * Filters the given string so that it only includes digit (0-9)\n * and an optional leading sign (\"+\", which is removed if present, or \"-\"),\n * i.e. represents a valid integer parsable with \"Number.parseInt()\".\n *\n * @param {string} str The input string.\n * @return {string} The valid input string or an empty string if there isn't any digit.\n */\nexport function filterInt(str) {\n  let filtered = str.replace(/[^0-9]/g, \"\");\n  filtered = filtered.replace(/^[0]+([1-9])/, \"$1\");\n  filtered = filtered.replace(/^[0]+$/, \"0\");\n  if (str && filtered.length && str[0] === \"-\") {\n    filtered = `-${filtered}`;\n  }\n  return filtered;\n}\n\n/**\n * Filters the given string so that it only includes digits (0-9), a decimal separator (\".\" character)\n * and an optional leading sign (\"+\", which is removed if present, or \"-\"),\n * i.e. represents a valid float parsable with \"Number.parseFloat()\".\n *\n * @param {string} str The input string.\n * @return {string} The valid float string or an empty string if there isn't any digit or decimal separator.\n *                  If there isn't any digit in the input string and there is a decimal separator (\".\" character),\n *                  the returned string will be \"0.\", i.e. a parsable \"0.\" string.\n */\nexport function filterFloat(str) {\n  let filtered = str.replace(/[^0-9.]/g, \"\");\n  const regex = /(\\..*)\\./g;\n  const replace = \"$1\";\n  do {\n    filtered = filtered.replace(regex, replace);\n  } while (filtered != filtered.replace(regex, replace));\n  filtered === \".\" ? (filtered = \"0.\") : filtered;\n  filtered = filtered.replace(/^[0]+([1-9])/, \"$1\");\n  filtered = filtered.replace(/^[0]+($|\\.)/, \"0$1\");\n  if (str && filtered.length && str[0] === \"-\") {\n    filtered = `-${filtered}`;\n  }\n  return filtered;\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions related to conversion of data from one format to another.\n */\n\n/**\n * Binary to decimal.\n *\n * @param {string} x Binary string.\n * @return {number} Decimal number.\n */\nexport const b2d = x => parseInt(x, 2);\n\n/**\n * Decimal to binary.\n *\n * @param {number} x Decimal number.\n * @return {string} Binary representation.\n */\nexport const d2b = x => x.toString(2);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n *\n */\n\n/**\n * @type {Function}\n */\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Function implementing \"Object.is\" behaviour.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n *\n * @param {*} x The first value to compare.\n * @param {*} y The second value to compare.\n * @return {boolean} A boolean indicating whether or not the two arguments are the same value.\n */\nexport function is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Checks whether a prop of an object equals in the other object (shallow comparison).\n *\n * @param {Object} objA The first object.\n * @param {Object} objB The second object.\n * @param {string} prop The name of the property.\n * @return {boolean} True if the value of \"prop\" in \"objA\" is shallowly equal to the value of \"prop\" in \"objB\".\n */\nexport function objectPropEqual(objA, objB, prop) {\n  return hasOwnProperty.call(objB, prop) && is(objA[prop], objB[prop]);\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning \"false\"\n * when any key has values which are not strictly equal between the arguments.\n * Returns \"true\" when the values of all keys are strictly equal.\n *\n * @see https://stackoverflow.com/questions/22266826/how-can-i-do-a-shallow-comparison-of-the-properties-of-two-objects-with-javascri#answer-37636728\n *\n * @param {*} objA First object.\n * @param {*} objB Second object.\n * @return {boolean}\n */\nexport function shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== \"object\" ||\n    objA === null ||\n    typeof objB !== \"object\" ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    const prop = keysA[i];\n    if (!objectPropEqual(objA, objB, prop)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { shallowEqual, objectPropEqual, is } from \"./compare\";\nexport { shallowEqual, objectPropEqual, is };\n\n/**\n * Core utility functions.\n */\n\n/**\n * Optional configuration with useful properties.\n *\n * @type {Object}\n */\nexport const config = {\n  uniqueIdPrefix: \"\",\n  elementUniqueIdPrefix: \"\",\n  checkNetworkURI: null,\n};\n\n/**\n * Tests if an object is empty.\n *\n * @param {Object} obj The object to test.\n * @return {boolean} \"true\" if the given object is empty (does not have own properties), \"false\" otherwise.\n */\nexport function isObjectEmpty(obj) {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @type {string}\n */\nconst objPrototypeToString = Object.prototype.toString.call({});\n\n/**\n * Tests if a variable is an object.\n *\n * @param {*} obj The variable to test.\n * @return {boolean} \"true\" if \"obj\" is indeed an object, \"false\" otherwise.\n */\nexport const isObject = function (obj) {\n  return objPrototypeToString === Object.prototype.toString.call(obj);\n};\n\n/**\n * Tests if a variable is a plain object (i.e. \"{}\", an object literal).\n *\n * @param {*} obj The variable to test.\n * @return {boolean} \"true\" if \"obj\" is a plain object, \"false\" otherwise.\n */\nexport const isPlainObject = obj => {\n  return (\n    obj !== null &&\n    typeof obj === \"object\" &&\n    obj.constructor === Object &&\n    isObject(obj)\n  );\n};\n\n/**\n * Tests to see whether something is an array or not.\n *\n * @param {*} something A variable to check whether it is an array or not.\n * @return {boolean} True if the parameter passed in is an array, false otherwise.\n */\nexport function isArray(something) {\n  return (\n    Object.prototype.toString.call(something) ===\n    Object.prototype.toString.call([])\n  );\n}\n\n/**\n * Tests if the given value is callable.\n *\n * @param {*} v The value.\n * @return {boolean} True if callable, false otherwise.\n */\nexport function isCallable(v) {\n  return typeof v === \"function\";\n}\n\n/**\n * Tests if a variable is empty returning true for empty strings and empty arrays.\n *\n * @param {*} data The variable to test.\n * @return {boolean} True if the variable is empty, false otherwise.\n */\nexport function isEmpty(data) {\n  return !data || data.length === 0;\n}\n\n/**\n * Tests if a variable is empty or 0 (\"0\" string) returning true for empty strings,\n * empty arrays, the \"0\" string and empty values.\n *\n * @param {*} data The variable to test.\n * @return {boolean} True if the variable is empty or \"0\", false otherwise.\n */\nexport function isEmptyOr0(data) {\n  return !data || data === \"0\" || data.length === 0;\n}\n\n/**\n * Returns a reference to the global object.\n *\n * @return {Window|global} The global object (this function is cross-platform aware).\n */\nexport function getGlobalObject() {\n  return typeof global !== \"undefined\" ? global : window;\n}\n\n/**\n * @type {string}\n */\nconst JSUtlUniqueIdCounterProp = \"JSUtlUniqueIdCounterLEzKKl87QCDxwVH\";\n\n/**\n * Generates a unique ID which can be used as an \"id\" attribute.\n *\n * @param {string|undefined} [uniqueIdPrefix] Local unique ID prefix which overrides the prefix\n *                                            set on the \"config\" configuration object.\n * @return {string} The unique ID.\n */\nexport function uniqueId(uniqueIdPrefix = void 0) {\n  const globalObject = getGlobalObject();\n  globalObject[JSUtlUniqueIdCounterProp] =\n    globalObject[JSUtlUniqueIdCounterProp] || 0;\n  globalObject[JSUtlUniqueIdCounterProp]++;\n  const uniqueIdCounter = globalObject[JSUtlUniqueIdCounterProp];\n  const uniqueId = (uniqueIdPrefix || config.uniqueIdPrefix) + uniqueIdCounter;\n  return uniqueId;\n}\n\n/**\n * Gets a nested value of an object given an array of nested property names (keys).\n *\n * @param {Object} data JS POJO object.\n * @param {Array} props Array of object nested keys.\n * @return {*} The leaf value.\n */\nexport function nestedPropertyValue(data, props) {\n  let root = data;\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    root = root[prop];\n  }\n  return root;\n}\n\n/**\n * Alias for \"nestedPropertyValue\".\n *\n * @alias\n */\nexport const getNestedPropertyValue = nestedPropertyValue;\n\n/**\n * Checks if a nested value of an object given an array of nested property names (keys) exists.\n *\n * @param {Object} data JS POJO object.\n * @param {Array} props Array of object nested keys.\n * @return {boolean} True if the nested key exists, false otherwise.\n */\nexport function hasNestedPropertyValue(data, props) {\n  if (!props.length) {\n    return false;\n  }\n  let root = data;\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (!root[prop]) {\n      return false;\n    }\n    root = root[prop];\n  }\n  return true;\n}\n\n/**\n * Sets a nested value of an object given an array of nested property names (keys).\n *\n * @param {Object} data JS POJO object.\n * @param {Array} props Array of object nested keys.\n * @param {*} value Leaf value.\n * @return {undefined}\n */\nexport function setNestedPropertyValue(data, props, value) {\n  if (!props.length) {\n    return;\n  }\n  let root = data;\n  let prev = null;\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (typeof root[prop] !== \"object\") {\n      root[prop] = {};\n    }\n    prev = root;\n    root = root[prop];\n  }\n  if (prev) {\n    prev[props[props.length - 1]] = value;\n  }\n}\n\n/**\n * Sets a nested value on a nested map.\n *\n * @param {Map|WeakMap} map A map or weak map.\n * @param {Array} keys Array of keys to traverse. Each key will lead to a nested map.\n * @param {*} value The value to set at the inner key.\n * @return {undefined}\n */\nexport const nestedMapSet = (map, keys, value) => {\n  let i = 0;\n  let current = map;\n  while (i < keys.length - 1) {\n    const key = keys[i];\n    const nested = current.get(key);\n    if (nested instanceof Map || nested instanceof WeakMap) {\n      current = nested;\n    } else {\n      const newMap = new Map();\n      current.set(key, newMap);\n      current = newMap;\n    }\n    i++;\n  }\n  current.set(keys[i], value);\n};\n\n/**\n * Tests if a map has the given nested keys.\n *\n * @param {Map|WeakMap} map A map or weak map.\n * @param {Array} keys Array of keys to check. Each key represents a nested map.\n * @return {boolean} \"true\" if all the nested keys exist, false otherwise.\n */\nexport const nestedMapHas = (map, keys) => {\n  let current = map;\n  let i = 0;\n  const l = keys.length;\n  while (\n    (current instanceof Map || current instanceof WeakMap) &&\n    current.has(keys[i]) &&\n    i < l\n  ) {\n    current = current.get(keys[i]);\n    i++;\n  }\n  return i == l;\n};\n\n/**\n * Gets a value from a nested map.\n *\n * @param {Map|WeakMap} map A map or weak map.\n * @param {Array} keys Array of keys. Each key represents a nested map.\n * @return {*} The value of the map or \"undefined\" if there is no value for the given nested keys.\n */\nexport const nestedMapGet = (map, keys) => {\n  let current = map;\n  let i = 0;\n  const l = keys.length;\n  while (\n    (current instanceof Map || current instanceof WeakMap) &&\n    current.has(keys[i]) &&\n    i < l\n  ) {\n    current = current.get(keys[i]);\n    i++;\n  }\n  return i == l ? current : void 0;\n};\n\n/**\n * @type {Symbol}\n */\nconst treeMapSubtree = Symbol(\"treeMapSubtree\");\n\n/**\n * Sets a nested value on a nested tree map.\n *\n * @param {Map|WeakMap} rootMap A map or weak map to use as the root.\n * @param {Array} keys Array of keys to traverse. Each key will lead to a nested node of the tree map.\n * @param {*} value The value to set at the inner nested key.\n * @return {undefined}\n */\nexport const nestedTreeMapSet = (rootMap, keys, value) => {\n  let i = 0;\n  let current = rootMap;\n  const MapConstructor = rootMap instanceof WeakMap ? WeakMap : Map;\n  while (i < keys.length - 1) {\n    const key = keys[i];\n    const nested = current.get(key);\n    if (nested) {\n      current =\n        nested[treeMapSubtree] ||\n        (nested[treeMapSubtree] = new MapConstructor());\n    } else {\n      const newMap = new MapConstructor();\n      const node = {\n        [treeMapSubtree]: newMap,\n        value: void 0,\n      };\n      current.set(key, node);\n      current = newMap;\n    }\n    i++;\n  }\n  const key = keys[i];\n  !current.has(key)\n    ? current.set(key, {\n        value,\n      })\n    : (current.get(key).value = value);\n};\n\n/**\n * Tests if a tree map has the given nested keys.\n *\n * @param {Map|WeakMap} rootMap The root of the map or weak map.\n * @param {Array} keys Array of keys to check. Each key represents a nested node of the tree map.\n * @return {boolean} \"true\" if all the nested keys exist, false otherwise.\n */\nexport const nestedTreeMapHas = (rootMap, keys) => {\n  let current = rootMap;\n  let i = 0;\n  const l = keys.length;\n  while (\n    (current instanceof Map || current instanceof WeakMap) &&\n    current.has(keys[i]) &&\n    i < l\n  ) {\n    current = current.get(keys[i])[treeMapSubtree];\n    i++;\n  }\n  return i == l;\n};\n\n/**\n * Gets a value from a nested tree map.\n *\n * @param {Map|WeakMap} rootMap The root of the map or weak map.\n * @param {Array} keys Array of keys. Each key represents a nested node of the tree map.\n * @return {*} The value of the tree map or \"undefined\" if there is no value for the given nested keys.\n */\nexport const nestedTreeMapGet = (rootMap, keys) => {\n  let current = rootMap;\n  let i = 0;\n  const lastIndex = keys.length - 1;\n  while (\n    (current instanceof Map || current instanceof WeakMap) &&\n    current.has(keys[i]) &&\n    i < lastIndex\n  ) {\n    current = current.get(keys[i])[treeMapSubtree];\n    i++;\n  }\n  if (i === lastIndex && current) {\n    const lastKey = keys[i];\n    if (current.has(lastKey)) {\n      const nested = current.get(lastKey);\n      return nested.value;\n    }\n  }\n  return void 0;\n};\n\n/**\n * Yields values of an array mapping the yielded value.\n *\n * @generator\n * @param {Array} items An array of items.\n * @param {*} fn The function to call.\n *               The function will receive, in order the nth item,\n *               the index of the item in the array of items and the whole items array\n *               as parameters.\n * @param {*} thisArg Optional this arg of the called function (defaults to undefined).\n * @yields {*} The next yielded mapped item.\n */\nexport function* mapYield(items, fn, thisArg = void 0) {\n  items.map();\n  const boundFn = fn.bind(thisArg);\n  for (let i = 0; i < items.length; i++) {\n    yield boundFn(items[i], i, items);\n  }\n}\n\n/**\n * Compares two arrays deeply.\n *\n * @param {Array} arr1 First array.\n * @param {Array} arr2 Second array.\n * @return {boolean} True if they are equal (same indexes and same values), false otherwise.\n */\nexport function deepArrayCompare(arr1, arr2) {\n  if (arr1.length != arr2.length) {\n    return false;\n  }\n  const toString = Object.prototype.toString;\n  const arrayToStringStr = toString.call([]);\n  for (let i = 0; i < arr1.length; i++) {\n    if (!(i in arr2)) {\n      return false;\n    } else if (isPlainObject(arr1[i])) {\n      if (\n        !isPlainObject(arr2[i]) ||\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        !deepObjectCompare(arr1[i], arr2[i])\n      ) {\n        return false;\n      }\n    } else if (arrayToStringStr === toString.call(arr1[i])) {\n      if (\n        arrayToStringStr !== toString.call(arr2[i]) ||\n        !deepArrayCompare(arr1[i], arr2[i])\n      ) {\n        return false;\n      }\n    } else {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * Compare two objects deeply.\n *\n * @param {Object} obj1 First object.\n * @param {Object} obj2 Second object.\n * @return {boolean} True if they are equal (same properties and same values), false otherwise.\n */\nexport function deepObjectCompare(obj1, obj2) {\n  const toString = Object.prototype.toString;\n  const arrayToStringStr = toString.call([]);\n  for (const property in obj1) {\n    if (!(property in obj2)) {\n      // `obj2[property]` does not contain the property of `obj1`.\n      return false;\n    } else if (isPlainObject(obj1[property])) {\n      // `obj1[property]` is an object.\n      if (\n        !isPlainObject(obj2[property]) ||\n        !deepObjectCompare(obj1[property], obj2[property])\n      ) {\n        // `obj2[property]` is not an object or the branches are different.\n        return false;\n      }\n    } else if (arrayToStringStr === toString.call(obj1[property])) {\n      // `obj1[property]` is an array.\n      if (\n        arrayToStringStr !== toString.call(obj2[property]) ||\n        !deepArrayCompare(obj1[property], obj2[property])\n      ) {\n        // `obj2[property]` is not an array or the two objects are different.\n        return false;\n      }\n    } else {\n      // `obj1[property]` is not an object and is not an array.\n      if (obj1[property] !== obj2[property]) {\n        return false;\n      }\n    }\n  }\n  // `obj1` equals `obj2` (has the same properties and the same values).\n  return true;\n}\n\n/**\n * Nests the properties of an object using an array of props definitions and defaults.\n * Returns the leaf.\n *\n * Example:\n *\n * ```\n * const obj = {};\n * let nest = [{a: {}}, {b: {}}, {c: {}}, {d: {}}, {e: {}}, {f: {}}, {g: {}}, {h: {}} ];\n * const leaf = nestedObjectConstructValue(obj, nest);\n * leaf.i = 'i';\n * leaf.l = { m: \"m\" };\n * JSON.stringify(obj); // {\"a\":{\"b\":{\"c\":{\"d\":{\"e\":{\"f\":{\"g\":{\"h\":{\"i\":\"i\",\"l\":{\"m\":\"m\"}}}}}}}}}}\n * nest = nest.concat([ {n: {}}, {o: {}}, {p: {}} ]);\n * var pLeaf = nestedObjectConstructValue(obj, nest);\n * pLeaf.q = 'q';\n * nest = nest.concat([ {q: {}} ]);\n * nestedObjectConstructValue(obj, nest); // 'q'\n * ```\n *\n * @param {Object} root The root object.\n * @param {Array} nestedPropsDef The nexted props definitions.\n * @param {boolean} [isRootArrayIfRootFalsy] True if the root should be an array if the first argument \"root\" is falsy.\n * @return {*} The leaf.\n */\nexport function nestedObjectConstructValue(\n  root,\n  nestedPropsDef,\n  isRootArrayIfRootFalsy\n) {\n  root = root || (isRootArrayIfRootFalsy ? [] : {});\n  let leaf = root;\n  for (let i = 0; i < nestedPropsDef.length; i++) {\n    const propDef = nestedPropsDef[i];\n    const propKey = Object.keys(propDef)[0];\n    const propDefault = propDef[propKey];\n    leaf[propKey] = leaf[propKey] || propDefault;\n    leaf = leaf[propKey];\n  }\n  return leaf;\n}\n\n/**\n * Clones an object deeply using the JSON API.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} The cloned object.\n */\nexport function cloneDeeplyJSON(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Tests whether the given value is a reference type or not.\n *\n * @param {*} value Any value which can be an object or a primitive type.\n * @return {boolean} True if the given value is a reference type, false otherwise.\n */\nexport function isReferenceType(value) {\n  return new Object(value) === value;\n}\n\n/**\n * Tests whether the given value is a primitive type or not.\n *\n * @param {*} value Any value which can be an object or a primitive type.\n * @return {boolean} True if the given value is a primitive type, false otherwise.\n */\nexport function isPrimitiveType(value) {\n  return new Object(value) !== value;\n}\n\n/**\n * Checks whether an object has a cyclic reference or not.\n *\n * @param {Object} obj The object to check for a cyclic reference.\n * @return {boolean} True if the object has a cyclic reference, false otherwise.\n */\nexport function hasCyclicReference(obj) {\n  const stackSet = [];\n  let detected = false;\n\n  function detect(obj) {\n    if (detected) {\n      return;\n    }\n\n    if (typeof obj !== \"object\") {\n      return;\n    }\n\n    const indexOfObj = stackSet.indexOf(obj);\n    if (indexOfObj !== -1) {\n      detected = true;\n      return;\n    }\n\n    stackSet.push(obj);\n    for (const k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        detect(obj[k]);\n      }\n    }\n\n    stackSet.splice(indexOfObj, 1);\n    return;\n  }\n  detect(obj);\n  return detected;\n}\n\n/**\n * Converts a type to its string representation.\n *\n * @param {*} type A variable.\n * @return {string} The string representation of \"type\".\n */\nexport function typeToStr(type) {\n  return Object.prototype.toString.call(type);\n}\n\n/**\n * Clones an object deeply and returns the clone.\n *\n * @param {Object} object The object to clone.\n * @return {Object} The clone.\n * @throws {Error} If a circular reference if even only one property is of an unkown type\n *                 (this should never happen) or a circular reference is detected.\n */\nexport function cloneObjDeeply(object) {\n  const newObject = new object.constructor();\n  for (const prop in object) {\n    // If the property is defined on the prototype, ignore it. We don't want to assign it for each clone instance.\n    if (!Object.prototype.hasOwnProperty.call(object, prop)) {\n      continue;\n    }\n\n    const property = object[prop];\n    if (isPrimitiveType(property)) {\n      newObject[prop] = property;\n    } else if (isReferenceType(property)) {\n      if (!hasCyclicReference(property)) {\n        const clone = cloneObjDeeply(property);\n        newObject[prop] = clone;\n      } else {\n        throw new Error(\n          \"Circular reference detected inside of property '\" +\n            prop +\n            \"' (\" +\n            typeToStr(property) +\n            \") in object (\" +\n            typeToStr(object) +\n            \")\"\n        );\n      }\n    } else {\n      throw new Error(\n        \"Oops! Unknown type for property '\" +\n          prop +\n          \"' (\" +\n          typeToStr(property) +\n          \") in object (\" +\n          typeToStr(object) +\n          \")\"\n      );\n    }\n  }\n  return newObject;\n}\n\n/**\n * Deep object extension implementation.\n * Nothing is returned, but the destination object will be modified and merged with the source object\n * so that properties of the source object which are objects will recursively merge with the corresponding\n * destination property while the other properties with all the other types will replace the properties of the\n * destination object.\n * Note that this method should not be used for inheritance via the Prototypal Combination Inheritance pattern.\n * Also, this method doesn't perform a deep object cloning, it just extends the destinationObject by adding properties\n * it doesn't have in a deep way.\n *\n * @param {Object} destinationObject The destination object which will be modified and merged with the source object.\n * @param {Object} sourceObject The source object which will be used to extend the destination object.\n * @param {Object} [options] An object containing the options for the extension.\n *                           The currently available options are:\n *\n *                               - extendsArrays (boolean: false): Whether or not to extend nested arrays too (defaults to false);\n *\n * @return {undefined}\n */\nexport function deepObjectExtend(\n  destinationObject,\n  sourceObject,\n  options = {}\n) {\n  for (const property in sourceObject) {\n    if (sourceObject[property] && isPlainObject(sourceObject[property])) {\n      destinationObject[property] = destinationObject[property] || {};\n      deepObjectExtend(\n        destinationObject[property],\n        sourceObject[property],\n        options\n      );\n    } else if (\n      options.extendArrays &&\n      sourceObject[property] &&\n      isArray(sourceObject[property])\n    ) {\n      destinationObject[property] = destinationObject[property] || [];\n      deepObjectExtend(\n        destinationObject[property],\n        sourceObject[property],\n        options\n      );\n    } else {\n      destinationObject[property] = sourceObject[property];\n    }\n  }\n}\n\n/**\n * Deep object cloning extension implementation. If the source objects contain a property with a reference type, a clone object\n * of the same type of that property will be created and then merged with the property object of the destination object.\n *\n * @param {Object} destinationObject The destination object which will be modified and merged with the source object.\n * @param {...Object} sourceObject One or more objects which will be used to extend the destination object.\n * @return {undefined}\n */\nexport function deepObjectCloningExtend(...args) {\n  const destinationObject = args[0];\n  let sourceObject;\n  for (let i = 1; args[i]; i++) {\n    sourceObject = args[i];\n    for (const property in sourceObject) {\n      if (sourceObject[property] && isPlainObject(sourceObject[property])) {\n        destinationObject[property] = destinationObject[property] || {};\n        deepObjectExtend(\n          destinationObject[property],\n          cloneObjDeeply(sourceObject[property])\n        );\n      } else {\n        destinationObject[property] = sourceObject[property];\n      }\n    }\n  }\n}\n\n/**\n * Extends a destination object with the provided source objects.\n *\n * @param {Object} destinationObj The destination object.\n * @param {...Object|Array} sourceObjects The source objects. If the last argument is an array containing one single truthy element,\n *                                        it will be treated as an options parameter and its single first truthy element will be treated as object\n *                                        containing the options for the extension.\n *                                        The currently available options are:\n *\n *                                            - extendsArrays (boolean: false): Whether or not to extend nested arrays too (defaults to false);\n *\n * @return {Object} The destination object \"destinationObj\" given as parameter after extension.\n */\nexport function extend(destinationObj, ...sourceObjects) {\n  let options = {};\n  if (sourceObjects.length) {\n    const last = sourceObjects.pop();\n    if (isArray(last) && last.length === 1 && isPlainObject(last[0])) {\n      options = last[0];\n    } else {\n      sourceObjects.push(last);\n    }\n  }\n  for (const sourceObject of sourceObjects) {\n    deepObjectExtend(destinationObj, sourceObject, options);\n  }\n  return destinationObj;\n}\n\n/**\n * Extends a destination object with the provided source objects.\n *\n * @param {Object} destinationObject The destination object.\n * @param {...*} rest The source objects with the last parameter being an array of rules,\n *                    each rule being a tuple array where the first element is an array of \"ORed\" property names (strings or numbers)\n *                    or regexes matching property names for which the corresponding values should be decorated\n *                    (or a single property name or regex matching a property name if the decoration should only happen on a single property),\n *                    and where the second element is a callback to execute for each value which is a value of a property\n *                    of a source object.\n *                    The callback has the following signature:\n *\n *                        (value: *, prop: string|number, parent: Object) => *|undefined\n *\n *                    The callback will receive the final value after extension, its associated property and the parent object\n *                    where that property is set with that value.\n *                    Its returned value will be used as the final value of the property for that object in \"destinationObject\".\n *\n *                    If the last parameter is not an array of rules, it will be treated as the last source object to use for the extension\n *                    (the \"extend\" function will be simply called under the hood without any decoration logic).\n * @return {Object} The destination object \"destinationObject\" given as parameter after extension and, if the callback is given\n *                  as the last parameter, after applying the given callback.\n */\nexport function extendDecorate(destinationObject, ...rest) {\n  const rules = rest[rest.length - 1];\n  if (isArray(rules)) {\n    rest.pop();\n    const sourceObjects = rest;\n    const initialRetValue = {};\n    const matchedRulesMap = new Map();\n    const callbacksMap = new Map();\n    const paths = [];\n    const mapKeys = (\n      destinationObject,\n      sourceObject,\n      currentStack,\n      currentPath\n    ) => {\n      for (const key in sourceObject) {\n        currentStack.push({\n          destinationObject,\n          sourceObject,\n          property: key,\n          path: [...currentPath, key],\n        });\n      }\n    };\n    const matchRule = (rule, property) => {\n      if (rule instanceof RegExp && typeof property === \"string\") {\n        return property.match(rule);\n      } else {\n        return rule === property;\n      }\n    };\n    const matchArrayRule = (arrayRule, property) => {\n      for (const rule of arrayRule) {\n        if (matchRule(rule, property)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const ruleMatches = (rule, property) => {\n      if (isArray(rule)) {\n        return matchArrayRule(rule, property);\n      } else {\n        return matchRule(rule, property);\n      }\n    };\n    const matchRules = property => {\n      if (!matchedRulesMap.has(property)) {\n        const callbacks = [];\n        for (const [rule, callback] of rules) {\n          if (ruleMatches(rule, property)) {\n            callbacks.push(callback);\n          }\n        }\n        matchedRulesMap.set(property, callbacks);\n      }\n      return matchedRulesMap.get(property);\n    };\n\n    for (const sourceObject of sourceObjects) {\n      const currentStack = [];\n      const currentPath = [];\n      mapKeys(destinationObject, sourceObject, currentStack, currentPath);\n      while (currentStack.length) {\n        const {\n          destinationObject,\n          sourceObject,\n          property,\n          path: currentPath,\n        } = currentStack.pop();\n        if (sourceObject[property] && isPlainObject(sourceObject[property])) {\n          // \"sourceObject[property]\" is an object of class \"Object\".\n          destinationObject[property] = isPlainObject(\n            destinationObject[property]\n          )\n            ? destinationObject[property]\n            : {};\n          mapKeys(\n            destinationObject[property],\n            sourceObject[property],\n            currentStack,\n            currentPath\n          );\n        } else {\n          // \"sourceObject[property]\" is not an object.\n          destinationObject[property] = sourceObject[property];\n        }\n        const callbacks = matchRules(property);\n        if (callbacks && callbacks.length) {\n          if (!nestedTreeMapHas(callbacksMap, currentPath)) {\n            paths.push([...currentPath]);\n          }\n          nestedTreeMapSet(\n            callbacksMap,\n            currentPath,\n            callbacks.map(callback => retValue => path => {\n              const value =\n                retValue === initialRetValue\n                  ? destinationObject[property]\n                  : retValue;\n              return callback(value, property, destinationObject, path);\n            })\n          );\n        }\n      }\n    }\n\n    // Decorating the final nested values.\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const path = paths[i];\n      const callbacks = nestedTreeMapGet(callbacksMap, path) || [];\n      let retValue = initialRetValue;\n      for (const callback of callbacks) {\n        retValue = callback(retValue)(path);\n      }\n      if (retValue !== initialRetValue) {\n        setNestedPropertyValue(destinationObject, path, retValue);\n      }\n    }\n\n    return destinationObject;\n  } else {\n    return extend(destinationObject, ...rest);\n  }\n}\n\n/**\n * Shallowly extends a destination object with the provided source objects (first dimension).\n *\n * @param {Object} destinationObject The destination object.\n * @param {...Object} sourceObjects The source objects.\n * @return {Object} The destination object \"destinationObject\" given as parameter after shallow extension.\n */\nexport function shallowExtend(destinationObject, ...sourceObjects) {\n  sourceObjects.map(obj =>\n    Object.keys(obj).map(key => (destinationObject[key] = obj[key]))\n  );\n  return destinationObject;\n}\n\n/**\n * Like \"Array.prototype.includes\", but with type coercion.\n *\n * @param {Array} array The array.\n * @param {Anything} value The value.\n * @return {boolean} True if the value is included within the array (checking with type coercion`==`).\n */\nexport function includesTypeCoercion(array, value) {\n  for (const valueOfArray of array) {\n    if (valueOfArray == value) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Tests whether a value is undefined or not.\n *\n * @param {*} value A value\n * @return {boolean} True value is undefined, false otherwise.\n */\nexport function isUndefined(value) {\n  return typeof value === \"undefined\";\n}\n\n/**\n * Tests if the given value is an int.\n *\n * @param {*} value The value.\n * @return {boolean} True if value is an int, false otherwise.\n */\nexport function isInt(value) {\n  return Number.isInteger(value);\n}\n\n/**\n * Tests if the given string is an integer string.\n *\n * @param {*} a The string.\n * @return {boolean} True if the given string is an integer string, false otherwise.\n */\nexport function ctypeDigit(a) {\n  return Boolean(a.match(/^[0-9]+$/));\n}\n\n/**\n * Tests if the given value is an int or an integer string.\n *\n * @param {*} a The value.\n * @return {boolean} True if the value is an int or an integer string, false otherwise.\n */\nexport function isIntegerOrIntegerStr(a) {\n  return Number.isInteger(a) || ctypeDigit(a);\n}\n\n/**\n * Finds the index of a value in an array without type juggling\n * (i.e. like \"Array.prototype.indexOf\", but using \"==\" for equality comparison).\n *\n * @param {Array} array An array.\n * @param {*} value A value.\n * @return {number} -1 if the value is not in array, otherwise the index of value in array.\n */\nexport function findIndex(array, value) {\n  return array.findIndex(el => el == value);\n}\n\n/**\n * Returns the first value of the first property of an object.\n *\n * @param {Object} obj The object.\n * @return {*} The value of the first property of the given object.\n */\nexport function firstPropValue(obj) {\n  let prop;\n  for (prop in obj) {\n    break;\n  }\n  return obj[prop];\n}\n\n/**\n * Tests if a value is strictly a boolean \"true\".\n *\n * @param {*} value A value.\n * @return {boolean} \"true\" if the value is a boolean \"true\", \"false\" otherwise.\n */\nexport function isStrictlyTrue(value) {\n  return value === true;\n}\n\n/**\n * Tests if a value is truthy or not.\n *\n * @param {*} value The value.\n * @return {boolean} \"true\" if the value is truthy (evaluates to boolean \"true\"), \"false\" otherwise.\n */\nexport function isTruthy(value) {\n  return Boolean(value);\n}\n\n/**\n * Tests if all the given values are truthy.\n *\n * @param {...*} values The values.\n * @return {boolean} \"true\" if and only if all the values are truthy.\n */\nexport function allTruthy(...values) {\n  return values.every(isTruthy);\n}\n\n/**\n * Tests if all the given values are not undefined.\n *\n * @param {...*} values The values.\n * @return {boolean} \"true\" if and only if all the values are not undefined.\n */\nexport function allNotUndefined(...values) {\n  return values.every(value => typeof value !== \"undefined\");\n}\n\n/**\n * Tests if a string is a valid JSON string.\n *\n * @param {string} str A string.\n * @return {boolean} \"true\" if the string represents a valid JSON string, \"false\" otherwise.\n */\nexport function isJSONString(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * No-op function.\n *\n * @return {undefined}\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noOpFn() {}\n\n/**\n * Tests if a partial object is a subset of another object.\n *\n * @param {Object} obj An object.\n * @param {Object} partialObj A partial object which may not have all the keys of \"obj\"\n *                            or may even have different keys, or keys with different values.\n * @return {boolean} False if \"partialObj\" has a key which is not in \"obj\",\n *                   or has at least one key which is also in \"obj\" but with a different value\n *                   (shallow comparison), true otherwise.\n */\nexport function partialShallowEqual(obj, partialObj) {\n  return shallowEqual(\n    Object.keys(partialObj).reduce((carry, key) => {\n      carry[key] = obj[key];\n      return carry;\n    }, {}),\n    partialObj\n  );\n}\n\n/**\n * Returns a shallow object diff, returning an object with two keys \"objA\" and \"objB\",\n * each containing an object with all the properties of one of the two objects which are not within\n * the other object, respectively.\n * If a property is on both objects but each object has a different value for that same property\n * (using shallow equality comparison), the returned property will be set on both objects with their\n * respective values.\n *\n * @param {Object} objA First object.\n * @param {Object} objB Second object.\n * @return {Object} An object containing the shallow diff, with two keys \"objA\" and \"objB\".\n */\nexport function shallowObjectDiff(objA, objB) {\n  const diff = {\n    objA: {},\n    objB: {},\n  };\n  if (shallowEqual(objA, objB)) {\n    return diff;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  for (let i = 0; i < keysA.length; i++) {\n    const prop = keysA[i];\n    if (!objectPropEqual(objA, objB, prop)) {\n      diff.objA[prop] = objA[prop];\n      if (hasOwnProperty.call(objB, prop)) {\n        diff.objB[prop] = objB[prop];\n      }\n    }\n  }\n  for (let i = 0; i < keysB.length; i++) {\n    const prop = keysB[i];\n    if (!objectPropEqual(objB, objA, prop)) {\n      diff.objB[prop] = objB[prop];\n      if (hasOwnProperty.call(objA, prop)) {\n        diff.objA[prop] = objA[prop];\n      }\n    }\n  }\n  return diff;\n}\n\n/**\n * Casts a value to a string.\n *\n * @param {*} v A value.\n * @return {string} The string representation of the value.\n */\nexport function str(v) {\n  return \"\" + v;\n}\n\n/**\n * Maps an object, executing a function on each of its properties\n * returning a new mapped object.\n *\n * @param {Object} obj The object to map.\n * @param {Function} fn The function to use for the mapping.\n * @return {Object} The new mapped object.\n */\nexport const mapObject = (obj, fn) =>\n  Object.fromEntries(\n    Object.entries(obj).map(([key, value], index) => [\n      key,\n      fn(value, key, index),\n    ])\n  );\n\n/**\n * Maps an array to an object.\n *\n * @param {Array} arr An array.\n * @param {Function} fn A function receiving the current value, its index as well as the whole array \"arr\"\n *                      as parameters returning a tuple with the key at index 0 and the value at index 1 to set on the object.\n * @returns {Object} The array mapped to an object.\n */\nexport const mapToObject = (arr, fn) => {\n  let res;\n  return arr.reduce(\n    (carry, ...rest) =>\n      ((res = fn(...rest)) && false) ||\n      ((carry[res[0]] = res[1]) && false) ||\n      carry,\n    {}\n  );\n};\n\n/**\n * Selects the truthy properties of an object or the properties of an object\n * passing a test specified with a callback function.\n *\n * @param {Object} obj The input object.\n * @param {Function} fn A function which will receive two parameters:\n *\n *                          - value: The current value of the input object for a given property;\n *                          - prop: The name of the current property of the input object.\n *\n *                      The function will have to return a boolean \"true\" indicating that this value\n *                      and property has to be included in the returned object, or \"false\" otherwise.\n *\n * @return {Object} An object having only the properties which passed the test\n *                  implemented by the \"fn\" callback function.\n */\nexport const propSelection = (obj, fn = isTruthy) =>\n  Object.keys(obj).reduce((carry, key) => {\n    if (fn(obj[key], key)) {\n      carry[key] = obj[key];\n    }\n    return carry;\n  }, {});\n\n/**\n * Returns all the properties of the given object traversing its prototype chain.\n *\n * @param {Object} obj The object.\n * @param {Object} [options] An object with options.\n * @param {?Object} [options.stopAtPrototype] The prototype in the chain at which to stop the traversing.\n *                                            Defaults to null, in which case the whole prototype chain will be traversed.\n * @param {boolean} [options.stopAtPrototypeInclude] Whether or not to include the properties of the given prototype at which to stop.\n *                                                   Works only if \"stopAtPrototype\" is set to a valid prototype object in the prototype chain\n *                                                   of \"obj\".\n *                                                   Defaults to true, in which case the properties of the prototype at which to stop will be included\n *                                                   in the returned array.\n * @return {string[]} An array of containing the names of the properties.\n */\nexport function prototypeChainProperties(\n  obj,\n  { stopAtPrototype = null, stopAtPrototypeInclude = true } = {}\n) {\n  let current = obj;\n  const map = {};\n  let isStopPrototype = false;\n  let stop = false;\n  while (!stop && current && (!isStopPrototype || stopAtPrototypeInclude)) {\n    if (isStopPrototype) {\n      stop = true;\n    }\n    const properties = Object.getOwnPropertyNames(current);\n    properties.map(property => (map[property] = true));\n    current = Object.getPrototypeOf(current);\n    if (stopAtPrototype) {\n      isStopPrototype = current === stopAtPrototype;\n    }\n  }\n  const properties = Object.keys(map);\n  return properties;\n}\n\n/**\n * Defines an object's property with a getter and an optional setter.\n *\n * @param {Object} obj An object (may be a prototype).\n * @param {string} propname The property name.\n * @param {Function} getfn Getter function.\n * @param {Function|undefined} [setfn] Setter function.\n * @return {undefined}\n */\nexport function prop(obj, propname, getfn, setfn = void 0) {\n  const propObj = {};\n  propObj[propname] = {\n    get: getfn,\n    set: setfn,\n  };\n  Object.defineProperties(obj, propObj);\n}\n\n/**\n * Defines a property on an object.\n *\n * @param {Object} o An object.\n * @param {string} p The property to define.\n * @param {Object} descriptor Optional object containing the descriptor's properties to use to override the default properties.\n * @return {Object} The object that was passed to the function.\n */\nexport function defineProperty(o, p, descriptor = {}) {\n  return Object.defineProperty(o, p, {\n    configurable: false,\n    enumerable: false,\n    writable: true,\n    ...descriptor,\n  });\n}\n\n/**\n * Assigns the properties of the given source objects to the target object.\n *\n * @source https://stackoverflow.com/questions/39515321/spread-operator-issues-with-property-accessors-getters#answer-39521418\n *\n * @param {Object} target The target object.\n * @param {...Object} sources The source objects.\n * @return {Object} The target object.\n */\nexport function completeObjectAssign(target, ...sources) {\n  sources.forEach(source => {\n    const descriptors = Object.keys(source).reduce((descriptors, key) => {\n      descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\n      return descriptors;\n    }, {});\n    // By default, Object.assign copies enumerable Symbols too.\n    Object.getOwnPropertySymbols(source).forEach(sym => {\n      const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n      if (descriptor.enumerable) {\n        descriptors[sym] = descriptor;\n      }\n    });\n    Object.defineProperties(target, descriptors);\n  });\n  return target;\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { trim } from \"./string\";\n\n/**\n * Tests if the given value is a valid date.\n *\n * @param {*} value The value to test.\n * @return {boolean} True if it is a valid date, false otherwise.\n */\nexport function isValidDate(value) {\n  return (\n    Object.prototype.toString.call(value) === \"[object Date]\" &&\n    !isNaN(value.getTime())\n  );\n}\n\n/**\n * Tests if the given string is a valid datetime string (e.g. in ISO \"YYYY-MM-DD HH:ii:ss\" format).\n *\n * @param {string} str The given string.\n * @return {boolean} True if it is a valid datetime string, false otherwise.\n */\nexport function isValidDateTimeStr(str) {\n  return isValidDate(new Date(str));\n}\n\n/**\n * Returns a UTC datetime in ISO `YYYY-MM-DD HH:ii:ss` format.\n *\n * @param {Object} [options] An optional object of options.\n * @param {boolean} [options.Y] True to return the year of the UTC datetime. Defaults to true.\n * @param {boolean} [options.m] True to return the month of the UTC datetime. Defaults to true.\n * @param {boolean} [options.d] True to return the day of the UTC datetime. Defaults to true.\n * @param {boolean} [options.H] True to return the hours of the UTC datetime. Defaults to true.\n * @param {boolean} [options.i] True to return the minutes of the UTC datetime. Defaults to true.\n * @param {boolean} [options.s] True to return the seconds of the UTC datetime. Defaults to true.\n * @param {Date|string} [options.date] A date or a string that will be passed to the `Date` constructor\n *                                     which represents the date on which to compute and return the UTC date.\n * @return {string} The UTC datetime.\n */\nexport const utcDate = ({\n  Y = true,\n  m = true,\n  d = true,\n  H = true,\n  i = true,\n  s = true,\n  date = void 0,\n} = []) => {\n  const finalDate = date ? new Date(date) : new Date();\n  const year = finalDate.getUTCFullYear();\n  const month = (finalDate.getUTCMonth() + 1 + \"\").padStart(2, \"0\");\n  const day = (finalDate.getUTCDate() + \"\").padStart(2, \"0\");\n  const hours = (finalDate.getUTCHours() + \"\").padStart(2, \"0\");\n  const minutes = (finalDate.getUTCMinutes() + \"\").padStart(2, \"0\");\n  const seconds = (finalDate.getUTCSeconds() + \"\").padStart(2, \"0\");\n\n  const UTCDate = trim(\n    trim(\n      `${Y ? year : \"\"}-${m && (Y || d || (!Y && !d)) ? month : \"\"}-${\n        d ? day : \"\"\n      }`,\n      \" -\"\n    ) +\n      \" \" +\n      trim(\n        `${H ? hours : \"\"}:${i && (H || s || (!H && !s)) ? minutes : \"\"}:${\n          s ? seconds : \"\"\n        }`,\n        \" :\"\n      ),\n    \" \"\n  );\n\n  let finalUTCDate = UTCDate.replace(\"--\", \"-\");\n  finalUTCDate = finalUTCDate.replace(\"::\", \":\");\n\n  return finalUTCDate;\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions for functional programming.\n */\n\nimport { isObjectEmpty, isArray } from \"./core\";\nimport { arrayOrArrayLike } from \"./array\";\n\n/**\n * @type {string}\n */\nconst JSUtlCurryPlaceholderProp = \"JSUtlCurryPlaceholderPropRPecoyYmCYqZ2lE\";\n\n/**\n * Curry function placeholder.\n *\n * @type {Object}\n */\nexport const _ = {\n  [JSUtlCurryPlaceholderProp]: true,\n};\n\n/**\n * @type {string}\n */\nconst JSUtlProceedCallingFnProp = \"JSUtlProceedCallingFnPropRBmGaAgOCgftF9t\";\n\n/**\n * Return value of \"onFnCall\" to call the curried function and return its value.\n *\n * @type {Object}\n */\nexport const proceedCallingFn = {\n  [JSUtlProceedCallingFnProp]: true,\n};\n\n/**\n * Curries a function.\n *\n * @see https://medium.com/@kj_huang/implementation-of-lodash-curry-function-8b1024d71e3b\n *\n * @param {Function} fn A function to curry in order to return the curried version of the function.\n * @param {Object} [obj] An optional object with further properties to tweak the currying behaviour\n *                       and execute code while collecting the arguments of the curried function.\n * @param {number|undefined} [obj.arity] The arity of the function, i.e. its number of arguments.\n *                                       If omitted, \"fn.length\" will be used.\n * @param {Function|undefined} [obj.onEffectiveArgAdded] An optional callback to execute whenever a new effective argument\n *                                                       (not a placeholder) is added to the curried function.\n *                                                       The callback will receive an object with the following properties as argument:\n *\n *                                                           - addedArg: The effective argument added;\n *                                                           - args: An array with all the previously arguments collected so far\n *                                                                   without considering \"addedArg\";\n *                                                           - fn: The function \"fn\";\n *                                                           - curriedFn: The current curried function;\n *\n *                                                       The return value of the function is ignored.\n * @param {Function|undefined} [obj.onPlaceholder] An optional callback to execute whenever a new placeholder is added to the curried function.\n *                                                 The callback will receive an object with the following properties as argument:\n *\n *                                                     - args: An array with all the previously arguments collected so far\n *                                                             without considering \"addedArg\";\n *                                                     - fn: The function \"fn\";\n *                                                     - curriedFn: The current curried function;\n *\n *                                                 The return value of the function is ignored.\n * @param {Function|undefined} [obj.onFnCall] An optional callback to execute just before calling the \"fn\" function\n *                                            (i.e. when the \"fn\" function is ready to be called and all its arguments have been collected).\n *\n *                                            The callback will receive an object with the following properties as argument:\n *\n *                                                - args: The array of the effective arguments of the \"fn\" function;\n *                                                - fn: The function \"fn\" which was initially passed to \"curry\";\n *                                                - curriedFn: The current curried function;\n *\n *                                            This way, the code of the callback may decide what to do and may even call the function on its own\n *                                            and prevent the call from the caller side (i.e. within the \"curry\" function).\n *\n *                                            The callback must explicitly tell \"curry\" to call the function by returing \"proceedCallingFn\".\n *                                            If the callback returns any other value, then \"fn\" will not be called in \"curry\" and the return value\n *                                            of this callback will be returned.\n * @param {Function|undefined} [obj.onCurriedFnFirstCall] An optional callback to execute only the first time when the first curried function returned by \"curry\"\n *                                                        is invoked for the very first time with the very first argument or arguments.\n *\n *                                                        The callback will receive an object with the following properties as argument:\n *\n *                                                            - addedArgs: The arguments provided by the caller;\n *                                                            - fn: The \"fn\" function;\n *                                                            - curriedFn: The current curried function;\n *\n * @param {Function|undefined} [obj.onNewCurriedFn] An optional callback to execute initially and each time a new curried function is going to be returned.\n *\n *                                                  The callback will an object with the following properties as argument:\n *\n *                                                      - curriedFn: The current curried function (same as \"newCurriedFn\" when this callback is invoked\n *                                                                   for the very first time);\n *                                                      - newCurriedFn: The new curried function (will be the same as \"curriedFn\" when this callback is invoked\n *                                                                      for the very first time);\n *\n *\n * @return {Function} The curried version of the function.\n */\nexport const curry = (\n  fn,\n  {\n    arity = void 0,\n    onEffectiveArgAdded = void 0,\n    onPlaceholder = void 0,\n    onFnCall = void 0,\n    onCurriedFnFirstCall = void 0,\n    onNewCurriedFn = void 0,\n  } = {}\n) => {\n  let curriedFnFirstCall = true;\n\n  const expectedNumberOfArgs = typeof arity !== \"undefined\" ? arity : fn.length;\n  const nextParameterIndex = 0;\n  const placeholdersIndices = [];\n\n  const curriedInner = (\n    expectedNumberOfArgs,\n    nextParameterIndex,\n    placeholdersIndices,\n    ...args\n  ) =>\n    function curriedFn(...addedArgs) {\n      let newExpectedNumberOfArgs = expectedNumberOfArgs;\n      let newNextParameterIndex = nextParameterIndex;\n      let newPlaceholdersIndices = null;\n      let argsRequiredChange = false;\n      curriedFnFirstCall &&\n        ((onCurriedFnFirstCall &&\n          onCurriedFnFirstCall({ addedArgs, fn, curriedFn })) ||\n          true) &&\n        (curriedFnFirstCall = false);\n      let numberOfConsumablePlaceholders = placeholdersIndices.length;\n      for (const addedArg of addedArgs) {\n        !argsRequiredChange && (args = [...args]);\n        argsRequiredChange = true;\n        // \"addedArg\" may be either a placeholder or an effective argument.\n        const isPlaceholder = addedArg\n          ? addedArg[JSUtlCurryPlaceholderProp] === _[JSUtlCurryPlaceholderProp]\n          : false;\n        if (numberOfConsumablePlaceholders > 0 && !isPlaceholder) {\n          // Argument is an effective argument consuming a previously set placeholder.\n          onEffectiveArgAdded &&\n            onEffectiveArgAdded({ addedArg, args, fn, curriedFn });\n          let argIndex;\n          if (newPlaceholdersIndices === null) {\n            const [firstIndex, ...rest] = placeholdersIndices;\n            argIndex = firstIndex;\n            newPlaceholdersIndices = rest;\n          } else {\n            argIndex = newPlaceholdersIndices.shift();\n          }\n          args[argIndex] = addedArg;\n          numberOfConsumablePlaceholders--;\n          newExpectedNumberOfArgs--;\n        } else {\n          if (isPlaceholder) {\n            // Argument is a new placeholder.\n            if (newPlaceholdersIndices === null) {\n              newPlaceholdersIndices = placeholdersIndices.concat(\n                newNextParameterIndex\n              );\n            } else {\n              newPlaceholdersIndices.push(newNextParameterIndex);\n            }\n            onPlaceholder && onPlaceholder({ args, fn, curriedFn });\n          } else {\n            // Argument is an effective argument.\n            newExpectedNumberOfArgs--;\n            onEffectiveArgAdded &&\n              onEffectiveArgAdded({ addedArg, args, fn, curriedFn });\n          }\n          args[newNextParameterIndex] = addedArg;\n          newNextParameterIndex++;\n        }\n      }\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return curried.call(\n        null,\n        curriedFn,\n        newExpectedNumberOfArgs,\n        newNextParameterIndex,\n        newPlaceholdersIndices === null\n          ? [...placeholdersIndices]\n          : newPlaceholdersIndices,\n        ...args\n      );\n    };\n\n  const curried = (\n    curriedFn,\n    expectedNumberOfArgs,\n    nextParameterIndex,\n    placeholdersIndices,\n    ...args\n  ) => {\n    if (expectedNumberOfArgs <= 0) {\n      if (onFnCall) {\n        const shouldCallCurriedFn = onFnCall({ args, fn, curriedFn });\n        if (\n          shouldCallCurriedFn &&\n          shouldCallCurriedFn[JSUtlProceedCallingFnProp] ===\n            proceedCallingFn[JSUtlProceedCallingFnProp]\n        ) {\n          return fn(...args);\n        } else {\n          return shouldCallCurriedFn;\n        }\n      } else {\n        return fn(...args);\n      }\n    } else {\n      const newCurried = curriedInner(\n        expectedNumberOfArgs,\n        nextParameterIndex,\n        placeholdersIndices,\n        ...args\n      );\n      onNewCurriedFn && onNewCurriedFn({ curriedFn, newCurriedFn: newCurried });\n      return newCurried;\n    }\n  };\n\n  const newCurried = curriedInner(\n    expectedNumberOfArgs,\n    nextParameterIndex,\n    placeholdersIndices\n  );\n  onNewCurriedFn &&\n    onNewCurriedFn({ curriedFn: newCurried, newCurriedFn: newCurried });\n  return newCurried;\n};\n\n/**\n * Curries a POJO function, i.e. a function having only a single POJO (Plain Old JavaScript Object)\n * as parameter (a function with named arguments).\n *\n * Each object passed to the returned curried function will be merged with the final object\n * to pass to the function \"fn\" when finally calling it.\n *\n * @param {Function} fn A function to curry in order to return the curried version of the function.\n * @param {Object} [obj] An optional object with further properties to tweak the currying behaviour\n *                       and execute code while collecting the POJO objects which will construct\n *                       the final POJO object to pass to the curried function after plugging the curried POJO function.\n * @param {string} [obj.plugPropertyName] The name of the property which instructs that it's time to call the function.\n * @param {boolean} [obj.plugPropertyMustBeTruthy] By default, it is enough that the property with \"obj.plugPropertyName\" name\n *                                                 is set on the object passed to the curried function to instruct it to call\n *                                                 \"fn\".\n *                                                 If this property is set to \"true\", the property with \"plugPropertyName\" name\n *                                                 will also have to be truthy.\n * @param {Function} [obj.onPOJOArgMerged] An optional callback to execute right after merging the next POJO argument with the so far accumulated POJO object.\n *                                         The callback will an object with the following properties as argument:\n *\n *                                             - POJOArg: The given POJO argument;\n *                                             - POJO: the so far merged POJO object merged with the given \"POJOArg\";\n *                                             - fn: The \"fn\" function;\n *                                             - curriedFn: The current curried function;\n *\n * @param {Function} [obj.onFnCall] An optional callback to execute just before calling the \"fn\" function\n *                                  (i.e. when the \"fn\" function is ready to be called and has been plugged and all\n *                                  of its POJO object argument properties have been collected).\n *\n *                                  The callback will receive an object with the following properties as argument:\n *\n *                                      - POJO: The callback will receive the function \"fn\" POJO argument (an object) as its first argument;\n *                                      - fn: The \"fn\" function;\n *                                      - curriedFn: The current curried function;\n *\n *                                  This way, the code of the callback may decide what to do and may even call the function on its own\n *                                  and prevent the call from the caller side (i.e. within the \"POJOCurry\" function).\n *\n *                                  The callback must explicitly tell \"POJOCurry\" to call the function by returing \"proceedCallingFn\"\n *                                  If the callback returns any other value, then \"fn\" will not be called in \"POJOCurry\" and the return value\n *                                  of this callback will be returned.\n * @param {Function|undefined} [obj.onCurriedFnFirstCall] An optional callback to execute only the first time when the first curried function returned by \"curry\"\n *                                                        is invoked for the very first time with the very first POJO argument.\n *\n *                                                        The callback will receive an object with the following properties as argument:\n *\n *                                                            - POJOArg: The given POJO argument yet to merge with the internal final POJO;\n *                                                            - fn: The \"fn\" function;\n *                                                            - curriedFn: The current curried function;\n *\n * @param {Function|undefined} [obj.onNewCurriedFn] An optional callback to execute initially and each time a new curried function is going to be returned.\n *\n *                                                  The callback will receive an object with the following properties as argument:\n *\n *                                                      - curriedFn: The current curried function (same as \"newCurriedFn\" when this callback is invoked\n *                                                                   for the very first time);\n *                                                      - newCurriedFn: The new curried function (will be the same as \"curriedFn\" when this callback is invoked\n *                                                                      for the very first time);\n *\n * @return {Function} The curried version of the function.\n */\nexport const POJOCurry = (\n  fn,\n  {\n    plugPropertyName = \"plugCurried\",\n    plugPropertyMustBeTruthy = false,\n    onPOJOArgMerged = void 0,\n    onFnCall = void 0,\n    onCurriedFnFirstCall = void 0,\n    onNewCurriedFn = void 0,\n  } = {}\n) => {\n  const POJO = {};\n  let curriedFnFirstCall = true;\n\n  const curriedInner = accPOJO =>\n    function curriedFn(POJOArg) {\n      curriedFnFirstCall &&\n        ((onCurriedFnFirstCall &&\n          onCurriedFnFirstCall({ POJOArg, fn, curriedFn })) ||\n          true) &&\n        (curriedFnFirstCall = false);\n      let POJO = Object.assign({}, accPOJO, POJOArg || {});\n      if (\n        Object.prototype.hasOwnProperty.call(POJO, plugPropertyName) &&\n        (!plugPropertyMustBeTruthy || POJO[plugPropertyName])\n      ) {\n        const { [plugPropertyName]: POJOArgIgnoredProperty, ...rest } = POJOArg;\n        const { [plugPropertyName]: POJOIgnoredProperty, ...POJORest } = POJO;\n        POJO = POJORest;\n        if (!isObjectEmpty(rest)) {\n          onPOJOArgMerged &&\n            onPOJOArgMerged({ POJOArg: rest, POJO, fn, curriedFn });\n        }\n        let shouldCallCurriedFn = true;\n        let ret = void 0;\n        if (onFnCall) {\n          ret = onFnCall({ POJO, fn, curriedFn });\n          shouldCallCurriedFn = ret\n            ? ret[JSUtlProceedCallingFnProp] ===\n              proceedCallingFn[JSUtlProceedCallingFnProp]\n            : false;\n        }\n\n        if (shouldCallCurriedFn) {\n          return fn(POJO);\n        } else {\n          return ret;\n        }\n      } else {\n        onPOJOArgMerged && onPOJOArgMerged({ POJOArg, POJO, fn, curriedFn });\n        const newCurried = curriedInner(POJO);\n        onNewCurriedFn &&\n          onNewCurriedFn({ curriedFn, newCurriedFn: newCurried });\n        return newCurried;\n      }\n    };\n\n  const newCurried = curriedInner(POJO);\n  onNewCurriedFn &&\n    onNewCurriedFn({ curriedFn: newCurried, newCurriedFn: newCurried });\n  return newCurried;\n};\n\n/**\n * A utility function which composes functions or higher-order functions.\n *\n * @param {...Function|...Function[]} fns A list of functions or higher-order functions or arrays of functions\n *                                        (arrays will be flattened) to compose.\n * @return {Function} A function composed of all the functions or higher-order functions\n *                    used for composition.\n */\nexport const compose = (...fns) => (...args) => {\n  let outerArgs = args;\n  let hoFn = void 0;\n  fns = fns.flat(1);\n  for (let i = fns.length - 1; i >= 0; i--) {\n    const fn = fns[i];\n    hoFn = fn(...outerArgs);\n    outerArgs = [hoFn];\n  }\n  return hoFn;\n};\n\n/**\n * A utility function which pipes functions.\n *\n * @param {...Function|...Function[]} fns A list of functions or arrays of functions (arrays will be flattened)\n *                                        to pipe.\n * @return {Function} A function representing the pipe.\n */\nexport const pipe = (...fns) => (...args) => {\n  fns = fns.flat(1);\n  return fns.length ? fns.reduce((arg, fn) => [fn(...arg)], args)[0] : void 0;\n};\n\n/**\n * Returns a function which lets picking the properties of an object.\n *\n * @param {...string|...number} props The properties to pick.\n * @return {Function} A function which if called picks the \"props\" properties from its argument object\n *                    and returns a new object with the picked properties.\n */\nexport const pick = (...props) => o =>\n  props.reduce((a, e) => ({ ...a, [e]: o[e] }), {});\n\n/**\n * Lifts two functions using a binary function which takes their results as arguments.\n *\n * @param {Function} binaryFn A binary function (i.e. a function which takes two arguments).\n * @return {Function} A higher-order function which has to be called with the first function as argument (\"firstFn\")\n *                    and returns another higher-order function which has to be called with the second function as argument (\"secondFn\").\n *                    Then, the returned function will take the parameters to pass to the two functions (\"firstFn\" and \"secondFn\")\n *                    and return the result of calling \"binaryFn\" with the result of those functions given as parameters.\n */\nexport const liftBinaryFn = binaryFn => firstFn => secondFn => (...params) =>\n  binaryFn(firstFn(...params), secondFn(...params));\n\n/**\n * Applies an array of functions to a list of values.\n *\n * @param {Function[]} fns An array of functions.\n * @return {Function} A function which if called with a list of values, will pass the list to each function of \"fns\"\n *                    and return an array with the values after applying each of the original \"fns\" to its parameters.\n */\nexport const juxt = fns => (...values) => fns.map(fn => fn(...values));\n\n/**\n * Converges a multi-arg function.\n *\n * @param {Function} multiArgFn A multi-arg function.\n * @param {Function[]} fns An array of functions to converge.\n *                         Each function will receive the parameter passed to the function returned\n *                         by this higher-order function (i.e. \"params\").\n * @return {Function} A function which, if called, will pass its arguments to each of the functions in \"fns\"\n *                    and pass each result of those functions to the multi-arg function \"multiArgFn\",\n *                    returning its result.\n */\nexport const converge = (multiArgFn, fns) => (...params) =>\n  multiArgFn(...fns.map(fn => fn(...params)));\n\n/**\n * Executes a callback if a POJO object has a property.\n *\n * @param {Object} POJO A POJO object.\n * @return {(prop: string|number) => (fn: Function) => *} A function which receives the property\n *                                                        and returns and returns a function receiving the callback\n *                                                        function (\"fn\") to execute.\n */\nexport const execIfPOJOHas = POJO => prop => fn =>\n  Object.prototype.hasOwnProperty.call(POJO, prop) && fn(POJO[prop], POJO);\n\n/**\n * Executes a callback with the existent properties of an object.\n *\n * @param {...string|...number} props The properties to check for existence.\n * @return {(o: Object) => (fn: (existentProps: string[]|number[]) => *) => *} A function which receives the POJO object for which to check for the given properties\n *                                                                             and returns a function receiving a callback which will receive the existent properties\n *                                                                             of the object as parameter.\n */\nexport const execWithExistentProps = (...props) => o => fn =>\n  fn(props.filter(prop => Object.prototype.hasOwnProperty.call(o, prop)));\n\n/**\n * Loops through the values of a generator and returns an array with its mapped\n * values mapped with the given callback.\n *\n * @param {GeneratorFunction} gen A generator function.\n * @return {(args: ...*) => (fn: (val: *) => *) => Array} A function which takes the arguments for the generator and returns\n *                                                        another function which takes the callback to use to map each\n *                                                        value of the generator returning an array with all the mapped values of the generator.\n */\nexport const forGen = gen => (...args) => fn => {\n  const generator = gen(...args);\n  const arr = [];\n  for (const value of generator) {\n    const res = fn(value);\n    arr.push(res);\n  }\n  return arr;\n};\n\n/**\n * Flattens an array (its first dimension, at most).\n *\n * @param {Array} arr An array.\n * @return {Array} A new flattened array.\n */\nexport const flatten = arr => Array.prototype.concat.apply([], arr);\n\n/**\n * Flattens an array with any dimension.\n *\n * @param {Array} arr An array.\n * @param {number} dimension The flattening dimension (defaults to 1, but can be greater, even \"Infinity\").\n * @return {Array} The flattened array.\n */\nexport const flattenDeep = (arr, dimension = 1) => {\n  return dimension > 0\n    ? arr.reduce(\n        (acc, val) =>\n          acc.concat(isArray(val) ? flattenDeep(val, dimension - 1) : val),\n        []\n      )\n    : arrayOrArrayLike(arr);\n};\n\n/**\n * Computes the cartesian product of the given sets.\n *\n * @param  {...Array} sets The sets to use to compute the cartesian product.\n * @return {Array} The cartesian product of the given sets.\n */\nexport const cartesianProduct = (...sets) =>\n  sets.reduce((acc, set) => flatten(acc.map(x => set.map(y => [...x, y]))), [\n    [],\n  ]);\n\n/**\n * Identity function.\n *\n * @see https://en.wikipedia.org/wiki/Identity_function\n *\n * @param {*} value Any value.\n * @return {*} The same passed value.\n */\nexport const identityFn = value => value;\n\n/**\n * Identity function for multiple args returning an array of those args.\n *\n * @param  {...*} args The args.\n * @return {Array} The same args returned in an array.\n */\nexport const identityArgsFn = (...args) => args;\n\n/**\n * @type {Function}\n */\nconst chainLink = (fn, next) => args =>\n  fn(args, next && ((...args) => next(args)));\n\n/**\n * A higher-order function to create a chain of functions following the Chain of Responsibility design pattern.\n *\n * @param {...Function|...Function[]} fns A list of functions or higher-order functions or arrays of functions\n *                                        (arrays will be flattened) to chain.\n * @return {Function} A function representing the chain of the given functions which, if called, will return the result of the chain.\n *                    Each function will receive the next function as its last parameter.\n */\nexport const chain = (...fns) => (...args) => {\n  fns = fns.flat(1);\n  const chainFn = fns.reduceRight((nextChainLink, fn) => {\n    return chainLink(fn, nextChainLink);\n  }, void 0);\n  return chainFn(args);\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions related to Google.\n */\n\n/**\n * Determines the best zoom level for a Google map.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds.\n * @param {Object} mapDim JS POJO with the properties height and width.\n * @param {number} mapDim.height The height of the map's div.\n * @param {number} mapDim.width The width of the map's div.\n * @return {number} The best zoom level.\n */\nexport function googleMapBestZoomLevelFromBounds(bounds, mapDim) {\n  const WORLD_DIM = { height: 256, width: 256 };\n  const ZOOM_MAX = 21;\n\n  function latRad(lat) {\n    const sin = Math.sin((lat * Math.PI) / 180);\n    const radX2 = Math.log((1 + sin) / (1 - sin)) / 2;\n    return Math.max(Math.min(radX2, Math.PI), -Math.PI) / 2;\n  }\n\n  function zoom(mapPx, worldPx, fraction) {\n    return Math.floor(Math.log(mapPx / worldPx / fraction) / Math.LN2);\n  }\n\n  const ne = bounds.getNorthEast();\n  const sw = bounds.getSouthWest();\n\n  const latFraction = (latRad(ne.lat()) - latRad(sw.lat())) / Math.PI;\n\n  const lngDiff = ne.lng() - sw.lng();\n  const lngFraction = (lngDiff < 0 ? lngDiff + 360 : lngDiff) / 360;\n\n  const latZoom = zoom(mapDim.height, WORLD_DIM.height, latFraction);\n  const lngZoom = zoom(mapDim.width, WORLD_DIM.width, lngFraction);\n\n  return Math.min(latZoom, lngZoom, ZOOM_MAX);\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Hashing-related utility functions.\n */\n\n/**\n * Computes a hash of an array of strings (the order of strings does not matter).\n *\n * NOTE: An array with duplicate values given as parameter to this function\n *       may yield to a hash which would collide with other hashes computed\n *       on different arrays with this same function.\n *       Therefore is on behalf of the caller to be sure that \"array\" contains\n *       unique strings.\n *\n * @param {string[]} array An array of strings.\n * @return {number} A number representing the hash code of the array.\n */\nexport function stringHashArray(array) {\n  let code = 0;\n  for (let i = 0; i < array.length; i++) {\n    let n = 0;\n    for (let j = 0; j < array[i].length; j++) {\n      n = (n * 251) ^ array[i].charCodeAt(j);\n    }\n    code ^= n;\n  }\n  return code;\n}\n\n/**\n * Returns the hash of a string.\n *\n * @see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript#answer-7616484\n *\n * @param {string} str The string.\n * @return {number} The hash code of the string, represented as a number.\n */\nexport const hashString = str => {\n  let hash = 0,\n    i,\n    chr;\n  if (str.length === 0) {\n    return hash;\n  }\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32 bit integer.\n  }\n  return hash;\n};\n\n/**\n * A one-pass algorithm to compute the hash of a series of unique strings incrementally.\n *\n * NOTE: Duplicate values given as parameter to this function\n *       may yield to a hash which would collide with other hashes computed\n *       on different string series with this same function.\n *       Therefore is on behalf of the caller to be sure that the series of strings will be unique\n *       while calling this function incrementally.\n *\n * @param {string} str The string.\n * @param {number} [hash] The previous hash computed with this same function if this call is the continuation\n *                        of the unique string series.\n * @return {number} The next hash.\n */\nexport function onePassStringHash(str, hash = 0) {\n  let nextHash = hash;\n  let n = 0;\n  for (let j = 0; j < str.length; j++) {\n    n = (n * 251) ^ str.charCodeAt(j);\n  }\n  nextHash ^= n;\n  return nextHash;\n}\n\n/**\n * Given a sequence of integers, computes the hash of their sum so that two different sequences\n * will have the same hash if the sum of their integers will be the same (the overall sum of the sequences may be higher than `Number.MAX_SAFE_INTEGER`).\n *\n * @see https://stackoverflow.com/questions/69749629/hash-function-that-returns-the-same-hash-for-a-sum-even-if-different-terms-lead/69749873\n *\n * Example:\n *\n * ```\n * intSumHash([1, 2, 3, 4, 5, 6]); // 21\n * intSumHash([1, 2, 3, 4, 5, 6]) === intSumHash([2, 3, 1, 4, 6, 5]); // true\n * intSumHash([1, 2, 3, 4, 5, 6]) === intSumHash([5, 1, 10, 4, 1]); // true\n * intSumHash([1, 2, 3, 4, 5, 6]) === intSumHash([21]); // true\n * intSumHash([1, 2, 3, 4, 5, 6]) === intSumHash([7, 7, 7]); // true\n *\n * intSumHash([1, 2]); // 3\n *\n * const LARGE_PRIME = 999999999989;\n * intSumHash([4504 * LARGE_PRIME + 1, 4504 * LARGE_PRIME + 2]); // 800745160017\n *\n * intSumHash([Number.MAX_SAFE_INTEGER - 1, Number.MAX_SAFE_INTEGER - 2, Number.MAX_SAFE_INTEGER - 90, 10, 13]); // 209\n * intSumHash([Number.MAX_SAFE_INTEGER - 2, Number.MAX_SAFE_INTEGER - 90, 10, Number.MAX_SAFE_INTEGER - 1, 13]); // 209\n * intSumHash([209, -10, 2, 3, 5]); // 209\n * intSumHash([1, 2, 3, 20, 209 - (20 + 3 + 2 + 1)]); // 209\n * intSumHash([4, 1, 2, 1, 1, 1, 20, 209 - 10, -86, 70, -25, 1, 7, 13]); // 209\n *\n * intSumHash([9007597764421056, -10, 2, 3, 5]); // 398509680158\n * intSumHash([1, 2, 3, 20, 9007597764421056 - (20 + 3 + 2 + 1)]); // 398509680158\n * intSumHash([4, 1, 2, 1, 1, 1, 20, 9007597764421056 - 10, -86, 70, -25, 1, 7, 13]); // 398509680158\n * ```\n *\n * @param {number[]} seq A sequence of integers (an array).\n * @return {number} The hash of the sum of the sequence of integers.\n */\nexport function intSumHash(seq) {\n  const BIG_PRIME = 4503599627370449;\n  let h = 0;\n  for (let i = 0; i < seq.length; i++) {\n    const value = seq[i];\n    h = (h % BIG_PRIME) + (value % BIG_PRIME);\n  }\n  return h;\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions related to iterators, generators and iterations.\n */\n\n/**\n * Yields all the numbers of the specified range\n * (including \"start\" and \"limit\" if they fall in the range while stepping\n * with \"step\").\n *\n * @generator\n * @param {number} start An int specifying the start of the range.\n * @param {number} limit An int specifying the limit of the range.\n * @param {number} step An int specifying the step to take within each value of the range.\n * @yield {number} The next number of the range.\n */\nexport function* xrange(start, limit, step = 1) {\n  if (start < limit) {\n    if (step <= 0) {\n      throw new RangeError(\"Step must be a positive int greater than 0.\");\n    }\n    for (let i = start; i <= limit; i += step) {\n      yield i;\n    }\n  } else {\n    if (step >= 0) {\n      throw new RangeError(\"Step must be a negative int greater than 0.\");\n    }\n    for (let i = start; i >= limit; i += step) {\n      yield i;\n    }\n  }\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions related to the coordinates of a map.\n */\n\n/**\n * Clamps a latitude value so that it is always between -90 and 90.\n *\n * Latitude ranges between -90 and 90 degrees, inclusive.\n * Values above or below this range will be clamped to the range [-90, 90].\n * This means that if the value specified is less than -90, it will be set to -90.\n * And if the value is greater than 90, it will be set to 90.\n *\n * @param {number|string} lat Latitude. Either a number or a string which can be casted to a number.\n * @return {number} Latitude, clamped.\n */\nexport const clampLat = lat => Number(lat < -90 ? -90 : lat > 90 ? 90 : lat);\n\n/**\n * Wraps a longitude value so that it is always between -180 and 180.\n *\n * Longitude ranges between -180 and 180 degrees, inclusive.\n * Values above or below this range will be wrapped so that they fall within the range.\n * For example, a value of -190 will be converted to 170.\n * A value of 190 will be converted to -170.\n * This reflects the fact that longitudes wrap around the globe.\n *\n * @param {number|string} lng Longitude. Either a number or a string which can be casted to a number.\n * @return {number} lng Longitude, wrapped.\n */\nexport const wrapLng = lng => {\n  lng = Number(lng);\n  while (lng > 180) {\n    lng -= 360;\n  }\n  while (lng < -180) {\n    lng += 360;\n  }\n  return lng;\n};\n\n/**\n * Normalizes a latitude so that it is within the range [0, 180].\n *\n * 1. normalizeLat(90) === 0;\n * 2. normalizeLat(0) === 90;\n * 3. normalizeLat(-90) === 180;\n *\n * @param {number|string} lat Latitude. Either a number or a string which can be casted to a number.\n * @return {number} Latitude, normalized.\n */\nexport const normalizeLat = lat => {\n  lat = clampLat(lat);\n  if (lat >= 0) {\n    // 1. + 2.\n    return 90 - lat;\n  } else {\n    // 3.\n    return 90 + Math.abs(lat);\n  }\n};\n\n/**\n * Normalizes a longitude so that it is within the range [0, 360].\n *\n * 1. normalizeLng(-180) === 0;\n * 2. normalizeLng(0) === 180;\n * 3. normalizeLng(180) === 360;\n *\n * @param {number} lng Longitude. Either a number or a string which can be casted to a number.\n * @return {number} Longitude, normalized.\n */\nexport const normalizeLng = lng => {\n  lng = wrapLng(lng);\n  return lng + 180;\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Mathematical utility functions.\n */\n\n/**\n * Rounds a number.\n *\n * @param {number} number The number to round.\n * @param {number} precision The decimal precision.\n * @return {number} The rounded number.\n */\nexport function round(number, precision = 0) {\n  const factor = 10 ** precision;\n  return Math.round(number * factor) / factor;\n}\n\n/**\n * Sums two or more numbers.\n *\n * @param {...number} numbers The numbers to sum.\n * @return {number} The sum.\n */\nexport function sum(...numbers) {\n  return numbers.reduce((carry, num) => carry + num);\n}\n\n/**\n * Integer division (without decimal part).\n *\n * @param {number} num A number.\n * @param {number} divideBy The number by which to divide \"num\".\n * @return {number} The result of the integer division.\n */\nexport function intDiv(num, divideBy) {\n  return Math.floor(num / divideBy);\n}\n\n/**\n * Tests if a number is even.\n *\n * @param {number} num A number.\n * @return {boolean} True if even, false if odd.\n */\nexport function isEven(num) {\n  return num % 2 === 0;\n}\n\n/**\n * Tests if a number is odd.\n *\n * @param {number} num A number.\n * @return {boolean} True if odd, false if even.\n */\nexport function isOdd(num) {\n  return !isEven(num);\n}\n\n/**\n * Converts a source value of a source range to a value that is proportional\n * in another destination range.\n *\n * @param {number[]} sourceTuple The source range tuple, i.e. a tuple of two values, the starting value of the range at index 0 and the ending value of the range at index 1,\n *                               respectively.\n *                               This function assumes that both the starting and ending values are positive numbers (the starting value can be 0).\n * @return {(destRange: number[]) => (sourceValue: number) => number} A function receiving the destination range tuple as argument (having the same shape as the source range)\n *                                                                    returning a function taking the source value as argument returning the value proportional\n *                                                                    in the destination range.\n */\nexport const proportion = ([sourceFrom, sourceTo]) => ([\n  destFrom,\n  destTo,\n]) => sourceValue =>\n  (sourceValue - sourceFrom) * ((destTo - destFrom) / (sourceTo - sourceFrom)) +\n  destFrom;\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Object-related utility functions.\n */\n\n/**\n * @type {Function}\n */\nconst defaultObjectComparator = (a, b) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Finds the minimum value of an object.\n *\n * @param {Object} obj An object.\n * @param {Object} [options] An optional object with further options.\n * @param {(a: *, c: *) => number} [options.comparator] A comparator function receiving two values as arguments which must return a number less than 0 if the first\n *                                                      given value is the new minimum value.\n * @param {boolean} [options.returnAsKeyVal] True to return an object containing two properties `value` and `key`, namely the minimum value's key\n *                                           (`key` property) as well as the minimum value itself (`value` property).\n * @return {*} The minimum value or an object with the key and the minimum value if \"returnAsKeyVal\" is truthy.\n */\nexport const objectMin = (\n  obj,\n  { comparator = defaultObjectComparator, returnAsKeyVal = false } = {}\n) => {\n  const min = { key: void 0, value: void 0 };\n  for (const key in obj) {\n    const value = obj[key];\n    if (typeof min.key === \"undefined\" || comparator(value, min.value) < 0) {\n      min.key = key;\n      min.value = value;\n    }\n  }\n  return returnAsKeyVal ? min : min.value;\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions for filenames and paths.\n */\n\n/**\n * Returns the basename of a path.\n *\n * @param {string} path A path.\n * @return {string} The basename of the given path.\n */\nexport function basename(path) {\n  return path.split(/[\\\\/]/).pop();\n}\n\n/**\n * Returns info about a path.\n *\n * @param {string} path The path.\n * @param {number} [options] Optioanl options flag.\n */\nexport function pathinfo(path, options) {\n  //  discuss at: http://locutus.io/php/pathinfo/\n  // original by: Nate\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Dmitry Gorelenkov\n  //    input by: Timo\n  //      note 1: Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\n  //      note 1: The way the bitwise arguments are handled allows for greater flexibility\n  //      note 1: & compatability. We might even standardize this\n  //      note 1: code and use a similar approach for\n  //      note 1: other bitwise PHP functions\n  //      note 1: Locutus tries very hard to stay away from a core.js\n  //      note 1: file with global dependencies, because we like\n  //      note 1: that you can just take a couple of functions and be on your way.\n  //      note 1: But by way we implemented this function,\n  //      note 1: if you want you can still declare the PATHINFO_*\n  //      note 1: yourself, and then you can use:\n  //      note 1: pathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\n  //      note 1: which makes it fully compliant with PHP syntax.\n  //   example 1: pathinfo('/www/htdocs/index.html', 1)\n  //   returns 1: '/www/htdocs'\n  //   example 2: pathinfo('/www/htdocs/index.html', 'PATHINFO_BASENAME')\n  //   returns 2: 'index.html'\n  //   example 3: pathinfo('/www/htdocs/index.html', 'PATHINFO_EXTENSION')\n  //   returns 3: 'html'\n  //   example 4: pathinfo('/www/htdocs/index.html', 'PATHINFO_FILENAME')\n  //   returns 4: 'index'\n  //   example 5: pathinfo('/www/htdocs/index.html', 2 | 4)\n  //   returns 5: {basename: 'index.html', extension: 'html'}\n  //   example 6: pathinfo('/www/htdocs/index.html', 'PATHINFO_ALL')\n  //   returns 6: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n  //   example 7: pathinfo('/www/htdocs/index.html')\n  //   returns 7: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n  let opt = \"\";\n  let realOpt = \"\";\n  let optName = \"\";\n  let optTemp = 0;\n  const tmpArr = {};\n  let cnt = 0;\n  let i = 0;\n  let haveBasename = false;\n  let haveExtension = false;\n  let haveFilename = false;\n  // Input defaulting & sanitation\n  if (!path) {\n    return false;\n  }\n  if (!options) {\n    options = \"PATHINFO_ALL\";\n  }\n  // Initialize binary arguments. Both the string & integer (constant) input is\n  // allowed\n  const OPTS = {\n    PATHINFO_DIRNAME: 1,\n    PATHINFO_BASENAME: 2,\n    PATHINFO_EXTENSION: 4,\n    PATHINFO_FILENAME: 8,\n    PATHINFO_ALL: 0,\n  };\n  // PATHINFO_ALL sums up all previously defined PATHINFOs (could just pre-calculate)\n  for (optName in OPTS) {\n    if (Object.prototype.hasOwnProperty.call(OPTS, optName)) {\n      OPTS.PATHINFO_ALL = OPTS.PATHINFO_ALL | OPTS[optName];\n    }\n  }\n  if (typeof options !== \"number\") {\n    // Allow for a single string or an array of string flags\n    options = [].concat(options);\n    for (i = 0; i < options.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[options[i]]) {\n        optTemp = optTemp | OPTS[options[i]];\n      }\n    }\n    options = optTemp;\n  }\n  // Internal Functions\n  const _getExt = function (path) {\n    const str = path + \"\";\n    const dotP = str.lastIndexOf(\".\") + 1;\n    return !dotP ? false : dotP !== str.length ? str.substr(dotP) : \"\";\n  };\n  // Gather path infos\n  if (options & OPTS.PATHINFO_DIRNAME) {\n    const dirName = path.replace(/\\\\/g, \"/\").replace(/\\/[^/]*\\/?$/, \"\"); // dirname\n    tmpArr.dirname = dirName === path ? \".\" : dirName;\n  }\n  if (options & OPTS.PATHINFO_BASENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path);\n    }\n    tmpArr.basename = haveBasename;\n  }\n  if (options & OPTS.PATHINFO_EXTENSION) {\n    if (haveBasename === false) {\n      haveBasename = basename(path);\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename);\n    }\n    if (haveExtension !== false) {\n      tmpArr.extension = haveExtension;\n    }\n  }\n  if (options & OPTS.PATHINFO_FILENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path);\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename);\n    }\n    if (haveFilename === false) {\n      haveFilename = haveBasename.slice(\n        0,\n        haveBasename.length -\n          (haveExtension\n            ? haveExtension.length + 1\n            : haveExtension === false\n            ? 0\n            : 1)\n      );\n    }\n    tmpArr.filename = haveFilename;\n  }\n  // If array contains only 1 element: return string\n  cnt = 0;\n  for (opt in tmpArr) {\n    if (Object.prototype.hasOwnProperty.call(tmpArr, opt)) {\n      cnt++;\n      realOpt = opt;\n    }\n  }\n  if (cnt === 1) {\n    return tmpArr[realOpt];\n  }\n  // Return full-blown array\n  return tmpArr;\n}\n\n/**\n * Returns the extension of a filename.\n *\n * @param {string} filename The filename.\n * @return {string} The extension of the given filename.\n */\nexport function filenameExtension(filename) {\n  const extension = pathinfo(filename, \"PATHINFO_EXTENSION\");\n  if (typeof extension !== \"string\") {\n    return \"\";\n  }\n  return extension;\n}\n\n/**\n * Returns the dirname of a path.\n *\n * @param {string} path A path.\n * @return {string} The dirname of the given path.\n */\nexport function dirname(path) {\n  //  discuss at: http://locutus.io/php/dirname/\n  // original by: Ozh\n  // improved by: XoraX (http://www.xorax.info)\n  //   example 1: dirname('/etc/passwd')\n  //   returns 1: '/etc'\n  //   example 2: dirname('c:/Temp/x')\n  //   returns 2: 'c:/Temp'\n  //   example 3: dirname('/dir/test/')\n  //   returns 3: '/dir'\n  return path.replace(/\\\\/g, \"/\").replace(/\\/[^/]*\\/?$/, \"\");\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Promise-related utility functions.\n */\n\nimport { uniqueId, isArray, noOpFn } from \"./core\";\n\n/**\n * Creates a new timeout promise which will resolve after the given milliseconds timeout.\n *\n * @param {number} delayMs Delay in milliseconds after which the promise will resolve.\n * @param {*} [value] Optional value to resolve with.\n * @return {Promise} A new promise which resolves right after \"delayMs\" have elapsed.\n */\nexport function timeout(delayMs, value) {\n  return new Promise(resolve => setTimeout(resolve, delayMs, value));\n}\n\n/**\n * Creates a new promise with a minimum delay before it is fulfilled.\n *\n * @param {Promise} promise A promise.\n * @param {number} minDelay Minumum delay in milliseconds.\n * @return {Promise} A new promise which resolves with the given value of the given promise\n *                   or rejects with the rejected value of the promise if it rejects.\n */\nexport function minDelayPromise(promise, minDelay) {\n  return Promise.all([promise, timeout(minDelay)])\n    .then(([value]) => {\n      return value;\n    })\n    .catch(e => {\n      throw e;\n    });\n}\n\n/**\n * Resolves a promise with an optional fallback which fires if the promise does not resolve\n * under a certain time constraint.\n *\n * @param {Object} obj An object.\n * @param {Promise} obj.promise A promise.\n * @param {number} obj.maxDelayMs Max delay in milliseconds to wait before executing \"onFallback\" code if the time elapses.\n * @param {Function} obj.onFallback Function to execute if the given \"promise\" takes more than \"maxDelayMs\" to resolve.\n * @param {number} obj.fallbackMinDelayMs Number of milliseconds to wait if the fallback code gets executed before resolving the promise.\n * @return {Promise} A promise which resolves with the value of \"promise\" or rejects with the error of the given \"promise\".\n */\nexport function maxDelayFallbackPromise({\n  promise,\n  maxDelayMs,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onFallback = () => {},\n  fallbackMinDelayMs,\n} = {}) {\n  const uniqueIdentifier = uniqueId();\n  return Promise.race([\n    promise,\n    timeout(maxDelayMs).then(() => uniqueIdentifier),\n  ]).then(value => {\n    if (value === uniqueIdentifier) {\n      onFallback();\n      return minDelayPromise(promise, fallbackMinDelayMs);\n    } else {\n      return value;\n    }\n  });\n}\n\n/**\n * Applies an async operation to a promise returning a new one.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#Composition\n *\n * @param {Promise} acc A promise.\n * @param {Function} onfulfilled Fulfilled callback.\n * @param {Function} onrejected Rejected callback.\n * @return {Promise} A new promise.\n */\nexport const applyAsync = (acc, onfulfilled, onrejected) => {\n  return typeof onrejected !== \"undefined\"\n    ? acc.then(onfulfilled, onrejected)\n    : acc.then(onfulfilled);\n};\n\n/**\n * Composes functions which are run subsequently\n * (sequential composition) using promises.\n *\n * This function is useful when a chain of operations is known ahead of time\n * and they must be executed subsequently.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises#Composition\n *\n * @param {...(Function|Array)} funcs The functions (fulfilled callbacks). An array can be given and it MUST have\n *                                    the fulfilled callback at index 0 and the reject callback at index 1.\n * @return {Function} A new function that accepts an initial value to be passed through the composition pipeline.\n *                    If the returned function is called, it will return a Promise which represents the chain formed\n *                    by the promises composed subsequently.\n */\nexport const composeAsync = (...funcs) => x => {\n  return funcs.reduce((acc, func) => {\n    let promise;\n    if (isArray(func)) {\n      // Item at index 0 is the fulfilled callback,\n      // while the item at index 1 is the reject callback.\n      promise = applyAsync(acc, func[0], func[1]);\n    } else {\n      promise = applyAsync(acc, func);\n    }\n    return promise;\n  }, Promise.resolve(x));\n};\n\n/**\n * Returns a promise which resolves as soon as at least some of the promises given as parameter are fulfilled,\n * and rejects if the minimum number of resolved promises (\"minNumberOfFulfilledPromises\") is not reached after all the given promises are settled.\n *\n * @param {Promise[]} promises An array of promises. If an empty array is given, then the returned promise will never resolve (will remain in pending state forever).\n * @param {number} minNumberOfFulfilledPromises The minimum number of the given promises that must be fulfilled to consider the returned promise fulfilled\n *                                              (e.g. at least 3 of the given promises must be fulfilled).\n *                                              Defaults to 1.\n *                                              If \"minNumberOfFulfilledPromises\" is less than 0, then it is treated as if it was 1.\n *                                              If \"minNumberOfFulfilledPromises\" is greater than the number of the given promises \"promises\",\n *                                              then \"minNumberOfFulfilledPromises\" is treated as if it was \"promises.length\".\n * @return {Promise} A new promise. The promise either fulfills or rejects with an object having the following properties:\n *\n *                       - fulfilled: An array, each element being an object having the following properties:\n *\n *                           - promise: The fulfilled promise of the array of promises \"promises\";\n *                           - value: The value that the promise has resolved with;\n *                           - index: The positional index of the given array of promises \"promises\";\n *\n *                       - rejected: An array, each element being an object having the following properties:\n *\n *                           - promise: The rejected promise of the array of promises \"promises\";\n *                           - reason: The reason that the promise has rejected with;\n *                           - index: The positional index of the given array of promises \"promises\";\n *\n *                   The \"fulfilled\" array will have \"minNumberOfFulfilledPromises\" elements.\n */\nexport const asSoonAtLeastSomeFulfilled = (\n  promises,\n  minNumberOfFulfilledPromises = 1\n) => {\n  const length = promises.length;\n  const unresolvablePromise = new Promise(noOpFn);\n  let promiseToReturn = unresolvablePromise;\n  if (minNumberOfFulfilledPromises < 0) {\n    minNumberOfFulfilledPromises = 1;\n  } else if (minNumberOfFulfilledPromises > length) {\n    minNumberOfFulfilledPromises = length;\n  }\n  if (length > 0) {\n    let settledCount = 0;\n    let isPromiseSettled = false;\n    promiseToReturn = new Promise((resolve, reject) => {\n      const fulfilled = [];\n      const rejected = [];\n      promises.map((promise, index) => {\n        let isFulfilled = false;\n        promise\n          .then(value => {\n            if (!isPromiseSettled) {\n              isFulfilled = true;\n              settledCount++;\n              fulfilled.push({\n                promise,\n                index,\n                value,\n              });\n              if (fulfilled.length === minNumberOfFulfilledPromises) {\n                isPromiseSettled = true;\n                resolve({ fulfilled, rejected });\n              }\n            }\n          })\n          .catch(reason => {\n            if (!isPromiseSettled) {\n              if (!isFulfilled) {\n                settledCount++;\n                rejected.push({ promise, index, reason });\n                if (settledCount === length) {\n                  isPromiseSettled = true;\n                  reject({ fulfilled, rejected });\n                }\n              }\n            }\n          });\n      });\n    });\n  }\n  return promiseToReturn;\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions providing random functionality.\n */\n\n/**\n * Generates a random string.\n *\n * @param {number} length The length of the string to return.\n * @return {string} The random string.\n */\nexport function randomStr(length) {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n/**\n * Generates a random int between min and max (both included).\n *\n * @param {number} min Min int value.\n * @param {number} max Max int value.\n * @return {number} A random int between min and max.\n */\nexport function randomInt(min = 0, max = Number.MAX_SAFE_INTEGER) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Generates a random float between min and max integers (both included).\n *\n * @param {number} min Min int value.\n * @param {number} max Max int value.\n * @return {number} A random float between min and max.\n */\nexport function randomFloat(min = 0, max = 562949953421311) {\n  const randInt = randomInt(min, max);\n  if (randInt >= max) {\n    return randInt;\n  }\n  return randInt + Math.random();\n}\n\n/**\n * Returns a random float (using \"Math.random()\") not equal to the given value.\n *\n * @param {number} value The given value.\n * @return {number} A random float not equal to value.\n */\nexport function randomDifferentFromValue(value) {\n  let ret = Math.random();\n  while (value == ret) {\n    ret = Math.random();\n  }\n  return ret;\n}\n\n/**\n * @type {Array}\n */\nlet noncanonicalUUIDCounter = 1;\n\n/**\n * Generates a new UUID.\n *\n * @see https://github.com/tastejs/todomvc/blob/gh-pages/examples/react/js/utils.js\n *\n * @return {string} The UUID.\n */\nexport function uuid() {\n  let i, random;\n  let uuid = \"\";\n\n  for (i = 0; i < 32; i++) {\n    random = (Math.random() * 16) | 0;\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      uuid += \"-\";\n    }\n    uuid += (i === 12 ? 4 : i === 16 ? (random & 3) | 8 : random).toString(16);\n  }\n\n  return uuid;\n}\n\n/**\n * Generates a new noncanonical UUID. This noncanonical UUID has a further\n * int prefixed by \"-\" which is concatenated to a canonical UUID at the end\n * of the canonical UUID before returning this noncanonical UUID.\n * The int starts with 1 and increments every time this function is called.\n *\n * @return {string} A noncanonical UUID.\n */\nexport function noncanonicalUUID() {\n  const UUID = uuid();\n  return UUID + \"-\" + noncanonicalUUIDCounter++;\n}\n\n/**\n * Shuffles an array randomly modifing the given array.\n *\n * @param {Array} array The input array.\n * @return {Array} A reference to the same array given as input,\n *                 but with its elements randomly shuffled.\n */\nconst shuffleArrayRandomly = array => {\n  let i = array.length,\n    temporaryValue,\n    randomIndex;\n  while (0 !== i) {\n    randomIndex = Math.floor(Math.random() * i);\n    i--;\n    temporaryValue = array[i];\n    array[i] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\n\n/**\n * Returns an array with the elements of the given array randomly shuffled.\n *\n * @param {Array} array An array.\n * @return {Array} A new array with the same elements of the input array, but randomly shuffled.\n */\nexport function randomArrayShuffle(array) {\n  return shuffleArrayRandomly(Object.keys(array)).map(i => array[i]);\n}\n\n/**\n * Generates a random string.\n *\n * @return {string} A random string.\n */\nexport const randomString = () => Math.random().toString(36).substr(2);\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Statistics-related utility functions.\n */\n\nimport { sum, intDiv, isOdd } from \"./math\";\nimport { sortNums } from \"./array\";\n\n/**\n * Computes the mean of the given numbers.\n *\n * @param {...number} numbers The numbers.\n * @return {number} The mean.\n */\nexport function mean(...numbers) {\n  return sum(...numbers) / numbers.length;\n}\n\n/**\n * Computes the median of the given numbers.\n *\n * @param {...number} numbers The numbers.\n * @return {number} The median value.\n */\nexport function median(...numbers) {\n  const sorted = sortNums(numbers);\n  const middleIndex = intDiv(sorted.length, 2);\n  return isOdd(sorted.length)\n    ? sorted[middleIndex]\n    : mean(sorted[middleIndex - 1], sorted[middleIndex]);\n}\n\n/**\n * Computes the min deviation from a value.\n *\n * @param {number} value A value.\n * @return {(...numbers: number[]) => number} A function receiving the numbers to use to compute the minimum deviation\n *                                            from \"value\".\n */\nexport const minAbsDeviationFromValue = value => (...numbers) => {\n  let minAbsDeviation = Infinity;\n  numbers.map(num => {\n    const deviation = Math.abs(num - value);\n    if (deviation < minAbsDeviation) {\n      minAbsDeviation = deviation;\n    }\n  });\n  return minAbsDeviation;\n};\n\n/**\n * Computes the min deviation from a value excluding that value from the numbers received.\n *\n * @param {number} value A value.\n * @return {(...numbers: number[]) => number} A function receiving the numbers to use to compute the minimum deviation\n *                                            from \"value\" exluding \"value\".\n */\nexport const minAbsDeviationFromExcludedValue = value => (...numbers) =>\n  minAbsDeviationFromValue(value)(...numbers.filter(num => num !== value));\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Utility functions for working with strings.\n */\n\nimport { isArray } from \"./core\";\n\n/**\n * Escapes special characters for a JS regex.\n *\n * @see https://stackoverflow.com/questions/3115150/how-to-escape-regular-expression-special-characters-using-javascript#answer-9310752\n *\n * @param {string} text The string to escape.\n * @return {string} The same string with special regex characters escaped.\n */\nexport function escapeRegExp(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\n/**\n * Trim characters from the beginning and end of a string.\n *\n * @param {string} str The string.\n * @param {string} characterMask Character mask.\n * @param {Object} options Options.\n * @param {Object.boolean} options.shouldTrimLeft \"true\" to trim left (defaults to \"true\" if omitted).\n * @param {Object.boolean} options.shouldTrimRight \"true\" to trim right (defaults to \"true\" if omitted).\n * @return {string} The trimmed string.\n */\nexport function trimCharacterMask(str, characterMask, options = {}) {\n  if (typeof characterMask === \"undefined\") {\n    characterMask = \" \";\n  }\n  const escapedCharacterMask = escapeRegExp(characterMask);\n\n  const shouldTrimLeft =\n    typeof options.shouldTrimLeft === \"undefined\" || options.shouldTrimLeft;\n  const shouldTrimRight =\n    typeof options.shouldTrimRight === \"undefined\" || options.shouldTrimRight;\n\n  const regexParts = [];\n  if (shouldTrimLeft) {\n    regexParts[regexParts.length] = \"^[\" + escapedCharacterMask + \"]+\";\n  }\n  if (shouldTrimRight) {\n    regexParts[regexParts.length] = \"[\" + escapedCharacterMask + \"]+$\";\n  }\n  const regex = new RegExp(regexParts.join(\"|\"), \"gm\");\n  return str.replace(regex, \"\");\n}\n\n/**\n * Trim characters from the beginning and end of a string using an array\n * of regex characters.\n *\n * @param {string} str The string.\n * @param {string} regexCharacters Regex characters.\n * @param {string} additionalModifiers Additional regex modifiers.\n * @return {string} The trimmed string.\n */\nexport function trimCharacterRegex(str, regexCharacters, additionalModifiers) {\n  if (typeof regexCharacters === \"undefined\") {\n    regexCharacters = [\"\\\\s\"];\n  }\n  additionalModifiers = additionalModifiers || \"\";\n  const regex = new RegExp(\n    \"(^(\" +\n      regexCharacters.join(\"|\") +\n      \")+)|((\" +\n      regexCharacters.join(\"|\") +\n      \")+$)\",\n    \"g\" + additionalModifiers\n  );\n  return str.replace(regex, \"\");\n}\n\n/**\n * Alias of \"trimCharacterMask\".\n * Trim characters from the beginning and end of a string.\n *\n * @param {string} str The string.\n * @param {string} characterMask Character mask.\n * @return {string} The trimmed string.\n */\nexport function trim(str, characterMask) {\n  return trimCharacterMask(str, characterMask);\n}\n\n/**\n * Trim characters from the beginning of a string.\n *\n * @param {string} str The string.\n * @param {string} characterMask Character mask.\n * @return {string} The left-trimmed string.\n */\nexport function trimLeft(str, characterMask) {\n  return trimCharacterMask(str, characterMask, {\n    shouldTrimLeft: true,\n    shouldTrimRight: false,\n  });\n}\n\n/**\n * Trim characters from the end of a string.\n *\n * @param {string} str The string.\n * @param {string} characterMask Character mask.\n * @return {string} The right-trimmed string.\n */\nexport function trimRight(str, characterMask) {\n  return trimCharacterMask(str, characterMask, {\n    shouldTrimLeft: false,\n    shouldTrimRight: true,\n  });\n}\n\n/**\n * Concats the values of an array with an outer separator using an inner separator\n * for first nesting level arrays.\n *\n * E.g.:\n *\n *     concatWithInnerOuterSeparators([\"a\", \"value\", [\"with\", \"nested\", \"value\"], \"etc\"], \" # \", \" $ \")\n *     // Returns:\n *     \"a # value # with $ nested $ value # etc\"\n *\n * @param {Array<string>|Array<Array<string>>} arrayToConcat An array of strings or arrays or strings.\n * @param {string} outerSeparator Outer separator.\n * @param {string} innerSeparator Inner separator.\n * @return {string} The concatenated string.\n */\nexport function concatWithInnerOuterSeparators(\n  arrayToConcat,\n  outerSeparator = \" \",\n  innerSeparator = \" \"\n) {\n  const toConcatFinally = [];\n  for (const value of arrayToConcat) {\n    if (isArray(value)) {\n      toConcatFinally[toConcatFinally.length] = trim(\n        value.join(innerSeparator),\n        innerSeparator\n      );\n    } else {\n      toConcatFinally[toConcatFinally.length] = value;\n    }\n  }\n  const ret = trim(toConcatFinally.join(outerSeparator), outerSeparator);\n  return ret;\n}\n\n/**\n * Returns an array of options with a value and a label string.\n *\n * @param {Object} obj An object with parameters.\n * @param {Object[]} obj.arrayOfObjects An array of objects.\n * @param {string[]|Array.<string|string[]>} obj.concatObjectProps Properties, keys of each object to use for the label\n *                                                                 and to concat with \"outerSeparator\".\n *                                                                 A nested array of properties can be used to specify an inner\n *                                                                 part of the label to concat using the \"innerSeparator\".\n * @param {string} obj.valueProp Name of the property which value has to be used for the value property\n *                               of the returned array of objects.\n * @param {string} obj.outerSeparator Outer separator.\n * @param {string} obj.innerSeparator Inner separator.\n * @return {Object[]} Array of objects, each object with two properties:\n *\n *                        - \"value\": The value of the object;\n *                        - \"label\": The label of the object.\n *\n */\nexport function optionsValueLabel({\n  arrayOfObjects,\n  concatObjectProps,\n  valueProp = \"id\",\n  outerSeparator = \" \",\n  innerSeparator = \" \",\n}) {\n  const options = [];\n  for (const obj of arrayOfObjects) {\n    const arrayToConcat = [];\n    for (const prop of concatObjectProps) {\n      if (isArray(prop)) {\n        arrayToConcat[arrayToConcat.length] = prop.map(\n          propName => obj[propName]\n        );\n      } else {\n        arrayToConcat[arrayToConcat.length] = obj[prop];\n      }\n    }\n    options[options.length] = {\n      value: obj[valueProp],\n      label: concatWithInnerOuterSeparators(\n        arrayToConcat,\n        outerSeparator,\n        innerSeparator\n      ),\n    };\n  }\n  return options;\n}\n\n/**\n * Tests if a string starts with another\n *\n * @param {string} haystack The haystack string.\n * @param {string} needle The needle string.\n * @return {boolean} True if the haystack string starts with needle, false otherwise.\n */\nexport function startsWith(haystack, needle) {\n  return haystack.indexOf(needle, 0) === 0;\n}\n\n/**\n * Makes the first character of the given string uppercase.\n *\n * @param {string} string A string.\n * @return {string} The string with its first character made uppercase.\n */\nexport function ucaseFirst(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Reverses a string.\n *\n * @param {string} string A string to reverse.\n * @return {string} The reversed string.\n */\nexport function reverseString(string) {\n  return string.split(\"\").reverse().join(\"\");\n}\n\n/**\n * Given an integer, returns a string containing the same integer with additional thousands separators.\n *\n * @param {number} num An integer.\n * @param {string} [sep] The thousands separator to use.\n * @return {string} The same integer with thousands separators.\n */\nexport function separateIntThousands(num, sep = \",\") {\n  return num\n    .toString()\n    .split(\"\")\n    .reverse()\n    .map((d, i, a) =>\n      (i + 1) % 3 === 0 && i !== a.length - 1 ? `${sep}${d}` : d\n    )\n    .reverse()\n    .join(\"\");\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { isIntegerOrIntegerStr } from \"./core\";\nimport { intDiv } from \"./math\";\n\n/**\n * Time-related utility functions.\n */\n\n/**\n * Returns the current Unix time in seconds.\n *\n * @return {number} Current Unix time in seconds.\n */\nexport function time() {\n  const d = new Date();\n  const seconds = Math.round(d.getTime() / 1000);\n  return seconds;\n}\n\n/**\n * Returns the time string approximated to the nearest microsecond\n * corresponding the given Unix timestamp in milliseconds\n * in the format \"HH:mm:ss.ms\".\n *\n * @param {number} [ms] The time in microseconds to convert into a string.\n *                      If omitted, the current time will be used.\n * @return {string} The time string.\n */\nexport function msToTime(ms) {\n  const date = new Date(ms || new Date().getTime());\n  const isoDate = new Date(\n    date.getTime() - date.getTimezoneOffset() * 60000\n  ).toISOString();\n  return isoDate.slice(11, -1);\n}\n\n/**\n * Converts milliseconds to seconds.\n *\n * @param {number} millisec Number of milliseconds.\n * @return {number} The milliseconds in seconds.\n */\nexport function millisecToSec(millisec) {\n  return millisec * 0.001;\n}\n\n/**\n * Converts seconds to a `minutes:seconds` or `hours:minutes:seconds` time string\n * (if the second parameter is an object with `includeHours` set to a truthy value),\n * e.g. `123` becomes `\"02:03\"`, or `\"00:02:03\"` if `includeHours` is truthy.\n *\n * @param {number} secs The number of seconds.\n * @param {Object} options Options.\n * @param {Object.boolean} options.includeHours \"true\" to include hours (defaults to \"false\" if omitted).\n * @return {string} The time string.\n */\nexport const secondsToTimeString = (secs, { includeHours = false } = {}) => {\n  if (!secs || !isIntegerOrIntegerStr(secs)) {\n    return includeHours ? \"00:00:00\" : \"00:00\";\n  }\n  let hours = \"\";\n  let minutes = intDiv(secs, 60);\n  if (includeHours) {\n    hours = `${(intDiv(secs, 60 * 60) + \"\").padStart(2, \"0\")}:`;\n    minutes = minutes % 60;\n  }\n  minutes += \"\";\n  const seconds = (secs % 60) + \"\";\n  return `${hours}${minutes.padStart(2, \"0\")}:${seconds.padStart(2, \"0\")}`;\n};\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Returns true if the given string is a valid HTTP URL (either HTTP or HTTPS).\n *\n * @see https://regex101.com/r/HjBD9T/1\n *\n * @param {string} maybeValidHttpUrl A string that's maybe a valid HTTP URL.\n * @return {boolean} True if the given string is a valid HTTP URL, false otherwise.\n */\nexport function isValidHttpUrl(maybeValidHttpUrl) {\n  return /^(?:(?:https?:)\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    maybeValidHttpUrl\n  );\n}\n","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Web application (browser) utility functions.\n */\n\nimport { config, uniqueId, isEmpty, isJSONString, isPlainObject } from \"./core\";\n\n/**\n * Builds a form data instance or object recursively.\n *\n * @see https://stackoverflow.com/questions/22783108/convert-js-object-to-form-data#answer-42483509\n *\n * @param {FormData|Object} formData Form data instance or JS POJO object.\n * @param {Array|Object} data JS POJO object or array with the form data to use to build the forma data.\n * @param {boolean} [shouldEncodeURIComponent] Optionally instructs the function if the parameters should be encoded\n *                                             (keys and values) using \"encodeURIComponent\".\n * @param {string} [parentKey] Parent key for nested parameters (used internally for recursion).\n * @return {undefined}\n */\nfunction buildFormData(formData, data, shouldEncodeURIComponent, parentKey) {\n  if (\n    data &&\n    typeof data === \"object\" &&\n    !(data instanceof Date) &&\n    !(data instanceof File)\n  ) {\n    Object.keys(data).forEach(key => {\n      buildFormData(\n        formData,\n        data[key],\n        shouldEncodeURIComponent,\n        parentKey\n          ? `${parentKey}[${key}]`\n          : shouldEncodeURIComponent\n          ? encodeURIComponent(key)\n          : key\n      );\n    });\n  } else {\n    // Leaf value.\n    const value =\n      data == null\n        ? \"\"\n        : shouldEncodeURIComponent\n        ? encodeURIComponent(data)\n        : data;\n    formData instanceof FormData\n      ? formData.append(parentKey, value)\n      : (formData[parentKey] = value);\n  }\n}\n\n/**\n * Constructs a query string from the given data.\n * This method works with nested objects/arrays.\n *\n * @param {Array|Object} data The object.\n * @return {string} The query string.\n */\nexport function buildQueryString(data) {\n  const formData = {};\n  buildFormData(formData, data, true); // \"true\" instructs the function to encode URI parts (keys and values).\n  const parts = [];\n  for (const prop in formData) {\n    parts.push(prop + \"=\" + formData[prop]);\n  }\n  return parts.join(\"&\");\n}\n\n/**\n * Converts an object (array or JS POJO object) to a form data instance.\n *\n * @param {Array|Object} data The data (array or POJO object).\n * @return {FormData} A form data instance.\n */\nexport function formData(data) {\n  const formData = new FormData();\n  buildFormData(formData, data);\n  return formData;\n}\n\n/**\n * Returns a new XMLHttpRequest or ActiveXObject object.\n *\n * @return {XMLHttpRequest|ActiveXObject}\n */\nexport const xhr = () =>\n  (window.ActiveXObject && new window.ActiveXObject(\"Microsoft.XMLHTTP\")) ||\n  new XMLHttpRequest();\n\n/**\n * Checks whether the network is reachable or not.\n *\n * @param {string} URI An eventual URI to use for the request.\n *                     NOTE: If omitted, then \"config.checkNetworkURI\" will be used,\n *                           or, if \"config.checkNetworkURI\" is not set,\n *                           the website's hostname will be used.\n *                           Also, in every case, A GET query string with a random parameter\n *                           is always appended to the URI.\n * @return {Promise} A promise which resolves to \"true\" if the network is reachable and to \"false\" otherwise.\n *                   Note that the returned promise always resolves to \"true\" when this code runs on localhost.\n */\nexport function checkNetwork(URI = null) {\n  // Handle IE and more capable browsers.\n  const xhrObj = xhr();\n\n  return new Promise(resolve => {\n    // Issue request and handle response.\n    try {\n      xhrObj.onreadystatechange = () => {\n        if (xhrObj.readyState == 4) {\n          resolve(\n            xhrObj.status >= 200 &&\n              (xhrObj.status < 300 || xhrObj.status === 304)\n          );\n        }\n      };\n\n      // Open new request as a HEAD to the root hostname with a random param to bust the cache.\n      xhrObj.open(\n        \"HEAD\",\n        (URI ||\n          config.checkNetworkURI ||\n          \"//\" +\n            window.location.hostname +\n            (window.location.port != 80 ? \":\" + window.location.port : \"\")) +\n          \"?rand=\" +\n          Math.floor((1 + Math.random()) * 0x10000), // 0x10000 = 2^16\n        true\n      );\n\n      xhrObj.send();\n    } catch (error) {\n      resolve(false);\n    }\n  });\n}\n\n/**\n * Returns a promise which resolves when the network is available.\n *\n * NOTE: If the network is available, the promise will resolve almost immediately.\n *\n * @param {number} intervalMillisecs An interval in milliseconds to wait before the next network check.\n * @return {Promise} A promise.\n */\nexport function waitNetwork(intervalMillisecs = 3000) {\n  return new Promise(resolve => {\n    checkNetwork().then(isNetworkReachable => {\n      if (isNetworkReachable) {\n        resolve();\n      } else {\n        const interval = setInterval(() => {\n          checkNetwork().then(isNetworkReachable => {\n            if (isNetworkReachable) {\n              clearInterval(interval);\n              resolve();\n            }\n          });\n        }, intervalMillisecs);\n      }\n    });\n  });\n}\n\n/**\n * Sets a cookie value.\n *\n * @see https://www.w3schools.com/js/js_cookies.asp\n *\n * @param {string} cname The cookie name.\n * @param {string} cvalue The cookie value.\n * @param {number|undefined} exdays Number of days after which the cookie expires,\n *                                  or \"undefined\" to make the cookie expire at the end of the session.\n * @return {undefined}\n */\nexport function setCookie(cname, cvalue, exdays) {\n  let expires = \"\";\n  if (exdays) {\n    const d = new Date();\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n    expires = \"expires=\" + d.toUTCString() + \";\";\n  }\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \"path=/\";\n}\n\n/**\n * Gets a cookie value.\n *\n * @see https://www.w3schools.com/js/js_cookies.asp\n *\n * @param {string} cname The cookie name.\n * @return {string|undefined} The cookie value or \"undefined\", if not set.\n */\nexport function getCookie(cname) {\n  const name = cname + \"=\";\n  const ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return void 0;\n}\n\n/**\n * Unsets a cookie.\n *\n * @param {string} cname The cookie name.\n * @return {undefined}\n */\nexport function unsetCookie(cname) {\n  setCookie(cname, \"\", -365);\n}\n\n/**\n * Tests whether a DOM element is in viewport or not.\n *\n * @param {Element} elem The DOM element.\n * @return {boolean} True if it is in viewport, false otherwise.\n */\nexport function isInViewport(elem) {\n  const bounding = elem.getBoundingClientRect();\n  return (\n    bounding.top >= 0 &&\n    bounding.left >= 0 &&\n    bounding.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    bounding.right <=\n      (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n\n/**\n * Tests if a DOM element is scrolled into the scrollable view of its parent scrollable container.\n *\n * @param {Element} elem The DOM element to test.\n * @param {Element} holder The DOM element of the scrollable container of the DOM element to test.\n * @param {number|Function} minPx Minimum number of pixels of the element's height which must be scrolled into the view\n *                                in order to consider the element to be scrolled into view.\n *                                If a function is given, it will receive the element's bounding client rect as the first argument\n *                                as well as the holder element's bounding client rect as the second argument and must return\n *                                the minimum number of pixels.\n * @return {boolean} True if the given element is scrolled into view, false otherwise.\n */\nexport function isScrolledIntoView(el, holder, minPx = 1) {\n  const elRect = el.getBoundingClientRect();\n  const holderRect = holder.getBoundingClientRect();\n  const { top, bottom, height } = elRect;\n\n  const minPxNumberFn = () =>\n    typeof minPx === \"function\" ? minPx(elRect, holderRect) : minPx;\n  let bottomDiff;\n  return top <= holderRect.top\n    ? holderRect.top - top + minPxNumberFn() <= height\n    : (bottomDiff = bottom - holderRect.bottom) < 0\n    ? true\n    : holderRect.bottom >= top && minPx\n    ? holderRect.bottom - top >= minPxNumberFn()\n    : bottomDiff <= height;\n}\n\n/**\n * Tests if a DOM element has a vertical scrollbar.\n *\n * @param {Element} elem The DOM element.\n * @return {boolean} True it has a vertical scrollbar, false otherwise.\n */\nexport function hasVerticalScrollbar(elem) {\n  const hasVerticalScrollbar = elem.scrollHeight > elem.clientHeight;\n  return hasVerticalScrollbar;\n}\n\n/**\n * Tests if a DOM element has a horizontal scrollbar.\n *\n * @param {Element} elem The DOM element.\n * @return {boolean} True it has a horizontal scrollbar, false otherwise.\n */\nexport function hasHorizontalScrollbar(elem) {\n  const hasHorizontalScrollbar = elem.scrollWidth > elem.clientWidth;\n  return hasHorizontalScrollbar;\n}\n\n/**\n * Generates a unique ID which can be used for an element.\n *\n * @param {string|undefined} [elementUniqueIdPrefix] Local unique ID prefix which overrides the prefix\n *                                                   set on the \"config\" configuration object.\n * @return {string} The element unique ID.\n */\nexport function elementUniqueId(elementUniqueIdPrefix = void 0) {\n  const uniqueElementIdSuffix = uniqueId();\n  return (\n    (elementUniqueIdPrefix || config.elementUniqueIdPrefix) +\n    uniqueElementIdSuffix\n  );\n}\n\n/**\n * Gets the computed style of an element.\n *\n * @param {Element} element DOM element.\n * @return {CSSStyleDeclaration} The computed style.\n */\nexport function getElementComputedStyle(element) {\n  return window.getComputedStyle(element);\n}\n\n/**\n * Gets element's inner dimensions (height and width without padding).\n *\n * @param {Element} element An element.\n * @return {Object} An object with \"width\" and \"height\" properties.\n */\nexport function elementInnerDimensions(element) {\n  const computedStyle = getElementComputedStyle(element);\n\n  let elementHeight = element.clientHeight; // Height with padding.\n  let elementWidth = element.clientWidth; // Width with padding\n\n  elementHeight -=\n    parseFloat(computedStyle.paddingTop) +\n    parseFloat(computedStyle.paddingBottom);\n  elementWidth -=\n    parseFloat(computedStyle.paddingLeft) +\n    parseFloat(computedStyle.paddingRight);\n  return {\n    width: elementWidth,\n    height: elementHeight,\n  };\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet countTextareaLinesBuffer;\n\n/**\n * Returns the number of lines in a textarea, including wrapped lines.\n *\n * @see https://stackoverflow.com/questions/28905965/textarea-how-to-count-wrapped-lines-rows#answer-45252226\n *\n * @param {HTMLTextAreaElement} textarea A textarea element. Note that the textarea should have an integer line height\n *                                       to avoid rounding errors.\n */\nexport function countTextareaLines(textarea) {\n  if (countTextareaLinesBuffer == null) {\n    countTextareaLinesBuffer = document.createElement(\"textarea\");\n    countTextareaLinesBuffer.style.border = \"none\";\n    countTextareaLinesBuffer.style.height = \"0\";\n    countTextareaLinesBuffer.style.overflow = \"hidden\";\n    countTextareaLinesBuffer.style.padding = \"0\";\n    countTextareaLinesBuffer.style.position = \"absolute\";\n    countTextareaLinesBuffer.style.left = \"0\";\n    countTextareaLinesBuffer.style.top = \"0\";\n    countTextareaLinesBuffer.style.zIndex = \"-1\";\n    document.body.appendChild(countTextareaLinesBuffer);\n  }\n\n  const cs = window.getComputedStyle(textarea);\n  const pl = parseInt(cs.paddingLeft);\n  const pr = parseInt(cs.paddingRight);\n  let lh = parseInt(cs.lineHeight);\n\n  // `cs.lineHeight` may return 'normal', which means line height = font size.\n  if (isNaN(lh)) lh = parseInt(cs.fontSize);\n\n  // Copy content width.\n  countTextareaLinesBuffer.style.width = textarea.clientWidth - pl - pr + \"px\";\n\n  // Copy text properties.\n  countTextareaLinesBuffer.style.font = cs.font;\n  countTextareaLinesBuffer.style.letterSpacing = cs.letterSpacing;\n  countTextareaLinesBuffer.style.whiteSpace = cs.whiteSpace;\n  countTextareaLinesBuffer.style.wordBreak = cs.wordBreak;\n  countTextareaLinesBuffer.style.wordSpacing = cs.wordSpacing;\n  countTextareaLinesBuffer.style.wordWrap = cs.wordWrap;\n\n  // Copy value.\n  countTextareaLinesBuffer.value = textarea.value;\n\n  let result = Math.floor(countTextareaLinesBuffer.scrollHeight / lh);\n  if (result == 0) {\n    result = 1;\n  }\n  return result;\n}\n\n/**\n * Checks if the scroll of an element is on the bottom.\n *\n * @param {Element} DOMNode Element.\n * @return {boolean} True if the scroll is on the bottom, false otherwise.\n */\nexport function isScrollOnBottom(DOMNode) {\n  const ret = DOMNode.scrollTop + DOMNode.offsetHeight >= DOMNode.scrollHeight;\n  return ret;\n}\n\n/**\n * Returns the default browser's vertical scrollbar width.\n *\n * @return {Number} The scrollbar width.\n */\nexport function getVerticalScrollBarWidth() {\n  const scrollDiv = document.createElement(\"div\");\n  scrollDiv.className = \"vertical-scrollbar-measure\";\n\n  const sheet = document.createElement(\"style\");\n  sheet.innerHTML =\n    \"div.vertical-scrollbar-measure { width: 100px; height: 100px; overflow: scroll; position: absolute; top: -9999px; }\";\n\n  document.body.appendChild(sheet);\n  document.body.appendChild(scrollDiv);\n\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n  document.body.removeChild(scrollDiv);\n  const sheetParent = sheet.parentNode;\n  sheetParent.removeChild(sheet);\n\n  return scrollbarWidth;\n}\n\n/**\n * Tests if an element with \"text-overflow: ellipsis;\" has the ellipsis active\n * and therefore its text is truncated.\n *\n * @param {Element} e The DOM element.\n * @return {boolean} True if ellipsis are present, false otherwise.\n */\nexport function isEllipsisActive(e) {\n  return e.offsetWidth < e.scrollWidth;\n}\n\n/**\n * A fallback function to copy a text to clipboard.\n *\n * @param {string} text The text to copy.\n * @param {Function} [onSuccess] An optional callback to execute on success.\n * @param {Function} [onFailure] An optional callback to execute on failure.\n * @return {undefined}\n */\nfunction fallbackCopyTextToClipboard(text, onSuccess, onFailure) {\n  const bodyScrollTop =\n    document.documentElement.scrollTop || document.body.scrollTop;\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    const successful = document.execCommand(\"copy\");\n    if (successful) {\n      onSuccess && onSuccess();\n    } else {\n      onFailure && onFailure();\n    }\n  } catch (err) {\n    onFailure && onFailure(err);\n  }\n\n  (document.body.removeChild(textArea) &&\n    document.documentElement.scrollTop &&\n    (document.documentElement.scrollTop = bodyScrollTop)) ||\n    (document.body.scrollTop = bodyScrollTop);\n}\n\n/**\n * Copies a text to clipboard.\n *\n * @param {string} text The text to copy.\n * @param {Function} [onSuccess] An optional callback to execute on success.\n * @param {Function} [onFailure] An optional callback to execute on failure.\n * @return {undefined}\n */\nexport function copyTextToClipboard(text, onSuccess, onFailure) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text, onSuccess, onFailure);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(\n    function () {\n      onSuccess && onSuccess();\n    },\n    function (err) {\n      onFailure && onFailure(err);\n    }\n  );\n}\n\n/**\n * Asynchronously invokes a callback multiple times, each in its own animation frame.\n *\n * @param {number} n The number of times the callback should be invoked.\n * @param {Function} callback The callback to invoke.\n * @return {*} The identifier of the first animation frame or \"n\" if it is falsy during the outermost call.\n */\nexport const rAFLooper = (n, callback) =>\n  n &&\n  window.requestAnimationFrame(() => (callback(), rAFLooper(--n, callback)));\n\n/**\n * Requests a predefined number of animation frames and executes a callback after.\n *\n * @param {number} count The number of animation frames to request before executing the callback.\n * @param {Function} callback The callback to execute after \"count\" animation frames have been requested.\n * @return {number} The identifier of the first animation frame.\n */\nexport const nestedRAF = (count, callback) => {\n  let c = count || 1;\n  const innerCallback = () => {\n    c--;\n    if (!c) {\n      callback();\n      return;\n    }\n    window.requestAnimationFrame(innerCallback);\n  };\n  return window.requestAnimationFrame(innerCallback);\n};\n\n/**\n * Returns the raw contents of the URI fragment (i.e. everything after the hash (\"#\") character).\n *\n * @param {string} URIFragment The URI fragment.\n * @return {string} The raw contents of the URI fragment.\n */\nexport function getRawURIFragment(URIFragment) {\n  const fragment = (URIFragment || window.location.hash).replace(/^#/, \"\");\n  return fragment;\n}\n\n/**\n * Returns the decoded contents of a URI fragment (i.e. everything after the hash (\"#\") character).\n *\n * @param {string} URIFragment The URI fragment.\n * @return {string} The contents of the URI fragment, decoded.\n */\nexport function getDecodedURIFragment(URIFragment) {\n  const fragment = decodeURIComponent(getRawURIFragment(URIFragment));\n  return fragment;\n}\n\n/**\n * Appends an encoded JSON fragment to a URI.\n *\n * @param {string} URI The URI.\n * @param {*} data Data to encode in JSON format.\n */\nexport function appendEncodedJSONFragmentToURI(URI, data) {\n  return URI + \"#\" + encodeURIComponent(JSON.stringify(data));\n}\n\n/**\n * Returnes the decoded JSON data eventually stored in the URI fragment.\n *\n * @param {*} defaultData Default data to return if either the URI fragment is missing or\n *                        the content of the URI fragment is not a valid JSON-encoded string.\n * @return {*} The decoded JSON data or \"defaultData\".\n */\nexport function getDecodedJSONFromFragmentURI(defaultData = null) {\n  const fragment = window.location.hash;\n  if (!isEmpty(fragment)) {\n    const decodedFragment = getDecodedURIFragment(fragment);\n    if (isJSONString(decodedFragment)) {\n      return JSON.parse(decodedFragment);\n    }\n  }\n  return defaultData;\n}\n/**\n * Parses a multidimensional query string and returns an object with the parsed args.\n *\n * @see https://stackoverflow.com/questions/8648892/convert-url-parameters-to-a-javascript-object#answer-44713056\n *\n * @param {string} str The query string.\n * @param {Object} [array] The base object to use (or a new object if omitted or falsy).\n * @return {Object} The object with the parsed data.\n */\nexport function parseQueryStringArgsMultiDim(str, array) {\n  if (!str) {\n    str = window.location.search.substr(1);\n  }\n  let i,\n    j,\n    ct,\n    p,\n    lastObj,\n    obj,\n    undef,\n    chr,\n    tmp,\n    key,\n    value,\n    postLeftBracketPos,\n    keys,\n    keysLen;\n  const strArr = String(str).replace(/^&/, \"\").replace(/&$/, \"\").split(\"&\"),\n    sal = strArr.length,\n    fixStr = function (str) {\n      return decodeURIComponent(str.replace(/\\+/g, \"%20\"));\n    };\n\n  if (!array) {\n    array = {};\n  }\n\n  for (i = 0; i < sal; i++) {\n    tmp = strArr[i].split(\"=\");\n    key = fixStr(tmp[0]);\n    value = tmp.length < 2 ? \"\" : fixStr(tmp[1]);\n\n    while (key.charAt(0) === \" \") {\n      key = key.slice(1);\n    }\n    if (key.indexOf(\"\\x00\") > -1) {\n      key = key.slice(0, key.indexOf(\"\\x00\"));\n    }\n    if (key && key.charAt(0) !== \"[\") {\n      keys = [];\n      postLeftBracketPos = 0;\n      for (j = 0; j < key.length; j++) {\n        if (key.charAt(j) === \"[\" && !postLeftBracketPos) {\n          postLeftBracketPos = j + 1;\n        } else if (key.charAt(j) === \"]\") {\n          if (postLeftBracketPos) {\n            if (!keys.length) {\n              keys.push(key.slice(0, postLeftBracketPos - 1));\n            }\n            keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos));\n            postLeftBracketPos = 0;\n            if (key.charAt(j + 1) !== \"[\") {\n              break;\n            }\n          }\n        }\n      }\n      if (!keys.length) {\n        keys = [key];\n      }\n      for (j = 0; j < keys[0].length; j++) {\n        chr = keys[0].charAt(j);\n        if (chr === \" \" || chr === \".\" || chr === \"[\") {\n          keys[0] = keys[0].substr(0, j) + \"_\" + keys[0].substr(j + 1);\n        }\n        if (chr === \"[\") {\n          break;\n        }\n      }\n\n      obj = array;\n      for (j = 0, keysLen = keys.length; j < keysLen; j++) {\n        key = keys[j].replace(/^['\"]/, \"\").replace(/['\"]$/, \"\");\n        lastObj = obj;\n        if ((key !== \"\" && key !== \" \") || j === 0) {\n          if (obj[key] === undef) {\n            obj[key] = {};\n          }\n          obj = obj[key];\n        } else {\n          // To insert new dimension\n          ct = -1;\n          for (p in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, p)) {\n              if (+p > ct && p.match(/^\\d+$/g)) {\n                ct = +p;\n              }\n            }\n          }\n          key = ct + 1;\n        }\n      }\n      lastObj[key] = value;\n    }\n  }\n\n  /* ===== */\n  /*\n   * This code converts the object properties to arrays if they are objects with consecutive integer keys\n   * from 0 to n, where n is the number of properties of that object minus one\n   * (i.e. it converts meaningful objects which are to be interpreted as arrays to arrays).\n   */\n  const fnNormalizeObjToArrayIfPropsAreConsecutiveIntsFrom0 = function (obj) {\n    const keys = Object.keys(obj);\n    const truthMap = {};\n    for (let i = 0; i < keys.length; i++) {\n      truthMap[i] = true;\n    }\n\n    const array = [];\n    for (let i = 0; i < keys.length; i++) {\n      const prop = keys[i] + \"\";\n      if (!prop.match(/^[0-9]+$/)) {\n        return obj;\n      }\n      const intProp = Number(prop);\n      if (truthMap[intProp]) {\n        array[intProp] = obj[prop];\n        delete truthMap[intProp];\n      } else {\n        return obj;\n      }\n    }\n\n    if (Object.keys(truthMap).length === 0) {\n      return array;\n    } else {\n      return obj;\n    }\n  };\n\n  const fnNormalizeToArrayIfNeeded = function fnNormalizeToArrayIfNeeded(obj) {\n    for (const prop in obj) {\n      if (isPlainObject(obj[prop])) {\n        obj[prop] = fnNormalizeObjToArrayIfPropsAreConsecutiveIntsFrom0(\n          obj[prop]\n        );\n        fnNormalizeToArrayIfNeeded(obj[prop]);\n      }\n    }\n  };\n  /* /===== */\n\n  fnNormalizeToArrayIfNeeded(array);\n\n  return array;\n}\n\n/**\n * Gets the query string arguments of the current location in a multidimensional fashion\n * (multidimension-aware).\n *\n * @return {Object} An object representing the query string arguments.\n */\nexport function getQueryStringArgsMultiDim() {\n  const obj = {};\n  parseQueryStringArgsMultiDim(location.search.substring(1), obj);\n  return obj;\n}\n\n/**\n * Focuses an input without scrolling.\n *\n * @see https://stackoverflow.com/questions/4963053/focus-to-input-without-scrolling\n *\n * @param {Element} elem The DOM element.\n */\nexport const cursorFocus = function (elem) {\n  let x, y;\n  // More sources for scroll x, y offset.\n  if (typeof window.pageXOffset !== \"undefined\") {\n    x = window.pageXOffset;\n    y = window.pageYOffset;\n  } else if (typeof window.scrollX !== \"undefined\") {\n    x = window.scrollX;\n    y = window.scrollY;\n  } else if (\n    document.documentElement &&\n    typeof document.documentElement.scrollLeft !== \"undefined\"\n  ) {\n    x = document.documentElement.scrollLeft;\n    y = document.documentElement.scrollTop;\n  } else {\n    x = document.body.scrollLeft;\n    y = document.body.scrollTop;\n  }\n\n  elem.focus();\n\n  if (typeof x !== \"undefined\") {\n    window.scrollTo(x, y);\n  }\n};\n\n/**\n * Detects wrapped elements.\n *\n * @param {string|Element[]} classNameOrElements A class name (with or without the leading dot) or the DOM elements to check.\n * @return {Element[]} The wrapped DOM elements.\n */\nexport function detectWrapped(classNameOrElements) {\n  let elements;\n  if (typeof classNameOrElements === \"string\") {\n    classNameOrElements = classNameOrElements.replace(/^\\./, \"\");\n    elements = document.getElementsByClassName(classNameOrElements);\n  } else {\n    elements = classNameOrElements;\n  }\n  const wrapped = [];\n  let prev = {};\n  let curr = {};\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    curr = element.getBoundingClientRect();\n    if (prev && prev.top < curr.top) {\n      wrapped.push(element);\n    }\n    prev = i === 0 ? curr : prev;\n  }\n  return wrapped;\n}\n\n/**\n * Gets the maximum nesting level of an element (or of the whole DOM if \"document.body\" is given as parameter).abs\n *\n * @param {Element} elem The DOM element from which to start identifying the maximum nesting level.\n * @return {number} The maximum nesting level, starting from 0 if the given element has no children.\n */\nexport function maxNestingLevel(el) {\n  if (!el.children) {\n    return 0;\n  }\n  let max = -1;\n  for (let i = 0; i < el.children.length; i++) {\n    const nestingLevel = maxNestingLevel(el.children[i]);\n    if (nestingLevel > max) {\n      max = nestingLevel;\n    }\n  }\n  return max + 1;\n}\n\n/**\n * @type {RegExp}\n */\nconst REGEXP_SCROLL_PARENT = /^(visible|hidden)/;\n\n/**\n * Get the first scrollable ancestor of an element.\n *\n * @param {Element} el The element to use as the base from which to determine its first scrollable ancestor.\n * @return {Element} The first scrollable ancestor element scroll, or the document body.\n */\nexport const getScrollableAncestor = el =>\n  !(el instanceof HTMLElement) || typeof window.getComputedStyle !== \"function\"\n    ? null\n    : el.scrollHeight >= el.clientHeight &&\n      !REGEXP_SCROLL_PARENT.test(\n        window.getComputedStyle(el).overflowY || \"visible\"\n      )\n    ? el\n    : getScrollableAncestor(el.parentElement) ||\n      document.scrollingElement ||\n      document.body;\n\n/**\n * Smoothly scrolls to the top of a scrollable element or the browser's window.\n *\n * @param {Element} [el] The element. Defaults to \"window\".\n * @return {undefined}\n */\nexport const smoothScrollToTop = (el = window) =>\n  el.scroll({\n    top: 0,\n    behavior: \"smooth\",\n  });\n\n/**\n * Downloads a file without opening a new browser's tab.\n *\n * @see https://stackoverflow.com/questions/1066452/easiest-way-to-open-a-download-window-without-navigating-away-from-the-page#answer-43523297\n *\n * @param {string} fileURI The URI of the file to download.\n * @return {undefined}\n */\nexport function downloadFile(fileURI) {\n  var link = document.createElement(\"a\");\n  link.href = fileURI;\n  link.download = fileURI.substr(fileURI.lastIndexOf(\"/\") + 1);\n  link.click();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Public API exposed to client code.\n */\n\nexport {\n  config,\n  isObjectEmpty,\n  isObject,\n  isPlainObject,\n  isArray,\n  isEmpty,\n  isEmptyOr0,\n  getGlobalObject,\n  uniqueId,\n  deepArrayCompare,\n  deepObjectCompare,\n  nestedObjectConstructValue,\n  cloneDeeplyJSON,\n  isReferenceType,\n  isPrimitiveType,\n  hasCyclicReference,\n  typeToStr,\n  cloneObjDeeply,\n  deepObjectExtend,\n  deepObjectCloningExtend,\n  extend,\n  extendDecorate,\n  shallowExtend,\n  includesTypeCoercion,\n  nestedPropertyValue,\n  getNestedPropertyValue,\n  hasNestedPropertyValue,\n  setNestedPropertyValue,\n  isUndefined,\n  isInt,\n  ctypeDigit,\n  isIntegerOrIntegerStr,\n  isCallable,\n  findIndex,\n  firstPropValue,\n  isStrictlyTrue,\n  isTruthy,\n  allTruthy,\n  allNotUndefined,\n  isJSONString,\n  noOpFn,\n  is,\n  shallowEqual,\n  objectPropEqual,\n  partialShallowEqual,\n  shallowObjectDiff,\n  nestedMapSet,\n  nestedMapHas,\n  nestedMapGet,\n  nestedTreeMapSet,\n  nestedTreeMapHas,\n  nestedTreeMapGet,\n  mapYield,\n  str,\n  mapObject,\n  mapToObject,\n  propSelection,\n  prototypeChainProperties,\n  prop,\n  defineProperty,\n  completeObjectAssign,\n} from \"./modules/core\";\nexport {\n  _,\n  proceedCallingFn,\n  curry,\n  POJOCurry,\n  compose,\n  pipe,\n  pick,\n  liftBinaryFn,\n  juxt,\n  converge,\n  execIfPOJOHas,\n  execWithExistentProps,\n  forGen,\n  flatten,\n  flattenDeep,\n  cartesianProduct,\n  identityFn,\n  identityArgsFn,\n  chain,\n} from \"./modules/fn\";\nexport {\n  stringHashArray,\n  hashString,\n  onePassStringHash,\n  intSumHash,\n} from \"./modules/hash\";\nexport {\n  timeout,\n  minDelayPromise,\n  maxDelayFallbackPromise,\n  applyAsync,\n  composeAsync,\n  asSoonAtLeastSomeFulfilled,\n} from \"./modules/promise\";\nexport {\n  buildQueryString,\n  formData,\n  xhr,\n  checkNetwork,\n  waitNetwork,\n  setCookie,\n  getCookie,\n  unsetCookie,\n  isInViewport,\n  isScrolledIntoView,\n  hasVerticalScrollbar,\n  hasHorizontalScrollbar,\n  elementUniqueId,\n  getElementComputedStyle,\n  elementInnerDimensions,\n  countTextareaLines,\n  isScrollOnBottom,\n  getVerticalScrollBarWidth,\n  isEllipsisActive,\n  copyTextToClipboard,\n  rAFLooper,\n  nestedRAF,\n  getRawURIFragment,\n  getDecodedURIFragment,\n  appendEncodedJSONFragmentToURI,\n  getDecodedJSONFromFragmentURI,\n  getQueryStringArgsMultiDim,\n  cursorFocus,\n  parseQueryStringArgsMultiDim,\n  detectWrapped,\n  maxNestingLevel,\n  getScrollableAncestor,\n  smoothScrollToTop,\n  downloadFile,\n} from \"./modules/web\";\nexport {\n  randomInt,\n  randomFloat,\n  randomStr,\n  randomString,\n  randomDifferentFromValue,\n  randomArrayShuffle,\n  uuid,\n  noncanonicalUUID,\n} from \"./modules/rand\";\nexport {\n  time,\n  msToTime,\n  millisecToSec,\n  secondsToTimeString,\n} from \"./modules/time\";\nexport {\n  escapeRegExp,\n  trimCharacterMask,\n  trimCharacterRegex,\n  trim,\n  trimLeft,\n  trimRight,\n  concatWithInnerOuterSeparators,\n  optionsValueLabel,\n  startsWith,\n  ucaseFirst,\n  reverseString,\n  separateIntThousands,\n} from \"./modules/string\";\nexport { googleMapBestZoomLevelFromBounds } from \"./modules/google\";\nexport { delay, debounce, throttle } from \"./modules/callback\";\nexport { basename, pathinfo, filenameExtension, dirname } from \"./modules/path\";\nexport { b2d, d2b } from \"./modules/convert\";\nexport {\n  turnNthBitOff,\n  turnNthBitOn,\n  toggleNthBit,\n  checkNthBitOn,\n} from \"./modules/bitwise\";\nexport {\n  getLuminance,\n  intToRGBHexString,\n  colorFromString,\n} from \"./modules/color\";\nexport {\n  yieldCombinationsWithoutRepetition,\n  uniqueProgressiveIncrementalCombinations,\n  yieldUniqueProgressiveIncrementalCombinations,\n  yieldAllSubsequences,\n  yieldUniqueSubsequences,\n  yieldPermutations,\n} from \"./modules/combinatorics\";\nexport { round, sum, intDiv, isEven, isOdd, proportion } from \"./modules/math\";\nexport {\n  unshiftArray,\n  cloneArray,\n  arraySliceFromValueToValue,\n  areArrayItemsAllCoercibleToNumber,\n  arrayOrArrayLike,\n  lastOfArray,\n  firstOfArray,\n  arrayFindReverse,\n  arrayMax,\n  arrayMin,\n  sortNums,\n} from \"./modules/array\";\nexport { objectMin } from \"./modules/object\";\nexport {\n  mean,\n  median,\n  minAbsDeviationFromValue,\n  minAbsDeviationFromExcludedValue,\n} from \"./modules/stats\";\nexport {\n  clampLat,\n  wrapLng,\n  normalizeLat,\n  normalizeLng,\n} from \"./modules/map-coordinates\";\nexport { xrange } from \"./modules/iterator\";\nexport { isValidDate, isValidDateTimeStr, utcDate } from \"./modules/date\";\nexport { filterInt, filterFloat } from \"./modules/constraint\";\nexport { isValidHttpUrl } from \"./modules/validate\";\n"],"names":[],"sourceRoot":""}