{"version":3,"sources":["../src/hooks/useAwaitableStateWithLayoutEffect.js"],"names":["useAwaitableState","useStateWithLayoutEffectCallback","useAwaitableStateWithLayoutEffect","initialState","useStateWithSetStateCallback"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,gCAAP,MAA6C,oCAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iCAAT,CAA2CC,YAA3C,EAAyD;AACtE,SAAOH,iBAAiB,CAAC;AACvBG,IAAAA,YAAY,EAAZA,YADuB;AAEvBC,IAAAA,4BAA4B,EAAEH;AAFP,GAAD,CAAxB;AAID","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useAwaitableState } from \"./useAwaitableStateWithEffect\";\nimport useStateWithLayoutEffectCallback from \"./useStateWithLayoutEffectCallback\";\n\n/**\n * Hook to use a state with a `setState` function which can be awaited until the state change is performed\n * and the underlying layout effect (`useLayoutEffect`) is executed.\n *\n * @param {*|Function} initialState The initial state or a lazy callback returning the initial state.\n * @return {Array} A tuple of two values, current state and callback to set state,\n *                 like the one returned by the \"useState\" hook.\n *\n *                 The callback to set state may be awaited until the state change is performed\n *                 and the underlying layout effect (`useLayoutEffect`) is executed.\n */\nexport default function useAwaitableStateWithLayoutEffect(initialState) {\n  return useAwaitableState({\n    initialState,\n    useStateWithSetStateCallback: useStateWithLayoutEffectCallback,\n  });\n}\n"],"file":"useAwaitableStateWithLayoutEffect.js"}