{"version":3,"sources":["../src/hooks/useNestedData.js"],"names":["useNestedDataCallback","useMemo","useNestedData","data","keys","obj","callback","nestedData"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,qBAAP,MAAkC,yBAAlC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAA6C;AAAA,MAAVC,GAAU,uEAAJ,EAAI;AAC1D,MAAMC,QAAQ,GAAGN,qBAAqB,CAACG,IAAD,EAAOE,GAAP,CAAtC;AACA,MAAME,UAAU,GAAGN,OAAO,CAAC;AAAA,WAAMK,QAAQ,CAACF,IAAD,CAAd;AAAA,GAAD,EAAuB,CAACE,QAAD,EAAWF,IAAX,CAAvB,CAA1B;AACA,SAAOG,UAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport useNestedDataCallback from \"./useNestedDataCallback\";\nimport { useMemo } from \"react\";\n\n/**\n * Hook to traverse nested data.\n *\n * @param {Array|Object|Map|WeakMap|ImmutableLinkedOrderedMap} data The data. Can be any of the specified types which in turn have nested data\n *                                                                  of any of the specified types.\n * @param {Array} keys An array of keys which will be passed to the underlying callback returned by the \"useNestedDataCallback\" hook used by \"useNestedData\".\n *                     See the \"useNestedDataCallback\" hook for information about the shape of the keys array.\n * @param {Object} [obj] An optional object with further parameters. See the \"useNestedDataCallback\" hook for information about the shape of this parameter.\n * @return {*} The nested data.\n */\nexport default function useNestedData(data, keys, obj = {}) {\n  const callback = useNestedDataCallback(data, obj);\n  const nestedData = useMemo(() => callback(keys), [callback, keys]);\n  return nestedData;\n}\n"],"file":"useNestedData.js"}