{"version":3,"sources":["../src/hooks/useStateWithEffectCallback.js"],"names":["useEffect","useState","useRef","useCallback","randomString","isUndefined","LQueue","usePOJOState","useShallowEqualMemo","useLazyRef","defaultOnStateUpdate","newState","defaultOnHasBailedOut","prevState","useStateWithSetStateCallback","initialState","onStateUpdate","onHasBailedOut","counterRef","randomValueCallback","current","Number","MAX_SAFE_INTEGER","state","rand","derivedState","setDerivedState","callbacksQueueRef","len","length","i","callback","dequeue","setStateWithCallback","newStateUpdate","stateUpdate","update","args","hasBailedOut","hasCallback","enqueue","useStateWithEffectCallback"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAkBA,QAAlB;AAAA,CAA7B;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,MAAcF,QAAd,SAAcA,QAAd;AAAA,SAC5BA,QAAQ,KAAKE,SADe;AAAA,CAA9B;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,QAKtC;AAAA,MAJJC,YAII,SAJJA,YAII;AAAA,MAHJf,SAGI,SAHJA,SAGI;AAAA,kCAFJgB,aAEI;AAAA,MAFJA,aAEI,oCAFYN,oBAEZ;AAAA,mCADJO,cACI;AAAA,MADJA,cACI,qCADaL,qBACb;AACJ,MAAMM,UAAU,GAAGhB,MAAM,CAAC,EAAD,CAAzB;AACA,MAAMiB,mBAAmB,GAAGhB,WAAW,CAAC,YAAM;AAC5Ce,IAAAA,UAAU,CAACE,OAAX;AACAF,IAAAA,UAAU,CAACE,OAAX,GAAqBF,UAAU,CAACE,OAAX,GAAqBC,MAAM,CAACC,gBAAjD;AACA,qBAAUlB,YAAY,EAAtB,cAA4Bc,UAAU,CAACE,OAAvC;AACD,GAJsC,EAIpC,EAJoC,CAAvC;;AAMA,sBAAwCb,YAAY,CAAC;AAAA,WAAc;AACjEgB,MAAAA,KAAK,EACH,OAAOR,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,MAAZ,mBAArC,GAA6DA,YAFE;AAGjES,MAAAA,IAAI,EAAEL,mBAAmB;AAHwC,KAAd;AAAA,GAAD,CAApD;AAAA;AAAA,MAAOM,YAAP;AAAA,MAAqBC,eAArB;;AAMA,MAAMH,KAAK,GAAGf,mBAAmB,CAACiB,YAAY,CAACF,KAAd,CAAjC;AAEA,MAAMI,iBAAiB,GAAGlB,UAAU,CAAC;AAAA,WAAM,IAAIH,MAAJ,EAAN;AAAA,GAAD,CAApC;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM4B,GAAG,GAAGD,iBAAiB,CAACP,OAAlB,CAA0BS,MAAtC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,UAAMC,QAAQ,GAAGJ,iBAAiB,CAACP,OAAlB,CAA0BY,OAA1B,EAAjB;AACAD,MAAAA,QAAQ,CAACR,KAAD,CAAR;AACD;AACF,GANQ,EAMN,CAACE,YAAY,CAACD,IAAd,EAAoBD,KAApB,EAA2BI,iBAA3B,CANM,CAAT;AAQA,MAAMM,oBAAoB,GAAG9B,WAAW,CACtC,UAAC+B,cAAD,EAAuC;AAAA,QAAtBH,QAAsB,uEAAX,KAAK,CAAM;;AACrC,QAAMI,WAAW,GAAG,SAAdA,WAAc,CAACV,YAAD,EAA2B;AAC7C,UAAIW,MAAM,GAAG,IAAb;AACA,UAAMvB,SAAS,GAAGY,YAAY,CAACF,KAA/B;AAEA,UAAIZ,QAAJ;;AACA,UAAI,OAAOuB,cAAP,KAA0B,UAA9B,EAA0C;AAAA,0CALNG,IAKM;AALNA,UAAAA,IAKM;AAAA;;AACxC1B,QAAAA,QAAQ,GAAGuB,cAAc,MAAd,UAAerB,SAAf,SAA6BwB,IAA7B,EAAX;AACD,OAFD,MAEO;AACL1B,QAAAA,QAAQ,GAAGuB,cAAX;AACD;;AAED,UAAMI,YAAY,GAAGrB,cAAc,CAAC;AAAEJ,QAAAA,SAAS,EAATA,SAAF;AAAaF,QAAAA,QAAQ,EAARA;AAAb,OAAD,CAAnC;AACA,UAAM4B,WAAW,GAAG,CAAClC,WAAW,CAAC0B,QAAD,CAAhC;;AACA,UAAIO,YAAJ,EAAkB;AAChB,YAAIC,WAAJ,EAAiB;AACf;AACA;AACAR,UAAAA,QAAQ,CAAClB,SAAD,CAAR;AACD;AACF,OAND,MAMO;AACLuB,QAAAA,MAAM,GAAG;AACPb,UAAAA,KAAK,EAAEP,aAAa,CAAC;AAAEH,YAAAA,SAAS,EAATA,SAAF;AAAaF,YAAAA,QAAQ,EAARA;AAAb,WAAD;AADb,SAAT;;AAGA,YAAI4B,WAAJ,EAAiB;AACf;AACA;AACAZ,UAAAA,iBAAiB,CAACP,OAAlB,CAA0BoB,OAA1B,CAAkCT,QAAlC;AACAK,UAAAA,MAAM,CAACZ,IAAP,GAAcL,mBAAmB,EAAjC;AACD;AACF;;AAED,aAAOiB,MAAP;AACD,KAhCD;;AAiCA,WAAOV,eAAe,CAACS,WAAD,CAAtB;AACD,GApCqC,EAqCtC,CACET,eADF,EAEEP,mBAFF,EAGEQ,iBAHF,EAIEX,aAJF,EAKEC,cALF,CArCsC,CAAxC;AA8CA,SAAO,CAACM,KAAD,EAAQU,oBAAR,CAAP;AACD,CA9EM;AAgFP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASQ,0BAAT,CAAoC1B,YAApC,EAAkD;AAC/D,SAAOD,4BAA4B,CAAC;AAAEC,IAAAA,YAAY,EAAZA,YAAF;AAAgBd,IAAAA,QAAQ,EAARA,QAAhB;AAA0BD,IAAAA,SAAS,EAATA;AAA1B,GAAD,CAAnC;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { randomString, isUndefined } from \"js-utl\";\nimport LQueue from \"linked-queue\";\nimport usePOJOState from \"./usePOJOState\";\nimport useShallowEqualMemo from \"./useShallowEqualMemo\";\nimport useLazyRef from \"./useLazyRef\";\n\n/**\n * @type {Function}\n */\nconst defaultOnStateUpdate = ({ newState }) => newState;\n\n/**\n * Return false by default, for non-POJO state, bail out only if the new state is the same as the previous state.\n *\n * @type {Function}\n */\nconst defaultOnHasBailedOut = ({ prevState, newState }) =>\n  newState === prevState;\n\n/**\n * Hook used internally for all hooks allowing to set state with a `setState` callback\n * (`useStateWithEffectCallback`, `useStateWithLayoutEffectCallback`, `usePOJOStateWithEffectCallback`, `usePOJOStateWithLayoutEffectCallback`).\n *\n * @type {Function}\n */\nexport const useStateWithSetStateCallback = ({\n  initialState,\n  useEffect,\n  onStateUpdate = defaultOnStateUpdate,\n  onHasBailedOut = defaultOnHasBailedOut,\n}) => {\n  const counterRef = useRef([]);\n  const randomValueCallback = useCallback(() => {\n    counterRef.current++;\n    counterRef.current = counterRef.current % Number.MAX_SAFE_INTEGER;\n    return `${randomString()}@${counterRef.current}`;\n  }, []);\n\n  const [derivedState, setDerivedState] = usePOJOState((...args) => ({\n    state:\n      typeof initialState === \"function\" ? initialState(...args) : initialState,\n    rand: randomValueCallback(),\n  }));\n\n  const state = useShallowEqualMemo(derivedState.state);\n\n  const callbacksQueueRef = useLazyRef(() => new LQueue());\n\n  useEffect(() => {\n    const len = callbacksQueueRef.current.length;\n    for (let i = 0; i < len; i++) {\n      const callback = callbacksQueueRef.current.dequeue();\n      callback(state);\n    }\n  }, [derivedState.rand, state, callbacksQueueRef]);\n\n  const setStateWithCallback = useCallback(\n    (newStateUpdate, callback = void 0) => {\n      const stateUpdate = (derivedState, ...args) => {\n        let update = null;\n        const prevState = derivedState.state;\n\n        let newState;\n        if (typeof newStateUpdate === \"function\") {\n          newState = newStateUpdate(prevState, ...args);\n        } else {\n          newState = newStateUpdate;\n        }\n\n        const hasBailedOut = onHasBailedOut({ prevState, newState });\n        const hasCallback = !isUndefined(callback);\n        if (hasBailedOut) {\n          if (hasCallback) {\n            // State update has bailed out, but there is a \"setState\" callback to execute.\n            // Execute the callback right away with the previous state.\n            callback(prevState);\n          }\n        } else {\n          update = {\n            state: onStateUpdate({ prevState, newState }),\n          };\n          if (hasCallback) {\n            // There is a state update and a \"setState\" callback to execute.\n            // Enqueue the callback to execute it later with the updated state in the effect when the state has been updated.\n            callbacksQueueRef.current.enqueue(callback);\n            update.rand = randomValueCallback();\n          }\n        }\n\n        return update;\n      };\n      return setDerivedState(stateUpdate);\n    },\n    [\n      setDerivedState,\n      randomValueCallback,\n      callbacksQueueRef,\n      onStateUpdate,\n      onHasBailedOut,\n    ]\n  );\n\n  return [state, setStateWithCallback];\n};\n\n/**\n * Hook to use a state with a `setState` function receiving a callback as its second parameter\n * called in an effect after the state change is performed.\n *\n * @param {*|Function} initialState The initial state or a lazy callback returning the initial state.\n * @return {Array} A tuple of two values, current state and callback to set state,\n *                 like the one returned by the \"useState\" hook.\n *\n *                 The callback to set state may receive an updater function which will receive\n *                 the previous state as argument and must return the next state.\n *\n *                 The callback to set state may also receive a callback as its second parameter,\n *                 which is called in an effect after the state change is performed.\n */\nexport default function useStateWithEffectCallback(initialState) {\n  return useStateWithSetStateCallback({ initialState, useState, useEffect });\n}\n"],"file":"useStateWithEffectCallback.js"}