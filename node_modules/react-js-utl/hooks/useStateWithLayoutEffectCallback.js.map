{"version":3,"sources":["../src/hooks/useStateWithLayoutEffectCallback.js"],"names":["useLayoutEffect","useState","useStateWithSetStateCallback","useStateWithLayoutEffectCallback","initialState","useEffect"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,4BAAT,QAA6C,8BAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gCAAT,CAA0CC,YAA1C,EAAwD;AACrE,SAAOF,4BAA4B,CAAC;AAClCE,IAAAA,YAAY,EAAZA,YADkC;AAElCH,IAAAA,QAAQ,EAARA,QAFkC;AAGlCI,IAAAA,SAAS,EAAEL;AAHuB,GAAD,CAAnC;AAKD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useLayoutEffect, useState } from \"react\";\nimport { useStateWithSetStateCallback } from \"./useStateWithEffectCallback\";\n\n/**\n * Hook to use a state with a `setState` function receiving a callback as its second parameter\n * called in a layout effect after the state change is performed.\n *\n * @param {*|Function} initialState The initial state or a lazy callback returning the initial state.\n * @return {Array} A tuple of two values, current state and callback to set state,\n *                 like the one returned by the \"useState\" hook.\n *\n *                 The callback to set state may receive an updater function which will receive\n *                 the previous state as argument and must return the next state.\n *\n *                 The callback to set state may also receive a callback as its second parameter,\n *                 which is called in a layout effect after the state change is performed.\n */\nexport default function useStateWithLayoutEffectCallback(initialState) {\n  return useStateWithSetStateCallback({\n    initialState,\n    useState,\n    useEffect: useLayoutEffect,\n  });\n}\n"],"file":"useStateWithLayoutEffectCallback.js"}