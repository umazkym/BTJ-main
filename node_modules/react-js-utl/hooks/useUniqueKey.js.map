{"version":3,"sources":["../src/hooks/useUniqueKey.js"],"names":["useMemo","uniqueId","trimRight","uniqueKeyPrefix","useUniqueKey","dep","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,QAApC;AAEA;AACA;AACA;;AACA,IAAMC,eAAe,GAAG,0BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,YAAT,GAAoC;AAAA,MAAdC,GAAc,uEAAR,KAAK,CAAG;AACjD,MAAMC,GAAG,GAAGN,OAAO,CACjB;AAAA,WACEC,QAAQ,WACHC,SAAS,WACPC,eADO,SACW,OAAOE,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,EAD3C,QAEV,GAFU,CADN,OADV;AAAA,GADiB,EAQjB,CAACA,GAAD,CARiB,CAAnB;AAUA,SAAOC,GAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useMemo } from \"react\";\nimport { uniqueId, trimRight } from \"js-utl\";\n\n/**\n * @type {string}\n */\nconst uniqueKeyPrefix = \"react-js-utl-ellViKYMFK-\";\n\n/**\n * Hook returning a unique key.\n *\n * @param {*} [dep] An optional dep which, if set and when changed, will force the regeneration of a new key.\n * @return {string} A unique key.\n */\nexport default function useUniqueKey(dep = void 0) {\n  const key = useMemo(\n    () =>\n      uniqueId(\n        `${trimRight(\n          `${uniqueKeyPrefix}${typeof dep === \"string\" ? dep : \"\"}-`,\n          \"-\"\n        )}-`\n      ),\n    [dep]\n  );\n  return key;\n}\n"],"file":"useUniqueKey.js"}