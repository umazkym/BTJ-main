{"version":3,"sources":["../src/hooks/useLoopCallback.js"],"names":["useFactory","ImmutableLinkedOrderedMap","useLoopCallback","dataStructure","loopCallback","isMap","fn","map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,yBAAP,MAAsC,8BAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,aAAzB,EAAwC;AACrD,MAAMC,YAAY,GAAGJ,UAAU,CAC7B;AAAA,WAAM,CACJ,CACEC,yBAAyB,CAACI,KAA1B,CAAgCF,aAAhC,CADF,EAEE,UAAAG,EAAE;AAAA,aAAIH,aAAa,CAACI,GAAd,CAAkBD,EAAlB,CAAJ;AAAA,KAFJ,CADI,EAKJ,UAAAA,EAAE;AAAA,aAAIH,aAAa,CAACI,GAAd,CAAkBD,EAAlB,CAAJ;AAAA,KALE,CAAN;AAAA,GAD6B,EAQ7B,CAACH,aAAD,CAR6B,CAA/B;AAUA,SAAOC,YAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport useFactory from \"./useFactory\";\nimport ImmutableLinkedOrderedMap from \"immutable-linked-ordered-map\";\n\n/**\n * Hook generating a callback to easily loop through a data structure.\n *\n * @param {Array|ImmutableLinkedOrderedMap} dataStructure A data structure.\n * @return {(fn: (value: *) => *) => Array} A function which receives a callback to loop through\n *                                          the values of the data structure returning an array\n *                                          with the mapped values.\n */\nexport default function useLoopCallback(dataStructure) {\n  const loopCallback = useFactory(\n    () => [\n      [\n        ImmutableLinkedOrderedMap.isMap(dataStructure),\n        fn => dataStructure.map(fn),\n      ],\n      fn => dataStructure.map(fn),\n    ],\n    [dataStructure]\n  );\n  return loopCallback;\n}\n"],"file":"useLoopCallback.js"}