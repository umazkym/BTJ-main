{"version":3,"sources":["../src/hooks/useElementSize.js"],"names":["useLayoutEffect","useCallback","useWindowRef","usePOJOState","useCumulativeShallowDiff","pick","initialDimensions","width","height","defaultDimensionProps","useElementSize","element","dimensionProps","dimensions","setDimensions","windowRef","forceSetDimensions","finalElement","document","querySelector","Object","prototype","hasOwnProperty","call","current","boundingClientRect","getBoundingClientRect","window","addEventListener","removeEventListener","ret","prop"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA;AACA;AACA;;AACA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,KAAK,CADY;AAExBC,EAAAA,MAAM,EAAE,KAAK;AAFW,CAA1B;AAKA;AACA;AACA;;AACA,IAAMC,qBAAqB,GAAG,CAAC,OAAD,EAAU,QAAV,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,CACbC,OADa,EAGb;AAAA,MADAC,cACA,uEADiBH,qBACjB;AACAG,EAAAA,cAAc,GAAGR,wBAAwB,CAACQ,cAAD,CAAzC;;AAEA,sBAAoCT,YAAY,CAAC;AAAA,WAC/CE,IAAI,MAAJ,4BAAQO,cAAR,GAAwBN,iBAAxB,CAD+C;AAAA,GAAD,CAAhD;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAIA,MAAMC,SAAS,GAAGb,YAAY,EAA9B;AAEA,MAAMc,kBAAkB,GAAGf,WAAW,CAAC,YAAM;AAC3C,QAAMgB,YAAY,GAChB,OAAON,OAAP,KAAmB,QAAnB,GACIO,QAAQ,CAACC,aAAT,CAAuBR,OAAvB,CADJ,GAEIS,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCZ,OAArC,EAA8C,SAA9C,IACAA,OAAO,CAACa,OADR,GAEAb,OALN;;AAMA,QAAIM,YAAJ,EAAkB;AAChB,UAAMQ,kBAAkB,GAAGR,YAAY,CAACS,qBAAb,EAA3B;;AACA,UAAMb,WAAU,GAAGR,IAAI,MAAJ,4BAAQO,cAAR,GAAwBa,kBAAxB,CAAnB;;AACAX,MAAAA,aAAa,CAACD,WAAD,CAAb;AACD,KAJD,MAIO;AACLC,MAAAA,aAAa,CAACR,iBAAD,CAAb;AACD;AACF,GAdqC,EAcnC,CAACK,OAAD,EAAUG,aAAV,EAAyBF,cAAzB,CAdmC,CAAtC;AAgBAZ,EAAAA,eAAe,CAAC,YAAM;AACpB,QAAM2B,MAAM,GACVZ,SAAS,CAACS,OAAV,IACAT,SAAS,CAACS,OAAV,CAAkBI,gBAAlB,CAAmC,QAAnC,EAA6CZ,kBAA7C,CAFF;AAGAA,IAAAA,kBAAkB;AAClB,WAAO,YAAM;AACXW,MAAAA,MAAM,IAAIA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCb,kBAArC,CAAV;AACD,KAFD;AAGD,GARc,EAQZ,CAACD,SAAD,EAAYC,kBAAZ,CARY,CAAf;AAUA,MAAMc,GAAG,GAAG,CAACjB,UAAD,EAAaG,kBAAb,CAAZ;;AACA,OAAK,IAAMe,IAAX,IAAmBlB,UAAnB,EAA+B;AAC7BiB,IAAAA,GAAG,CAACC,IAAD,CAAH,GAAYlB,UAAU,CAACkB,IAAD,CAAtB;AACD;;AACDD,EAAAA,GAAG,CAACd,kBAAJ,GAAyBA,kBAAzB;AACA,SAAOc,GAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useLayoutEffect, useCallback } from \"react\";\nimport useWindowRef from \"./useWindowRef\";\nimport usePOJOState from \"./usePOJOState\";\nimport useCumulativeShallowDiff from \"./useCumulativeShallowDiff\";\nimport { pick } from \"js-utl\";\n\n/**\n * @type {Object}\n */\nconst initialDimensions = {\n  width: void 0,\n  height: void 0,\n};\n\n/**\n * @type {string[]}\n */\nconst defaultDimensionProps = [\"width\", \"height\"];\n\n/**\n * Hook to get the dimensions of a DOM element.\n *\n * @param {string|Element|Object} element A selector of a DOM element, a DOM element or a ref object.\n * @param {string[]} dimensionProps Array of dimension props to track.\n *                                  Defaults to ['width', 'height'], i.e. track both width and height.\n * @return {Array|Object} The return value of this hook can be destructured as an array as well as an object.\n *\n *                        When destructuring it as an array, the array will have the dimensions object\n *                        having \"width\" and \"height\" properties as its first element and a \"forceSetDimensions\"\n *                        function as its second element which, if called, will force the recalculation\n *                        of the width and height of the element.\n *\n *                        When destructuring an object, the object will have the \"width\" and \"height\" of the DOM element,\n *                        as well as the \"forceSetDimensions\" function as properties.\n *\n *                        Initially, on first render, both \"width\" and \"height\" will be \"undefined\".\n */\nexport default function useElementSize(\n  element,\n  dimensionProps = defaultDimensionProps\n) {\n  dimensionProps = useCumulativeShallowDiff(dimensionProps);\n\n  const [dimensions, setDimensions] = usePOJOState(() =>\n    pick(...dimensionProps)(initialDimensions)\n  );\n\n  const windowRef = useWindowRef();\n\n  const forceSetDimensions = useCallback(() => {\n    const finalElement =\n      typeof element === \"string\"\n        ? document.querySelector(element)\n        : Object.prototype.hasOwnProperty.call(element, \"current\")\n        ? element.current\n        : element;\n    if (finalElement) {\n      const boundingClientRect = finalElement.getBoundingClientRect();\n      const dimensions = pick(...dimensionProps)(boundingClientRect);\n      setDimensions(dimensions);\n    } else {\n      setDimensions(initialDimensions);\n    }\n  }, [element, setDimensions, dimensionProps]);\n\n  useLayoutEffect(() => {\n    const window =\n      windowRef.current &&\n      windowRef.current.addEventListener(\"resize\", forceSetDimensions);\n    forceSetDimensions();\n    return () => {\n      window && window.removeEventListener(\"resize\", forceSetDimensions);\n    };\n  }, [windowRef, forceSetDimensions]);\n\n  const ret = [dimensions, forceSetDimensions];\n  for (const prop in dimensions) {\n    ret[prop] = dimensions[prop];\n  }\n  ret.forceSetDimensions = forceSetDimensions;\n  return ret;\n}\n"],"file":"useElementSize.js"}