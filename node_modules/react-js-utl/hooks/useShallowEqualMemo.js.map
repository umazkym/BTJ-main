{"version":3,"sources":["../src/hooks/useShallowEqualMemo.js"],"names":["useRef","useMemo","shallowEqual","useShallowEqualMemo","value","ref","init","ret","current"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,EAAiBC,OAAjB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,QAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,MAAMC,GAAG,GAAGL,MAAM,CAAC;AACjBM,IAAAA,IAAI,EAAE,IADW;AAEjBF,IAAAA,KAAK,EAALA;AAFiB,GAAD,CAAlB;AAIA,MAAMG,GAAG,GAAGN,OAAO,CAAC,YAAM;AACxB,QAAII,GAAG,CAACG,OAAJ,CAAYF,IAAhB,EAAsB;AACpBD,MAAAA,GAAG,CAACG,OAAJ,CAAYF,IAAZ,GAAmB,KAAnB;AACAD,MAAAA,GAAG,CAACG,OAAJ,CAAYJ,KAAZ,GAAoBA,KAApB;AACA,aAAOA,KAAP;AACD;;AACD,QAAIF,YAAY,CAACE,KAAD,EAAQC,GAAG,CAACG,OAAJ,CAAYJ,KAApB,CAAhB,EAA4C;AAC1C,aAAOC,GAAG,CAACG,OAAJ,CAAYJ,KAAnB;AACD,KAFD,MAEO;AACLC,MAAAA,GAAG,CAACG,OAAJ,CAAYJ,KAAZ,GAAoBA,KAApB;AACA,aAAOA,KAAP;AACD;AACF,GAZkB,EAYhB,CAACA,KAAD,CAZgB,CAAnB;AAaA,SAAOG,GAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useRef, useMemo } from \"react\";\nimport { shallowEqual } from \"js-utl\";\n\n/**\n * Hook to use the previous given value if the currently given value is shallowly equal to the previous one.\n *\n * @param {*} value A value.\n * @return {*} The given value the very first time or the previous value if the given\n *             value is shallowly equal to the previous given value.\n */\nexport default function useShallowEqualMemo(value) {\n  const ref = useRef({\n    init: true,\n    value,\n  });\n  const ret = useMemo(() => {\n    if (ref.current.init) {\n      ref.current.init = false;\n      ref.current.value = value;\n      return value;\n    }\n    if (shallowEqual(value, ref.current.value)) {\n      return ref.current.value;\n    } else {\n      ref.current.value = value;\n      return value;\n    }\n  }, [value]);\n  return ret;\n}\n"],"file":"useShallowEqualMemo.js"}