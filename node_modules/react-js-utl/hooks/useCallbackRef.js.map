{"version":3,"sources":["../src/hooks/useCallbackRef.js"],"names":["useRef","useEffect","useCallbackRef","callback","callbackRef","current"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC/C,MAAMC,WAAW,GAAGJ,MAAM,CAACG,QAAD,CAA1B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,WAAW,CAACC,OAAZ,GAAsBF,QAAtB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOC,WAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useRef, useEffect } from \"react\";\n\n/**\n * Returns a ref for a callback.\n *\n * Useful e.g. when using callbacks within a callback of \"useEffect\" hook\n * which should not interfere with the deps array of the hook and yet having\n * a reference to the up-to-date callback within the \"useEffect\" hook's callback\n * through the \"current\" property.\n *\n * @see https://github.com/donavon/use-event-listener/issues/27\n *\n * @param {Function} callback A callback.\n * @return {Object} A ref for the given callback.\n *                  The returned ref could and should be passed as a dep to the dependencies array\n *                  of a hook using it because React guarantees that the returned object will persist\n *                  for the full lifetime of the component.\n * @return {Object.current} The up-to-date callback.\n */\nexport default function useCallbackRef(callback) {\n  const callbackRef = useRef(callback);\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  return callbackRef;\n}\n"],"file":"useCallbackRef.js"}