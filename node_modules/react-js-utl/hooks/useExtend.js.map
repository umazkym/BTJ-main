{"version":3,"sources":["../src/hooks/useExtend.js"],"names":["useMemo","extend","isPlainObject","useShallowEqualMemo","useExtend","destination","deps","extendOptions","obj","extendFn","filter","finalObj"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,QAAtC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,WAAnB,EAAgCC,IAAhC,EAA0D;AAAA,MAApBC,aAAoB,uEAAJ,EAAI;AACvE,MAAMC,GAAG,GAAGR,OAAO,CACjB,OAAOK,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkD;AAAA,WAAMA,WAAN;AAAA,GADjC,EAEjBC,IAFiB,CAAnB;AAKAC,EAAAA,aAAa,GAAGJ,mBAAmB,CAACI,aAAD,CAAnC;;AACA,MAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA,WACfR,MAAM,MAAN,UAAOO,GAAP,4BAAeF,IAAI,CAACI,MAAL,CAAYR,aAAZ,CAAf,IAA2C,CAACK,aAAD,CAA3C,GADe;AAAA,GAAjB;;AAEA,MAAMI,QAAQ,GAAGX,OAAO,CAACS,QAAD,+BAAeH,IAAf,IAAqBC,aAArB,GAAxB;AACA,SAAOI,QAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useMemo } from \"react\";\nimport { extend, isPlainObject } from \"js-utl\";\nimport useShallowEqualMemo from \"./useShallowEqualMemo\";\n\n/**\n * Hook to extend an object with an array of source objects.\n *\n * @param {Object|Function} destination Destination object or a function returning a destination object.\n * @param {Array} deps An array which defines the dependecies of the hook as well the source objects\n *                     to use to extend the destination object.\n *                     If the nth element of this array is an object, it will always be used as a source object\n *                     when extending the destination object \"destination\", as well as used as a dep.\n *                     If the nth element of this array is not an object, it will only be used as a dep.\n * @param {Object} [extendOptions] The options for the extension.\n *                                 See the \"extend\" function of the js-utl package (https://github.com/tonix-tuft/js-utl)\n *                                 for the available options.\n * @return {Object} The extended destination object.\n */\nexport default function useExtend(destination, deps, extendOptions = {}) {\n  const obj = useMemo(\n    typeof destination === \"function\" ? destination : () => destination,\n    deps\n  );\n\n  extendOptions = useShallowEqualMemo(extendOptions);\n  const extendFn = () =>\n    extend(obj, ...deps.filter(isPlainObject), [extendOptions]);\n  const finalObj = useMemo(extendFn, [...deps, extendOptions]);\n  return finalObj;\n}\n"],"file":"useExtend.js"}