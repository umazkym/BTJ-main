{"version":3,"sources":["../src/hooks/useDefaultValue.js"],"names":["useState","defaultVal","useDefaultValue","defaultValue","valueIfDefaultValueIsUndefined","value","setValue"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,eAAT,GAGb;AAAA,MAFAC,YAEA,uEAFe,KAAK,CAEpB;AAAA,MADAC,8BACA,uEADiC,KAAK,CACtC;;AACA,kBAA0BJ,QAAQ,CAChCC,UAAU,CAACE,YAAD,EAAeC,8BAAf,CADsB,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAGA,SAAO,CAACD,KAAD,EAAQC,QAAR,CAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useState } from \"react\";\nimport { defaultVal } from \"../utils\";\n\n/**\n * Hook for default values.\n *\n * @param {*} [defaultValue] A default value.\n * @param {*} [valueIfDefaultValueIsUndefined] A value to use if the given default value is undefined.\n * @return {Array} A tuple with initially the default value at index 0, as well as a callback to set\n *                 the value at index 1.\n */\nexport default function useDefaultValue(\n  defaultValue = void 0,\n  valueIfDefaultValueIsUndefined = void 0\n) {\n  const [value, setValue] = useState(\n    defaultVal(defaultValue, valueIfDefaultValueIsUndefined)\n  );\n  return [value, setValue];\n}\n"],"file":"useDefaultValue.js"}