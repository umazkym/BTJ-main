{"version":3,"sources":["../src/hooks/useClientRect.js"],"names":["useState","useCallback","useClientRect","rect","setRect","ref","node","getBoundingClientRect"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,GAAyB;AACtC,kBAAwBF,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,GAAG,GAAGJ,WAAW,CAAC,UAAAK,IAAI,EAAI;AAC9B,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBF,MAAAA,OAAO,CAACE,IAAI,CAACC,qBAAL,EAAD,CAAP;AACD;AACF,GAJsB,EAIpB,EAJoB,CAAvB;AAKA,SAAO,CAACF,GAAD,EAAMF,IAAN,CAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useState, useCallback } from \"react\";\n\n/**\n * Hook returning a ref callback to measure the dimensions of a DOM element and the current dimensions of the measured element.\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-can-i-measure-a-dom-node\n *\n * @return {Array} An array containing the ref callback at index 0 and the dimensions (an object with a \"width\" and \"height\"\n *                 property) of the last measurement of the element at index 1.\n */\nexport default function useClientRect() {\n  const [rect, setRect] = useState(null);\n  const ref = useCallback(node => {\n    if (node !== null) {\n      setRect(node.getBoundingClientRect());\n    }\n  }, []);\n  return [ref, rect];\n}\n"],"file":"useClientRect.js"}