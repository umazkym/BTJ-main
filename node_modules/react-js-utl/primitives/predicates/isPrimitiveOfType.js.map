{"version":3,"sources":["../../src/primitives/predicates/isPrimitiveOfType.js"],"names":["primitiveProp","isPrimitiveOfType","possiblePrimitive","primitiveType","primitiveKey"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,aAAT,QAA8B,cAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,CAA2BC,iBAA3B,EAA8CC,aAA9C,EAA6D;AAC1E,MAAMC,YAAY,GAAGD,aAAa,CAACH,aAAD,CAAlC;AACA,SAAO,CAAC,EACNE,iBAAiB,IACjBA,iBAAiB,CAACF,aAAD,CADjB,IAEAE,iBAAiB,CAACF,aAAD,CAAjB,CAAiCI,YAAjC,CAHM,CAAR;AAKD","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { primitiveProp } from \"../primitive\";\n\n/**\n * Tests if the given value is a primitive of the given primitive type.\n *\n * @param {*} possiblePrimitive The given value.\n * @param {Function} primitiveType The given primitive type.\n * @return {boolean} True if the given value is a primitive of the given primitive type.\n */\nexport default function isPrimitiveOfType(possiblePrimitive, primitiveType) {\n  const primitiveKey = primitiveType[primitiveProp];\n  return !!(\n    possiblePrimitive &&\n    possiblePrimitive[primitiveProp] &&\n    possiblePrimitive[primitiveProp][primitiveKey]\n  );\n}\n"],"file":"isPrimitiveOfType.js"}