{"version":3,"sources":["../src/utils/utils.js"],"names":["trim","isArray","isUndefined","isEmpty","compose","classNames","componentClassName","reduce","className","mergeClassNameProp","props","remaining","reactComponentName","reactComponentInstance","constructor","displayName","name","getDisplayName","Component","type","childrenMap","children","fn","reactChildrenMap","map","reactChildrenFlatMap","depth","flat","childrenKeyChildTupleFn","current","key","child","reactChildrenKeyChildTupleMap","reactChildrenKeyChildTupleFlatMap","refCallback","ref","prop","value","isWithReactComponentName","toUpperCase","isFnWithComponentName","isReactHOC","Object","prototype","hasOwnProperty","call","Symbol","indexOf","$$typeof","isReactComponent","withAncestorHasComponentName","ancestorHasComponentName","Parent","withAncestorIsBuiltinReactHOC","ancestorIsBuiltinReactHOC","withComposedAncestorTests","isFunctionalComponent","testComponent","isClassComponent","defaultVal","defaultValue","valueIfDefaultValueIsUndefined","isControlledValue"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2022 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { trim, isArray, isUndefined, isEmpty, compose } from \"js-utl\";\n\n/**\n * React JS utility functions.\n */\n\n/**\n * Returns a class name string.\n *\n * @param {*} componentClassName Default class name of a component (a string) or a falsy value which evaluates to an empty string.\n * @param {...*} classNames Additional, optional list of strings of class names or falsy values to ignore.\n * @return {string} The class name string.\n */\nexport function classNames(componentClassName, ...classNames) {\n  return classNames.reduce(\n    (componentClassName, className) =>\n      trim(`${componentClassName || \"\"} ${className || \"\"}`),\n    componentClassName\n  );\n}\n\n/**\n * Merges a component's class name.\n *\n * @deprecated since version 1.17.0 (will be removed in a next major version, use \"classNames()\" instead)\n *\n * @param {string} componentClassName Component's class name.\n * @param {Object} props Properties.\n * @return {Object} The merged properties.\n */\nexport function mergeClassNameProp(componentClassName, props) {\n  const { className, ...remaining } = props;\n  return {\n    className: classNames(componentClassName, className),\n    ...remaining,\n  };\n}\n\n/**\n * Returns the name of a React component.\n *\n * @param {Object} reactComponentInstance An instance of a React component.\n * @return {string|undefined} The React component's name, or \"undefined\" if the name is unknown.\n */\nexport function reactComponentName(reactComponentInstance) {\n  return (\n    reactComponentInstance.constructor.displayName ||\n    reactComponentInstance.constructor.name ||\n    void 0\n  );\n}\n\n/**\n * Gets a React component's display name.\n *\n * @param {Function} Component A component.\n * @return {string} Its name or \"Component\" if unknown.\n */\nexport function getDisplayName(Component) {\n  return (\n    Component.displayName ||\n    Component.name ||\n    (typeof Component === \"object\" && getDisplayName(Component.type)) ||\n    \"Component\"\n  );\n}\n\n/**\n * Returns an array of mappable children if the given children\n * parameter is not falsy.\n *\n * @private\n *\n * @param {*} children The given children.\n * @param {(children: Array) => Array} fn A callback to map children returning the mapped children\n *                                        if the given \"children\" is not falsy.\n */\nconst childrenMap = (children, fn) => {\n  if (!isArray(children)) {\n    if (!children) {\n      return children;\n    }\n    children = [children];\n  }\n  return fn(children);\n};\n\n/**\n * Map React children like \"React.Children.map()\", but without changing children keys.\n *\n * @param {*} children React children (usually the value of \"props.children\").\n * @param {Function} fn Function to call which will receive each child and its corresponding index as argument.\n * @return {Array} An array of mapped children.\n */\nexport const reactChildrenMap = (children, fn) =>\n  childrenMap(children, children => children.map(fn));\n\n/**\n * Map React children like \"reactChildrenMap\", but flattening the given children before mapping.\n *\n * @param {*} children React children (usually the value of \"props.children\").\n * @param {Function} fn Function to call which will receive each child and its corresponding index as argument.\n * @param {number} [depth] The depth of the flattening. Defaults to 1.\n * @return {Array} An array of mapped children.\n */\nexport const reactChildrenFlatMap = (children, fn, depth = 1) =>\n  childrenMap(children, children => children.flat(depth).map(fn));\n\n/**\n * Returns a key/child tuple function.\n *\n * @private\n *\n * @param {Function} fn Function to call which will receive two parameters:\n *\n *                          - key: The current key;\n *                          - child: The current child;\n *\n * @return {(current: *) => *} A function returning the mapped child.\n */\nconst childrenKeyChildTupleFn = fn => current => {\n  let key, child;\n  if (isArray(current)) {\n    [key, child] = current;\n  } else {\n    child = current;\n    key = child.key;\n  }\n  return fn(key, child);\n};\n\n/**\n * Map React children like \"React.Children.map()\", but without changing children keys\n * as well as accepting a \"[key, child]\" tuple as a child and passing the current key and child\n * parameter to the provided callback function.\n *\n * @param {*} children React children (usually the value of \"props.children\").\n * @param {Function} fn Function to call which will receive two parameters:\n *\n *                          - key: The current key;\n *                          - child: The current child;\n *\n * @return {Array} An array of mapped children.\n */\nexport const reactChildrenKeyChildTupleMap = (children, fn) => {\n  return reactChildrenMap(children, childrenKeyChildTupleFn(fn));\n};\n\n/**\n * Map React children like \"reactChildrenKeyChildTupleMap\", but flattening the given children before mapping.\n *\n * @param {*} children React children (usually the value of \"props.children\").\n * @param {Function} fn Function to call which will receive two parameters:\n *\n *                          - key: The current key;\n *                          - child: The current child;\n *\n * @return {Array} An array of mapped children.\n */\nexport const reactChildrenKeyChildTupleFlatMap = (children, fn) => {\n  return reactChildrenFlatMap(children, childrenKeyChildTupleFn(fn));\n};\n\n/**\n * Generates a new ref callback.\n *\n * @param {Object} ref A ref object.\n * @param {*} ref.current The mutable value of the ref.\n * @param {string} prop A property to pick from the value passed to the ref callback.\n * @return {Function} The new ref callback.\n */\nexport const refCallback = (ref, prop = void 0) => value =>\n  (ref.current = prop ? (value ? value[prop] : null) : value);\n\n/**\n * Tests if the given value has a React component name property\n * (either a \"name\" or a \"displayName\" string property with the first character\n * being a capital letter).\n *\n * @param {*} fn A value.\n * @return {boolean} True if the given value has a valid React component name,\n *                   false otherwise.\n */\nexport const isWithReactComponentName = fn =>\n  !!(\n    fn &&\n    ((!isEmpty(fn.name) && fn.name[0] === fn.name[0].toUpperCase()) ||\n      (!isEmpty(fn.displayName) &&\n        fn.displayName[0] === fn.displayName[0].toUpperCase()))\n  );\n\n/**\n * Tests if the given value is a function with a valid React component name.\n *\n * @param {*} fn A value.\n * @return {boolean} True if the given value is a function with a valid React component name,\n *                   false otherwise.\n */\nexport const isFnWithComponentName = fn =>\n  typeof fn === \"function\" && isWithReactComponentName(fn);\n\n/**\n * Tests if a value is a React builtin HOC (e.g. a component returned by \"React.memo()\").\n *\n * @param {*} Component The value.\n * @return {boolean} True if the given value is a React HOC.\n */\nexport const isReactHOC = Component =>\n  typeof Component === \"object\" &&\n  ((Object.prototype.hasOwnProperty.call(Component, \"$$typeof\") &&\n    [typeof Symbol(\"\"), typeof \"\"].indexOf(typeof Component.$$typeof) > -1) ||\n    isWithReactComponentName(Component) ||\n    isReactComponent(Component.type));\n\n/**\n * Private helper for composing behaviour when testing possible React components.\n *\n * @private\n */\nconst withAncestorHasComponentName = () => {\n  let ancestorHasComponentName = false;\n  return fn => ({ Component, Parent = void 0, ...props }) => {\n    ancestorHasComponentName =\n      ancestorHasComponentName || isWithReactComponentName(Parent);\n    return fn({ ...props, Component, ancestorHasComponentName });\n  };\n};\n\n/**\n * Private helper for composing behaviour when testing possible React components.\n *\n * @private\n */\nconst withAncestorIsBuiltinReactHOC = () => {\n  let ancestorIsBuiltinReactHOC = false;\n  return fn => ({ Component, Parent = void 0, ...props }) => {\n    ancestorIsBuiltinReactHOC = ancestorIsBuiltinReactHOC || isReactHOC(Parent);\n    return fn({ ...props, Component, ancestorIsBuiltinReactHOC });\n  };\n};\n\n/**\n * Composed behaviours when testing ancestors.\n *\n * @private\n *\n * @param {(props: Object) => boolean} fn\n */\nconst withComposedAncestorTests = fn =>\n  compose(withAncestorIsBuiltinReactHOC(), withAncestorHasComponentName())(fn);\n\n/**\n * Tests if the given value is a valid React functional component.\n *\n * @param {*} Component The value.\n * @return {boolean} True if the value is a React functional component, false otherwise.\n */\nexport function isFunctionalComponent(Component) {\n  const testComponent = withComposedAncestorTests(\n    ({ Component, ancestorHasComponentName, ancestorIsBuiltinReactHOC }) => {\n      if (\n        !(Component.prototype && Component.prototype.isReactComponent) &&\n        (isFnWithComponentName(Component) ||\n          (typeof Component === \"function\" &&\n            (ancestorHasComponentName || ancestorIsBuiltinReactHOC)))\n      ) {\n        return true;\n      } else if (isReactHOC(Component)) {\n        return testComponent({ Component: Component.type, Parent: Component });\n      }\n      return false;\n    }\n  );\n  return testComponent({ Component });\n}\n\n/**\n * Tests if the given value is a valid React class component.\n *\n * @param {*} Component The value.\n * @return {boolean} True if the value is a React class component, false otherwise.\n */\nexport function isClassComponent(Component) {\n  const testComponent = withComposedAncestorTests(\n    ({ Component, ancestorHasComponentName, ancestorIsBuiltinReactHOC }) =>\n      !!(\n        Component.prototype &&\n        Component.prototype.isReactComponent &&\n        (ancestorHasComponentName ||\n          ancestorIsBuiltinReactHOC ||\n          isFnWithComponentName(Component))\n      ) ||\n      (isReactHOC(Component) && isClassComponent(Component.type))\n  );\n  return testComponent({ Component });\n}\n\n/**\n * Tests if the given value is a valid React component.\n *\n * @param {*} value A value.\n * @return {boolean} True if the given value is a valid React component, false otherwise.\n */\nexport function isReactComponent(Component) {\n  return (\n    isFunctionalComponent(Component) ||\n    isClassComponent(Component) ||\n    isReactHOC(Component)\n  );\n}\n\n/**\n * Returns a default value.\n *\n * @param {*} [defaultValue] A default value.\n * @param {*} [valueIfDefaultValueIsUndefined] A value to return if the given default value is \"undefined\".\n * @return {*} A default value.\n */\nexport function defaultVal(\n  defaultValue = void 0,\n  valueIfDefaultValueIsUndefined = void 0\n) {\n  if (defaultValue) {\n    return defaultValue;\n  }\n  if (isUndefined(defaultValue)) {\n    return valueIfDefaultValueIsUndefined;\n  } else {\n    return !defaultValue ? void 0 : defaultValue;\n  }\n}\n\n/**\n * Checks whether the given value is a controlled value or not.\n * If the value is a controlled value, it can be used in a controlled component.abs\n *\n * @see https://stackoverflow.com/questions/37427508/react-changing-an-uncontrolled-input#answer-37427596\n * @see https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ReactDOMInput.js#L40\n *\n * @param {*} value The given value.\n * @return {boolean} True if the given value is a controlled value, i.e. it can be used in a controlled component,\n *                   false otherwise.\n */\nexport function isControlledValue(value) {\n  return value != null;\n}\n"],"file":"utils.js"}