{"version":3,"sources":["../../src/index.js"],"names":["privateScope","WeakMap","DefPromise","Promise","constructor","executor","resolve","reject","isSettled","hasResolved","hasRejected","resolveFunc","rejectFunc","args","priv","set","get"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,IAAIC,OAAJ,EAArB;AAEA,eAAe,MAAMC,UAAN,SAAyBC,OAAzB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,QAAQ,GAAG,MAAM,CAAE,CAApB,EAAsB;AAC/B,QAAIC,OAAJ,EAAaC,MAAb;AACA,QAAIC,SAAS,GAAG,KAAhB;AAAA,QACEC,WAAW,GAAG,KADhB;AAAA,QAEEC,WAAW,GAAG,KAFhB;AAGA,UAAM,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACjCN,MAAAA,OAAO,GAAG,CAAC,GAAGO,IAAJ,KAAa;AACrB,YAAI,CAACL,SAAL,EAAgB;AACdA,UAAAA,SAAS,GAAG,IAAZ;AACAC,UAAAA,WAAW,GAAG,IAAd;AACD;;AACDE,QAAAA,WAAW,CAAC,GAAGE,IAAJ,CAAX;AACD,OAND;;AAOAN,MAAAA,MAAM,GAAG,CAAC,GAAGM,IAAJ,KAAa;AACpB,YAAI,CAACL,SAAL,EAAgB;AACdA,UAAAA,SAAS,GAAG,IAAZ;AACAE,UAAAA,WAAW,GAAG,IAAd;AACD;;AACDE,QAAAA,UAAU,CAAC,GAAGC,IAAJ,CAAV;AACD,OAND;;AAOAR,MAAAA,QAAQ,CAACC,OAAD,EAAUC,MAAV,CAAR;AACD,KAhBD;AAiBA,UAAMO,IAAI,GAAG;AACXR,MAAAA,OADW;AAEXC,MAAAA,MAFW;AAGXC,MAAAA,SAAS,EAAE,MAAMA,SAHN;AAIXC,MAAAA,WAAW,EAAE,MAAMA,WAJR;AAKXC,MAAAA,WAAW,EAAE,MAAMA;AALR,KAAb;AAOAV,IAAAA,YAAY,CAACe,GAAb,CAAiB,IAAjB,EAAuBD,IAAvB;AACD;;AAEDR,EAAAA,OAAO,CAAC,GAAGO,IAAJ,EAAU;AACf,WAAOb,YAAY,CAACgB,GAAb,CAAiB,IAAjB,EAAuBV,OAAvB,CAA+B,GAAGO,IAAlC,CAAP;AACD;;AAEDN,EAAAA,MAAM,CAAC,GAAGM,IAAJ,EAAU;AACd,WAAOb,YAAY,CAACgB,GAAb,CAAiB,IAAjB,EAAuBT,MAAvB,CAA8B,GAAGM,IAAjC,CAAP;AACD;;AAEDL,EAAAA,SAAS,GAAG;AACV,WAAOR,YAAY,CAACgB,GAAb,CAAiB,IAAjB,EAAuBR,SAAvB,EAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAOT,YAAY,CAACgB,GAAb,CAAiB,IAAjB,EAAuBP,WAAvB,EAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAOV,YAAY,CAACgB,GAAb,CAAiB,IAAjB,EAAuBN,WAAvB,EAAP;AACD;;AAnD6C","sourcesContent":["/*\n * Copyright (c) 2021 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * @type {WeakMap}\n */\nconst privateScope = new WeakMap();\n\nexport default class DefPromise extends Promise {\n  constructor(executor = () => {}) {\n    let resolve, reject;\n    let isSettled = false,\n      hasResolved = false,\n      hasRejected = false;\n    super((resolveFunc, rejectFunc) => {\n      resolve = (...args) => {\n        if (!isSettled) {\n          isSettled = true;\n          hasResolved = true;\n        }\n        resolveFunc(...args);\n      };\n      reject = (...args) => {\n        if (!isSettled) {\n          isSettled = true;\n          hasRejected = true;\n        }\n        rejectFunc(...args);\n      };\n      executor(resolve, reject);\n    });\n    const priv = {\n      resolve,\n      reject,\n      isSettled: () => isSettled,\n      hasResolved: () => hasResolved,\n      hasRejected: () => hasRejected,\n    };\n    privateScope.set(this, priv);\n  }\n\n  resolve(...args) {\n    return privateScope.get(this).resolve(...args);\n  }\n\n  reject(...args) {\n    return privateScope.get(this).reject(...args);\n  }\n\n  isSettled() {\n    return privateScope.get(this).isSettled();\n  }\n\n  hasResolved() {\n    return privateScope.get(this).hasResolved();\n  }\n\n  hasRejected() {\n    return privateScope.get(this).hasRejected();\n  }\n}\n"],"file":"index.js"}