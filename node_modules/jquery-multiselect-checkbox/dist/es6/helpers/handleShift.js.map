{"version":3,"sources":["../../../src/helpers/handleShift.js"],"names":["nextUntil","prevUntil","handleShift","$","$el","instance","self","prevUntilNextUntil","prev","options","next","$itemsCheckboxes","usePrevUntilNextUntilForSync","checkboxes","sync","filter","checkedClassName","length","selected","hasClass","itemsSelected","selectedMap","values","$prevSelected","is","checkboxResolve","itemResolve","prevIndex","index","itemIndex","toCall","goingForwardFrom$el","each","$this","toggle","fromIndex","indexOfNext","$next","eq","indexOfPrev","$prev","selectedRanges","unshift","from","to","i","range","$toDeselect","slice"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2021 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport nextUntil from \"./nextUntil\";\nimport prevUntil from \"./prevUntil\";\n\nexport default function handleShift($, $el, instance) {\n  const self = instance;\n  const prevUntilNextUntil = {\n    prev: self.options.prev,\n    next: self.options.next\n  };\n  let $itemsCheckboxes;\n\n  if (!self.options.usePrevUntilNextUntilForSync) {\n    // checkbox\n    $itemsCheckboxes = $(self.options.checkboxes);\n  } else {\n    // synced item\n    $itemsCheckboxes = $(self.options.sync);\n    prevUntilNextUntil.prev = prevUntil;\n    prevUntilNextUntil.next = nextUntil;\n  }\n\n  if (\n    $itemsCheckboxes.filter(`.${self.options.checkedClassName}`).length <= 1\n  ) {\n    return;\n  }\n\n  const selected = $el.hasClass(self.options.checkedClassName);\n  const itemsSelected = self.selectedMap.values();\n  if (selected && self.selectedMap.length > 1) {\n    // `$prevSelected` is always a checkbox here if `self.options.usePrevUntilNextUntilForSync` is false.\n    const $prevSelected = !self.options.usePrevUntilNextUntilForSync\n      ? ($el.is(self.options.sync)\n          ? ($el = self.options.checkboxResolve($el, self)) && void 0\n          : void 0) || itemsSelected[itemsSelected.length - 2].$el\n      : self.options.itemResolve(\n          itemsSelected[itemsSelected.length - 2].$el,\n          self\n        );\n\n    const prevIndex = $itemsCheckboxes.index($prevSelected),\n      itemIndex = $itemsCheckboxes.index($el);\n\n    let toCall;\n    let goingForwardFrom$el;\n    if (prevIndex > itemIndex) {\n      goingForwardFrom$el = true;\n      toCall = \"next\";\n    } else {\n      goingForwardFrom$el = false;\n      toCall = \"prev\";\n    }\n\n    prevUntilNextUntil[toCall]($el, $prevSelected, $itemsCheckboxes, self).each(\n      function() {\n        const $this = $(this);\n        self.toggle($, $this, true);\n        if ($this.is(self.options.checkboxes)) {\n          self.toggle($, self.options.itemResolve($this, self), true);\n        } else {\n          self.toggle($, self.options.checkboxResolve($this, self), true);\n        }\n      }\n    );\n\n    let fromIndex;\n    if (goingForwardFrom$el) {\n      let indexOfNext = $itemsCheckboxes.index($el) + 1;\n      let $next = $itemsCheckboxes.eq(indexOfNext);\n      while ($next.length && indexOfNext <= $itemsCheckboxes.length - 1) {\n        if ($next.hasClass(self.options.checkedClassName)) {\n          indexOfNext = $itemsCheckboxes.index($next) + 1;\n          $next = $itemsCheckboxes.eq(indexOfNext);\n        } else {\n          break;\n        }\n      }\n      fromIndex = indexOfNext - 1;\n    } else {\n      let indexOfPrev = $itemsCheckboxes.index($el) - 1;\n      let $prev = $itemsCheckboxes.eq(indexOfPrev);\n      while ($prev.length && indexOfPrev >= 0) {\n        if ($prev.hasClass(self.options.checkedClassName)) {\n          indexOfPrev = $itemsCheckboxes.index($prev) - 1;\n          $prev = $itemsCheckboxes.eq(indexOfPrev);\n        } else {\n          break;\n        }\n      }\n      fromIndex = indexOfPrev + 1;\n    }\n    self.selectedRanges.unshift({ from: fromIndex, to: itemIndex });\n  } else {\n    $el.is(self.options.sync)\n      ? ($el = self.options.checkboxResolve($el, self)) && void 0\n      : void 0;\n    if (\n      self.options.usePrevUntilNextUntilForSync &&\n      $el.is(self.options.checkboxes)\n    ) {\n      $el = self.options.itemResolve($el, self);\n    }\n    const index = $itemsCheckboxes.index($el);\n    for (let i = 0; i < self.selectedRanges.length; i++) {\n      const range = self.selectedRanges[i];\n      const from = range.from;\n      const to = range.to;\n      if ((index >= from && index <= to) || (index >= to && index <= from)) {\n        // `index` is within range, uncheck all from `index` to `to`.\n        let $toDeselect;\n        if (to > index) {\n          $toDeselect = $itemsCheckboxes.slice(index + 1, to + 1);\n        } else {\n          $toDeselect = $itemsCheckboxes.slice(to, index);\n        }\n        $toDeselect.each(function() {\n          const $this = $(this);\n          self.toggle($, $this, false);\n          if ($this.is(self.options.checkboxes)) {\n            self.toggle($, self.options.itemResolve($this, self), false);\n          } else {\n            self.toggle($, self.options.checkboxResolve($this, self), false);\n          }\n        });\n        break;\n      }\n    }\n  }\n}\n"],"file":"handleShift.js"}