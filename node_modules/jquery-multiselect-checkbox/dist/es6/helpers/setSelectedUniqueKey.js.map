{"version":3,"sources":["../../../src/helpers/setSelectedUniqueKey.js"],"names":["extendMap","itemIdCounter","setSelectedUniqueKey","$el","instance","self","checkedKey","data","options","checkedKeyDataAttributeName","selectedMap","get","unset","key","keyDataAttributeName","value","val","newMap","set","i","index","checkboxes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,aAAtB;AAEA;AACA;AACA;;AACA,IAAIC,aAAa,GAAG,CAApB;AAEA,eAAe,SAASC,oBAAT,CAA8BC,GAA9B,EAAmCC,QAAnC,EAA6C;AAC1D,QAAMC,IAAI,GAAGD,QAAb;AACA,QAAME,UAAU,GAAGH,GAAG,CAACI,IAAJ,CAASF,IAAI,CAACG,OAAL,CAAaC,2BAAtB,CAAnB;;AACA,MAAIJ,IAAI,CAACK,WAAL,CAAiBC,GAAjB,CAAqBL,UAArB,CAAJ,EAAsC;AACpCD,IAAAA,IAAI,CAACK,WAAL,GAAmBV,SAAS,CAACK,IAAI,CAACK,WAAL,CAAiBE,KAAjB,CAAuBN,UAAvB,CAAD,CAA5B;AACD;;AACD,QAAMO,GAAG,GAAGV,GAAG,CAACI,IAAJ,CAASF,IAAI,CAACG,OAAL,CAAaM,oBAAtB,KAA+C,EAAEb,aAA7D;AACAE,EAAAA,GAAG,CAACI,IAAJ,CAASF,IAAI,CAACG,OAAL,CAAaC,2BAAtB,EAAmDI,GAAnD;AACA,QAAME,KAAK,GAAGZ,GAAG,CAACa,GAAJ,EAAd;AACA,QAAMC,MAAM,GAAGZ,IAAI,CAACK,WAAL,CAAiBQ,GAAjB,CAAqB;AAClC,KAACL,GAAD,GAAO;AACLV,MAAAA,GADK;AAELU,MAAAA,GAFK;AAGLE,MAAAA,KAAK,EAAEA,KAAK,IAAI,KAAK,CAHhB;AAILI,MAAAA,CAAC,EAAEhB,GAAG,CAACiB,KAAJ,CAAUf,IAAI,CAACG,OAAL,CAAaa,UAAvB;AAJE;AAD2B,GAArB,CAAf;AAQAhB,EAAAA,IAAI,CAACK,WAAL,GAAmBV,SAAS,CAACiB,MAAD,CAA5B;AACD","sourcesContent":["/*\n * Copyright (c) 2021 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport extendMap from \"./extendMap\";\n\n/**\n * @type {number}\n */\nlet itemIdCounter = 0;\n\nexport default function setSelectedUniqueKey($el, instance) {\n  const self = instance;\n  const checkedKey = $el.data(self.options.checkedKeyDataAttributeName);\n  if (self.selectedMap.get(checkedKey)) {\n    self.selectedMap = extendMap(self.selectedMap.unset(checkedKey));\n  }\n  const key = $el.data(self.options.keyDataAttributeName) || ++itemIdCounter;\n  $el.data(self.options.checkedKeyDataAttributeName, key);\n  const value = $el.val();\n  const newMap = self.selectedMap.set({\n    [key]: {\n      $el,\n      key,\n      value: value || void 0,\n      i: $el.index(self.options.checkboxes)\n    }\n  });\n  self.selectedMap = extendMap(newMap);\n}\n"],"file":"setSelectedUniqueKey.js"}