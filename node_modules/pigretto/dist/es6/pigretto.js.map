{"version":3,"sources":["../../src/pigretto.js"],"names":["handlerFactory","pigretto","target","proxyRules","handler","proxy","Proxy"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAOA,cAAP,MAA2B,0BAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,UAA1B,EAAsC;AACnD,QAAMC,OAAO,GAAGJ,cAAc,CAACG,UAAD,CAA9B;AACA,QAAME,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,MAAV,EAAkBE,OAAlB,CAAd;AACA,SAAOC,KAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2020 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport handlerFactory from \"./factory/handlerFactory\";\n\n/**\n * Generates a new pigretto proxy object.\n *\n * A pigretto proxy object lets proxying and advising the following operations:\n *\n *    - Calling a method (`call()` method);\n *    - Getting a property (`get()` method);\n *    - Setting a property (`set()` method);\n *    - Calling a function (`[applyRule]` symbol property with `apply()` method);\n *    - Constructing a new object via the \"new\" keyword (`[constructRule]` symbol property with `construct()`).\n *\n * @param {*} target A function, a constructor function or an object to proxy.\n * @param {Object|Array} proxyRules The proxy rules.\n *                                  This parameter can be:\n *\n *                                      - An object containing proxy rules as keys and pointcuts with advices as values;\n *\n *                                      - An array of rules, each rule either being an object with proxy rules as keys\n *                                        and advices as values or a tuple of two elements: an array of rules of the same\n *                                        type or a single rule as the first element and a pointcut with advices for those rules or\n *                                        that rule as the second element;\n *\n * @return {Proxy} A new proxy object for the given target.\n */\nexport default function pigretto(target, proxyRules) {\n  const handler = handlerFactory(proxyRules);\n  const proxy = new Proxy(target, handler);\n  return proxy;\n}\n"],"file":"pigretto.js"}