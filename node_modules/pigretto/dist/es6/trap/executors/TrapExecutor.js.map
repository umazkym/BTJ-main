{"version":3,"sources":["../../../../src/trap/executors/TrapExecutor.js"],"names":["isArray","noReturnValue","Symbol","TrapExecutor","execute","trapArgs","before","around","after","newExecutionContext","setUpExecutionContext","startExecutionContext","beforePhase","aroundPhase","returnValue","proceedPhase","afterPhase","endExecutionContext","cleanUpExecutionContext","context","proceeds","hasAtLeastOneAroundAdvice","hasAtLeastOneBeforeAdvice","execContextStack","push","execContextID","length","pop","unsupportedMultipleProceeds","advice","rule","console","error","executeBeforeAdvice","Error","constructor","name","executeAroundAdvice","proceed","executeAfterAdvice","performUnderlyingOperation","executeProceedCallback","callback","executeBefore","executeAround","hasProceeded","params","fn","finalParams","finalFn","executeAfter","return"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2020 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { isArray } from \"js-utl\";\n\n/**\n * @type {Symbol}\n */\nconst noReturnValue = Symbol(\"noReturnValue\");\n\nexport default class TrapExecutor {\n  execContextStack = [];\n  execContextID = -1;\n\n  execute(trapArgs, before, around, after) {\n    this.newExecutionContext();\n    this.setUpExecutionContext(before, around);\n    this.startExecutionContext(trapArgs);\n    this.beforePhase(trapArgs, before);\n    this.aroundPhase(trapArgs, around);\n    const returnValue = this.proceedPhase(trapArgs);\n    this.afterPhase(trapArgs, after, returnValue);\n    this.endExecutionContext(trapArgs);\n    this.cleanUpExecutionContext();\n    return returnValue;\n  }\n\n  /**\n   * @private\n   */\n  newExecutionContext() {\n    const context = {\n      proceeds: [],\n      hasAtLeastOneAroundAdvice: false,\n      hasAtLeastOneBeforeAdvice: false,\n      returnValue: noReturnValue\n    };\n    this.execContextStack.push(context);\n    this.execContextID++;\n  }\n\n  /**\n   * @private\n   */\n  setUpExecutionContext(before, around) {\n    this.execContextStack[\n      this.execContextID\n    ].hasAtLeastOneBeforeAdvice = !!before.length;\n    this.execContextStack[\n      this.execContextID\n    ].hasAtLeastOneAroundAdvice = !!around.length;\n  }\n\n  /* eslint-disable no-unused-vars, @typescript-eslint/no-empty-function */\n  startExecutionContext(trapArgs) {}\n  /* eslint-enable no-unused-vars, @typescript-eslint/no-empty-function */\n\n  /* eslint-disable no-unused-vars, @typescript-eslint/no-empty-function */\n  endExecutionContext(trapArgs) {}\n  /* eslint-enable no-unused-vars, @typescript-eslint/no-empty-function */\n\n  /**\n   * @private\n   */\n  cleanUpExecutionContext() {\n    this.execContextStack.pop();\n    this.execContextID--;\n  }\n\n  /**\n   * @private\n   */\n  unsupportedMultipleProceeds(advice, rule) {\n    // eslint-disable-next-line no-console\n    console.error(\n      \"pigretto - Multiple proceeds for the same advice are not supported, subsequent proceed has been ignored.\",\n      \"\\n\\tadvice: \",\n      advice,\n      \"\\n\\trule: \",\n      rule\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  executeBeforeAdvice(trapArgs, advice, rule) {\n    throw new Error(\n      `pigretto - ${this.constructor.name} trap executor does not implement \"executeBeforeAdvice\".`\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  executeAroundAdvice(trapArgs, advice, rule, proceed) {\n    throw new Error(\n      `pigretto - ${this.constructor.name} trap executor does not implement \"executeAroundAdvice\".`\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  executeAfterAdvice(trapArgs, advice, rule, returnValue) {\n    throw new Error(\n      `pigretto - ${this.constructor.name} trap executor does not implement \"executeAfterAdvice\".`\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  performUnderlyingOperation(trapArgs) {\n    throw new Error(\n      `pigretto - ${this.constructor.name} trap executor does not implement \"performUnderlyingOperation\".`\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  executeProceedCallback(trapArgs, rule, returnValue, callback) {\n    throw new Error(\n      `pigretto - ${this.constructor.name} trap executor does not implement \"executeProceedCallback\".`\n    );\n  }\n\n  /**\n   * @private\n   */\n  beforePhase(trapArgs, before) {\n    for (const { rule, advice } of before) {\n      this.executeBefore(trapArgs, advice, rule);\n    }\n  }\n\n  /**\n   * @private\n   */\n  executeBefore(trapArgs, advice, rule) {\n    this.executeBeforeAdvice(trapArgs, advice, rule);\n  }\n\n  /**\n   * @private\n   */\n  aroundPhase(trapArgs, around) {\n    for (const { rule, advice } of around) {\n      this.executeAround(trapArgs, advice, rule);\n      if (\n        this.execContextStack[this.execContextID].returnValue !== noReturnValue\n      ) {\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  executeAround(trapArgs, advice, rule) {\n    let hasProceeded = false;\n    const proceed = (params = void 0, fn = void 0) => {\n      if (hasProceeded) {\n        this.unsupportedMultipleProceeds(advice, rule);\n        return;\n      }\n      hasProceeded = true;\n      let finalParams = void 0;\n      let finalFn = void 0;\n      if (isArray(params)) {\n        finalParams = params;\n        finalFn = typeof fn === \"function\" ? fn : void 0;\n      } else if (typeof params === \"function\") {\n        finalFn = params;\n      }\n      this.execContextStack[this.execContextID].proceeds.push({\n        params: finalParams,\n        fn: finalFn,\n        rule\n      });\n    };\n    const returnValue = this.executeAroundAdvice(\n      trapArgs,\n      advice,\n      rule,\n      proceed\n    );\n    if (!hasProceeded) {\n      this.execContextStack[this.execContextID].returnValue = returnValue;\n    }\n  }\n\n  /**\n   * @private\n   */\n  afterPhase(trapArgs, after, returnValue) {\n    for (const { rule, advice } of after) {\n      this.executeAfter(trapArgs, advice, rule, returnValue);\n    }\n  }\n\n  /**\n   * @private\n   */\n  executeAfter(trapArgs, advice, rule, returnValue) {\n    this.executeAfterAdvice(trapArgs, advice, rule, returnValue);\n  }\n\n  /**\n   * @private\n   */\n  proceedPhase(trapArgs) {\n    if (\n      this.execContextStack[this.execContextID].returnValue !== noReturnValue\n    ) {\n      return this.return(\n        trapArgs,\n        this.execContextStack[this.execContextID].returnValue\n      );\n    }\n    let returnValue = this.performUnderlyingOperation(trapArgs);\n    for (const { fn: callback, rule } of this.execContextStack[\n      this.execContextID\n    ].proceeds) {\n      if (typeof callback === \"function\") {\n        returnValue = this.executeProceedCallback(\n          trapArgs,\n          rule,\n          returnValue,\n          callback\n        );\n      }\n    }\n    return this.return(trapArgs, returnValue);\n  }\n\n  return(trapArgs, returnValue) {\n    return returnValue;\n  }\n}\n"],"file":"TrapExecutor.js"}