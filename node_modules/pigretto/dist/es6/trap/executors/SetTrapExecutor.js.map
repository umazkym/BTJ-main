{"version":3,"sources":["../../../../src/trap/executors/SetTrapExecutor.js"],"names":["TrapExecutor","reflectSet","reflectGet","SetTrapExecutor","startExecutionContext","target","property","receiver","Object","prototype","hasOwnProperty","call","previousPropertyValueMap","execContextID","previousPropertyValue","returnNewPropertyValueMap","updateWasSuccessfulMap","endExecutionContext","executeBeforeAdvice","value","advice","rule","context","fn","apply","executeAroundAdvice","proceed","executeAfterAdvice","updateWasSuccessful","newPropertyValue","performUnderlyingOperation","executeProceedCallback","callback","returnValue","return"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2020 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport TrapExecutor from \"./TrapExecutor\";\nimport reflectSet from \"../reflect/reflectSet\";\nimport reflectGet from \"../reflect/reflectGet\";\n\nexport default class SetTrapExecutor extends TrapExecutor {\n  previousPropertyValueMap = {};\n  returnNewPropertyValueMap = {};\n  updateWasSuccessfulMap = {};\n\n  startExecutionContext([target, property, , receiver]) {\n    if (\n      !Object.prototype.hasOwnProperty.call(\n        this.previousPropertyValueMap,\n        this.execContextID\n      )\n    ) {\n      const previousPropertyValue = reflectGet(target, property, receiver);\n      this.previousPropertyValueMap[this.execContextID] = previousPropertyValue;\n      this.returnNewPropertyValueMap[this.execContextID] = void 0;\n      this.updateWasSuccessfulMap[this.execContextID] = false;\n    }\n  }\n\n  endExecutionContext([, , ,]) {\n    delete this.previousPropertyValueMap[this.execContextID];\n    delete this.returnNewPropertyValueMap[this.execContextID];\n    delete this.updateWasSuccessfulMap[this.execContextID];\n  }\n\n  executeBeforeAdvice([target, property, value, receiver], advice, rule) {\n    const previousPropertyValue = this.previousPropertyValueMap[\n      this.execContextID\n    ];\n    const context = {\n      target,\n      property,\n      value,\n      receiver,\n      rule,\n    };\n    advice.fn.apply(context, [previousPropertyValue]);\n  }\n\n  executeAroundAdvice(\n    [target, property, value, receiver],\n    advice,\n    rule,\n    proceed\n  ) {\n    const previousPropertyValue = this.previousPropertyValueMap[\n      this.execContextID\n    ];\n    const context = {\n      target,\n      property,\n      value,\n      receiver,\n      rule,\n    };\n    return advice.fn\n      .call(context, proceed)\n      .apply(context, [previousPropertyValue]);\n  }\n\n  executeAfterAdvice(\n    [target, property, value, receiver],\n    advice,\n    rule,\n    updateWasSuccessful\n  ) {\n    const previousPropertyValue = this.previousPropertyValueMap[\n      this.execContextID\n    ];\n    const newPropertyValue = this.returnNewPropertyValueMap[this.execContextID];\n    const context = {\n      target,\n      property,\n      value,\n      receiver,\n      rule,\n      updateWasSuccessful,\n    };\n    advice.fn\n      .call(context, previousPropertyValue)\n      .apply(context, [newPropertyValue]);\n  }\n\n  performUnderlyingOperation([target, property, value, receiver]) {\n    const updateWasSuccessful = reflectSet(target, property, value, receiver);\n    this.updateWasSuccessfulMap[this.execContextID] = updateWasSuccessful;\n    this.returnNewPropertyValueMap[this.execContextID] = value;\n    return value;\n  }\n\n  executeProceedCallback(\n    [target, property, value, receiver],\n    rule,\n    newPropertyValue,\n    callback\n  ) {\n    const context = {\n      target,\n      property,\n      value,\n      receiver,\n      rule,\n    };\n    const returnValue = callback.apply(context, [newPropertyValue]);\n    return returnValue;\n  }\n\n  return([target, property, , receiver], returnValue) {\n    if (returnValue !== this.returnNewPropertyValueMap[this.execContextID]) {\n      this.performUnderlyingOperation([\n        target,\n        property,\n        returnValue,\n        receiver,\n      ]);\n    }\n    return this.updateWasSuccessfulMap[this.execContextID];\n  }\n}\n"],"file":"SetTrapExecutor.js"}