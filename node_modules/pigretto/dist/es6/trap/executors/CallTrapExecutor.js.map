{"version":3,"sources":["../../../../src/trap/executors/CallTrapExecutor.js"],"names":["TrapExecutor","withFunctionTrapExecutor","isEmpty","CallTrapExecutor","getTrapArgsArgumentsListIndex","execute","target","property","receiver","propertyValue","before","around","after","some","advices","superExecute","trapArgs","wrapperFn","args","boundThis","bind","executeBeforeAdvice","argumentsList","advice","rule","context","fn","apply","executeAroundAdvice","proceed","call","executeAfterAdvice","returnValue","performUnderlyingOperation","originalFn","executeProceedCallback","callback"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,wBAAT,QAAyC,uCAAzC;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,eAAeD,wBAAwB,CACrC,MAAME,gBAAN,SAA+BH,YAA/B,CAA4C;AAC1CI,EAAAA,6BAA6B,GAAG;AAC9B,WAAO,CAAP;AACD;;AAEDC,EAAAA,OAAO,CACL,CAACC,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6BC,aAA7B,CADK,EAELC,MAFK,EAGLC,MAHK,EAILC,KAJK,EAKL;AACA,QACE,OAAOH,aAAP,KAAyB,UAAzB,IACA,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,CAA6BC,OAAO,IAAI,CAACZ,OAAO,CAACY,OAAD,CAAhD,CAFF,EAGE;AACA,YAAMC,YAAY,GAAGC,QAAQ,IAAI;AAC/B,eAAO,MAAMX,OAAN,CAAcW,QAAd,EAAwBN,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,CAAP;AACD,OAFD;;AAGA,YAAMK,SAAS,GAAG,UAAU,GAAGC,IAAb,EAAmB;AACnC,YAAIC,SAAJ;;AACA,YAAI,SAASX,QAAb,EAAuB;AACrBW,UAAAA,SAAS,GAAG,IAAZ;AACD,SAFD,MAEO;AACLA,UAAAA,SAAS,GAAGb,MAAZ;AACD;;AACDG,QAAAA,aAAa,GAAGA,aAAa,CAACW,IAAd,CAAmBD,SAAnB,CAAhB;AACA,cAAMH,QAAQ,GAAG,CAACV,MAAD,EAASC,QAAT,EAAmBC,QAAnB,EAA6BC,aAA7B,EAA4CS,IAA5C,CAAjB;AACA,eAAOH,YAAY,CAACC,QAAD,CAAnB;AACD,OAVD;;AAWA,aAAOC,SAAP;AACD;;AACD,WAAOR,aAAP;AACD;;AAEDY,EAAAA,mBAAmB,CACjB,CAACf,MAAD,EAASC,QAAT,EAAmBC,QAAnB,GAA+Bc,aAA/B,CADiB,EAEjBC,MAFiB,EAGjBC,IAHiB,EAIjB;AACA,UAAMC,OAAO,GAAG;AACdnB,MAAAA,MADc;AAEdC,MAAAA,QAFc;AAGdC,MAAAA,QAHc;AAIdgB,MAAAA;AAJc,KAAhB;AAMAD,IAAAA,MAAM,CAACG,EAAP,CAAUC,KAAV,CAAgBF,OAAhB,EAAyBH,aAAzB;AACD;;AAEDM,EAAAA,mBAAmB,CACjB,CAACtB,MAAD,EAASC,QAAT,EAAmBC,QAAnB,GAA+Bc,aAA/B,CADiB,EAEjBC,MAFiB,EAGjBC,IAHiB,EAIjBK,OAJiB,EAKjB;AACA,UAAMJ,OAAO,GAAG;AACdnB,MAAAA,MADc;AAEdC,MAAAA,QAFc;AAGdC,MAAAA,QAHc;AAIdgB,MAAAA;AAJc,KAAhB;AAMA,WAAOD,MAAM,CAACG,EAAP,CAAUI,IAAV,CAAeL,OAAf,EAAwBI,OAAxB,EAAiCF,KAAjC,CAAuCF,OAAvC,EAAgDH,aAAhD,CAAP;AACD;;AAEDS,EAAAA,kBAAkB,CAChB,CAACzB,MAAD,EAASC,QAAT,EAAmBC,QAAnB,GAA+Bc,aAA/B,CADgB,EAEhBC,MAFgB,EAGhBC,IAHgB,EAIhBQ,WAJgB,EAKhB;AACA,UAAMP,OAAO,GAAG;AACdnB,MAAAA,MADc;AAEdC,MAAAA,QAFc;AAGdC,MAAAA,QAHc;AAIdgB,MAAAA;AAJc,KAAhB;AAMAD,IAAAA,MAAM,CAACG,EAAP,CAAUI,IAAV,CAAeL,OAAf,EAAwB,GAAGH,aAA3B,EAA0CK,KAA1C,CAAgDF,OAAhD,EAAyD,CAACO,WAAD,CAAzD;AACD;;AAEDC,EAAAA,0BAA0B,CAAC,KAAOC,UAAP,EAAmBZ,aAAnB,CAAD,EAAoC;AAC5D,UAAMU,WAAW,GAAGE,UAAU,CAAC,GAAGZ,aAAJ,CAA9B;AACA,WAAOU,WAAP;AACD;;AAEDG,EAAAA,sBAAsB,CACpB,CAAC7B,MAAD,EAASC,QAAT,EAAmBC,QAAnB,GAA+Bc,aAA/B,CADoB,EAEpBE,IAFoB,EAGpBQ,WAHoB,EAIpBI,QAJoB,EAKpB;AACA,UAAMX,OAAO,GAAG;AACdnB,MAAAA,MADc;AAEdC,MAAAA,QAFc;AAGdC,MAAAA,QAHc;AAIdgB,MAAAA,IAJc;AAKdF,MAAAA;AALc,KAAhB;AAOA,WAAOc,QAAQ,CAACT,KAAT,CAAeF,OAAf,EAAwB,CAACO,WAAD,CAAxB,CAAP;AACD;;AAjGyC,CADP,CAAvC","sourcesContent":["/*\n * Copyright (c) 2020 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport TrapExecutor from \"./TrapExecutor\";\nimport { withFunctionTrapExecutor } from \"./behaviours/withFunctionTrapExecutor\";\nimport { isEmpty } from \"js-utl\";\n\nexport default withFunctionTrapExecutor(\n  class CallTrapExecutor extends TrapExecutor {\n    getTrapArgsArgumentsListIndex() {\n      return 4;\n    }\n\n    execute(\n      [target, property, receiver, propertyValue],\n      before,\n      around,\n      after\n    ) {\n      if (\n        typeof propertyValue === \"function\" &&\n        [before, around, after].some(advices => !isEmpty(advices))\n      ) {\n        const superExecute = trapArgs => {\n          return super.execute(trapArgs, before, around, after);\n        };\n        const wrapperFn = function (...args) {\n          let boundThis;\n          if (this !== receiver) {\n            boundThis = this;\n          } else {\n            boundThis = target;\n          }\n          propertyValue = propertyValue.bind(boundThis);\n          const trapArgs = [target, property, receiver, propertyValue, args];\n          return superExecute(trapArgs);\n        };\n        return wrapperFn;\n      }\n      return propertyValue;\n    }\n\n    executeBeforeAdvice(\n      [target, property, receiver, , argumentsList],\n      advice,\n      rule\n    ) {\n      const context = {\n        target,\n        property,\n        receiver,\n        rule,\n      };\n      advice.fn.apply(context, argumentsList);\n    }\n\n    executeAroundAdvice(\n      [target, property, receiver, , argumentsList],\n      advice,\n      rule,\n      proceed\n    ) {\n      const context = {\n        target,\n        property,\n        receiver,\n        rule,\n      };\n      return advice.fn.call(context, proceed).apply(context, argumentsList);\n    }\n\n    executeAfterAdvice(\n      [target, property, receiver, , argumentsList],\n      advice,\n      rule,\n      returnValue\n    ) {\n      const context = {\n        target,\n        property,\n        receiver,\n        rule,\n      };\n      advice.fn.call(context, ...argumentsList).apply(context, [returnValue]);\n    }\n\n    performUnderlyingOperation([, , , originalFn, argumentsList]) {\n      const returnValue = originalFn(...argumentsList);\n      return returnValue;\n    }\n\n    executeProceedCallback(\n      [target, property, receiver, , argumentsList],\n      rule,\n      returnValue,\n      callback\n    ) {\n      const context = {\n        target,\n        property,\n        receiver,\n        rule,\n        argumentsList,\n      };\n      return callback.apply(context, [returnValue]);\n    }\n  }\n);\n"],"file":"CallTrapExecutor.js"}