{"version":3,"sources":["../../../src/rules/rulesGenerator.js"],"names":["declarativeFactory","isArray","objectRulesGenerator","proxyRules","ruleKeys","Reflect","ownKeys","ruleKey","pointcut","rule","arrayRulesGenerator","proxyRule","rulesGenerator","generator"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAOA,kBAAP,MAA+B,qBAA/B;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,MAAMC,oBAAoB,GAAG,WAAUC,UAAV,EAAsB;AACjD,QAAMC,QAAQ,GAAGC,OAAO,CAACC,OAAR,CAAgBH,UAAhB,CAAjB;;AACA,OAAK,MAAMI,OAAX,IAAsBH,QAAtB,EAAgC;AAC9B,UAAMI,QAAQ,GAAGL,UAAU,CAACI,OAAD,CAA3B;AACA,UAAM;AAAEE,MAAAA,IAAI,EAAEF,OAAR;AAAiBC,MAAAA;AAAjB,KAAN;AACD;AACF,CAND;;AAQA,MAAME,mBAAmB,GAAG,WAAUP,UAAV,EAAsB;AAChD,OAAK,MAAMQ,SAAX,IAAwBR,UAAxB,EAAoC;AAClC,QAAIF,OAAO,CAACU,SAAD,CAAX,EAAwB;AACtB;AACA,YAAM,CAACF,IAAD,EAAOD,QAAP,IAAmBG,SAAzB;AACA,YAAM;AAAEF,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAN;AACD,KAJD,MAIO;AACL;AACA,aAAON,oBAAoB,CAACS,SAAD,CAA3B;AACD;AACF;AACF,CAXD;AAaA;;;;;;;;;;;;AAUA,eAAe,UAAUC,cAAV,CAAyBT,UAAzB,EAAqC;AAClD,QAAMU,SAAS,GAAGb,kBAAkB,CAAC,CACnC,CAACC,OAAO,CAACE,UAAD,CAAR,EAAsBO,mBAAtB,CADmC,EAEnCR,oBAFmC,CAAD,CAApC;AAIA,SAAOW,SAAS,CAACV,UAAD,CAAhB;AACD","sourcesContent":["/*\n * Copyright (c) 2020 Anton Bagdatyev (Tonix)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport declarativeFactory from \"declarative-factory\";\nimport { isArray } from \"js-utl\";\n\nconst objectRulesGenerator = function*(proxyRules) {\n  const ruleKeys = Reflect.ownKeys(proxyRules);\n  for (const ruleKey of ruleKeys) {\n    const pointcut = proxyRules[ruleKey];\n    yield { rule: ruleKey, pointcut };\n  }\n};\n\nconst arrayRulesGenerator = function*(proxyRules) {\n  for (const proxyRule of proxyRules) {\n    if (isArray(proxyRule)) {\n      // Tuple.\n      const [rule, pointcut] = proxyRule;\n      yield { rule, pointcut };\n    } else {\n      // Object.\n      yield* objectRulesGenerator(proxyRule);\n    }\n  }\n};\n\n/**\n * A generator for proxy rules.\n *\n * @param {Object|Array} proxyRules An array of proxy rules or object with rules as keys.\n * @yields {Object} The next rule object, having two keys:\n *\n *                      - rule: The rule, as-is (as given by the client code);\n *                      - pointcut: The pointcut associated with that rule.\n *\n */\nexport default function* rulesGenerator(proxyRules) {\n  const generator = declarativeFactory([\n    [isArray(proxyRules), arrayRulesGenerator],\n    objectRulesGenerator\n  ]);\n  yield* generator(proxyRules);\n}\n"],"file":"rulesGenerator.js"}